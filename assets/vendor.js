/*! For license information please see vendor.js.LICENSE.txt */
(self.webpackChunk=self.webpackChunk||[]).push([[121],{27:(e,t,n)=>{"use strict";var r=n(2203),s=n(3052)(!0);r(r.P,"Array",{includes:function(e){return s(this,e,arguments.length>1?arguments[1]:void 0)}}),n(8980)("includes")},55:(e,t,n)=>{var r=n(6435),s=n(8805),a=n(2263),i=n(6073),o=n(2203),u=n(2360),l=n(296),c=n(373);o(o.S,"Reflect",{set:function e(t,n,o){var h,d,p=arguments.length<4?t:arguments[3],f=s.f(l(t),n);if(!f){if(c(d=a(t)))return e(d,n,o,p);f=u(0)}if(i(f,"value")){if(!1===f.writable||!c(p))return!1;if(h=s.f(p,n)){if(h.get||h.set||!1===h.writable)return!1;h.value=o,r.f(p,n,h)}else r.f(p,n,u(0,o));return!0}return void 0!==f.set&&(f.set.call(p,o),!0)}})},70:(e,t,n)=>{var r=n(8436),s=n(6656);e.exports=function(e){return function(){if(r(this)!=e)throw TypeError(e+"#toJSON isn't generic");return s(this)}}},104:(e,t,n)=>{var r=n(2203);r(r.G,{global:n(1226)})},127:(e,t,n)=>{var r=n(9370)("iterator"),s=!1;try{var a=[7][r]();a.return=function(){s=!0},Array.from(a,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!s)return!1;var n=!1;try{var a=[7],i=a[r]();i.next=function(){return{done:n=!0}},a[r]=function(){return i},e(a)}catch(e){}return n}},137:(e,t,n)=>{var r=n(2203),s=n(6465);r(r.S+r.F*(Number.parseFloat!=s),"Number",{parseFloat:s})},256:(e,t,n)=>{var r=n(6435).f,s=n(6073),a=n(9370)("toStringTag");e.exports=function(e,t,n){e&&!s(e=n?e:e.prototype,a)&&r(e,a,{configurable:!0,value:t})}},257:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{log1p:n(2549)})},278:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,s,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var o=0;o<this.length;o++){var u=this[o][0];null!=u&&(i[u]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),s&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=s):c[4]="".concat(s)),t.push(c))}},t}},296:(e,t,n)=>{var r=n(373);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},309:(e,t,n)=>{var r=n(2203);r(r.P+r.R,"Map",{toJSON:n(70)("Map")})},355:(e,t,n)=>{var r=n(2203),s=n(2793);r(r.S,"Math",{cbrt:function(e){return s(e=+e)*Math.pow(Math.abs(e),1/3)}})},373:e=>{e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},378:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{fround:n(1046)})},381:(e,t,n)=>{var r=n(2203),s=n(7544);r(r.G+r.B,{setImmediate:s.set,clearImmediate:s.clear})},402:(e,t,n)=>{var r=n(2203),s=n(2603),a=Math.exp;r(r.S+r.F*n(1508)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(s(e)-s(-e))/2:(a(e-1)-a(-e-1))*(Math.E/2)}})},414:(e,t,n)=>{"use strict";var r=n(2203),s=n(5482),a=n(7988);r(r.P+r.F*n(1508)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var t=s(this),n=a(t);return"number"!=typeof n||isFinite(n)?t.toISOString():null}})},432:(e,t,n)=>{var r=n(1574),s=n(2203),a=n(3056)("metadata"),i=a.store||(a.store=new(n(6497))),o=function(e,t,n){var s=i.get(e);if(!s){if(!n)return;i.set(e,s=new r)}var a=s.get(t);if(!a){if(!n)return;s.set(t,a=new r)}return a};e.exports={store:i,map:o,has:function(e,t,n){var r=o(t,n,!1);return void 0!==r&&r.has(e)},get:function(e,t,n){var r=o(t,n,!1);return void 0===r?void 0:r.get(e)},set:function(e,t,n,r){o(n,r,!0).set(e,t)},keys:function(e,t){var n=o(e,t,!1),r=[];return n&&n.forEach((function(e,t){r.push(t)})),r},key:function(e){return void 0===e||"symbol"==typeof e?e:String(e)},exp:function(e){s(s.S,"Reflect",e)}}},454:(e,t,n)=>{var r=n(2203),s=n(9106)(!0);r(r.S,"Object",{entries:function(e){return s(e)}})},522:(e,t,n)=>{"use strict";var r=n(2203),s=n(6622),a=n(5482),i=n(5129),o=n(7299),u=n(2928);r(r.P,"Array",{flatten:function(){var e=arguments[0],t=a(this),n=i(t.length),r=u(t,0);return s(r,t,t,n,0,void 0===e?1:o(e)),r}}),n(8980)("flatten")},544:(e,t,n)=>{"use strict";var r=n(768)(!0);e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},596:(e,t,n)=>{"use strict";var r=n(2203),s=n(1119)(0),a=n(6688)([].forEach,!0);r(r.P+r.F*!a,"Array",{forEach:function(e){return s(this,e,arguments[1])}})},633:(e,t,n)=>{var r=n(1226),s=n(4636),a=n(6435).f,i=n(6971).f,o=n(4047),u=n(2506),l=r.RegExp,c=l,h=l.prototype,d=/a/g,p=/a/g,f=new l(d)!==d;if(n(1711)&&(!f||n(1508)((function(){return p[n(9370)("match")]=!1,l(d)!=d||l(p)==p||"/a/i"!=l(d,"i")})))){l=function(e,t){var n=this instanceof l,r=o(e),a=void 0===t;return!n&&r&&e.constructor===l&&a?e:s(f?new c(r&&!a?e.source:e,t):c((r=e instanceof l)?e.source:e,r&&a?u.call(e):t),n?this:h,l)};for(var g=function(e){e in l||a(l,e,{configurable:!0,get:function(){return c[e]},set:function(t){c[e]=t}})},m=i(c),b=0;m.length>b;)g(m[b++]);h.constructor=l,l.prototype=h,n(8335)(r,"RegExp",l)}n(4422)("RegExp")},680:(e,t,n)=>{var r=n(1226).document;e.exports=r&&r.documentElement},683:(e,t,n)=>{var r=n(8279),s=n(5482),a=n(2725),i=n(5129);e.exports=function(e,t,n,o,u){r(t);var l=s(e),c=a(l),h=i(l.length),d=u?h-1:0,p=u?-1:1;if(n<2)for(;;){if(d in c){o=c[d],d+=p;break}if(d+=p,u?d<0:h<=d)throw TypeError("Reduce of empty array with no initial value")}for(;u?d>=0:h>d;d+=p)d in c&&(o=t(o,c[d],d,l));return o}},718:(e,t,n)=>{"use strict";var r=n(2203),s=n(7361),a=n(9748),i=n(296),o=n(777),u=n(5129),l=n(373),c=n(1226).ArrayBuffer,h=n(5690),d=a.ArrayBuffer,p=a.DataView,f=s.ABV&&c.isView,g=d.prototype.slice,m=s.VIEW,b="ArrayBuffer";r(r.G+r.W+r.F*(c!==d),{ArrayBuffer:d}),r(r.S+r.F*!s.CONSTR,b,{isView:function(e){return f&&f(e)||l(e)&&m in e}}),r(r.P+r.U+r.F*n(1508)((function(){return!new d(2).slice(1,void 0).byteLength})),b,{slice:function(e,t){if(void 0!==g&&void 0===t)return g.call(i(this),e);for(var n=i(this).byteLength,r=o(e,n),s=o(void 0===t?n:t,n),a=new(h(this,d))(u(s-r)),l=new p(this),c=new p(a),f=0;r<s;)c.setUint8(f++,l.getUint8(r++));return a}}),n(4422)(b)},733:(e,t,n)=>{"use strict";var r=n(2203),s=n(3126),a=n(8668);r(r.S,"Promise",{try:function(e){var t=s.f(this),n=a(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},757:(e,t,n)=>{"use strict";var r=n(2203),s=n(1119)(6),a="findIndex",i=!0;a in[]&&Array(1)[a]((function(){i=!1})),r(r.P+r.F*i,"Array",{findIndex:function(e){return s(this,e,arguments.length>1?arguments[1]:void 0)}}),n(8980)(a)},762:(e,t,n)=>{var r=n(4047),s=n(3116);e.exports=function(e,t,n){if(r(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(s(e))}},768:(e,t,n)=>{var r=n(7299),s=n(3116);e.exports=function(e){return function(t,n){var a,i,o=String(s(t)),u=r(n),l=o.length;return u<0||u>=l?e?"":void 0:(a=o.charCodeAt(u))<55296||a>56319||u+1===l||(i=o.charCodeAt(u+1))<56320||i>57343?e?o.charAt(u):a:e?o.slice(u,u+2):i-56320+(a-55296<<10)+65536}}},777:(e,t,n)=>{var r=n(7299),s=Math.max,a=Math.min;e.exports=function(e,t){return(e=r(e))<0?s(e+t,0):a(e,t)}},811:(e,t,n)=>{n(2775)("Map")},852:(e,t,n)=>{t.f=n(9370)},891:e=>{e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},907:(e,t,n)=>{"use strict";n(6984)("sub",(function(e){return function(){return e(this,"sub","","")}}))},941:(e,t,n)=>{var r=n(2203),s=Math.exp;r(r.S,"Math",{cosh:function(e){return(s(e=+e)+s(-e))/2}})},978:(e,t,n)=>{var r=n(373),s=n(9721),a=n(9370)("species");e.exports=function(e){var t;return s(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!s(t.prototype)||(t=void 0),r(t)&&null===(t=t[a])&&(t=void 0)),void 0===t?Array:t}},1026:e=>{"use strict";e.exports=function(e){return e[1]}},1038:(e,t,n)=>{var r=n(373),s=n(296),a=function(e,t){if(s(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n(9680)(Function.call,n(8805).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return a(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:a}},1044:(e,t,n)=>{var r=n(5129),s=n(9402),a=n(3116);e.exports=function(e,t,n,i){var o=String(a(e)),u=o.length,l=void 0===n?" ":String(n),c=r(t);if(c<=u||""==l)return o;var h=c-u,d=s.call(l,Math.ceil(h/l.length));return d.length>h&&(d=d.slice(0,h)),i?d+o:o+d}},1046:(e,t,n)=>{var r=n(2793),s=Math.pow,a=s(2,-52),i=s(2,-23),o=s(2,127)*(2-i),u=s(2,-126);e.exports=Math.fround||function(e){var t,n,s=Math.abs(e),l=r(e);return s<u?l*(s/u/i+1/a-1/a)*u*i:(n=(t=(1+i/a)*s)-(t-s))>o||n!=n?l*(1/0):l*n}},1055:(e,t,n)=>{var r=n(2203),s=n(8702);r(r.G+r.F*(parseInt!=s),{parseInt:s})},1065:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},1073:(e,t,n)=>{var r=n(6435),s=n(2360);e.exports=n(1711)?function(e,t,n){return r.f(e,t,s(1,n))}:function(e,t,n){return e[t]=n,e}},1119:(e,t,n)=>{var r=n(9680),s=n(2725),a=n(5482),i=n(5129),o=n(2928);e.exports=function(e,t){var n=1==e,u=2==e,l=3==e,c=4==e,h=6==e,d=5==e||h,p=t||o;return function(t,o,f){for(var g,m,b=a(t),x=s(b),y=r(o,f,3),v=i(x.length),w=0,k=n?p(t,v):u?p(t,0):void 0;v>w;w++)if((d||w in x)&&(m=y(g=x[w],w,b),e))if(n)k[w]=m;else if(m)switch(e){case 3:return!0;case 5:return g;case 6:return w;case 2:k.push(g)}else if(c)return!1;return h?-1:l||c?c:k}}},1121:(e,t,n)=>{"use strict";n(6984)("fontcolor",(function(e){return function(t){return e(this,"font","color",t)}}))},1153:(e,t,n)=>{"use strict";var r=n(4047),s=n(296),a=n(5690),i=n(544),o=n(5129),u=n(3091),l=n(4540),c=n(1508),h=Math.min,d=[].push,p="split",f="length",g="lastIndex",m=4294967295,b=!c((function(){RegExp(m,"y")}));n(4920)("split",2,(function(e,t,n,c){var x;return x="c"=="abbc"[p](/(b)*/)[1]||4!="test"[p](/(?:)/,-1)[f]||2!="ab"[p](/(?:ab)*/)[f]||4!="."[p](/(.?)(.?)/)[f]||"."[p](/()()/)[f]>1||""[p](/.?/)[f]?function(e,t){var s=String(this);if(void 0===e&&0===t)return[];if(!r(e))return n.call(s,e,t);for(var a,i,o,u=[],c=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),h=0,p=void 0===t?m:t>>>0,b=new RegExp(e.source,c+"g");(a=l.call(b,s))&&!((i=b[g])>h&&(u.push(s.slice(h,a.index)),a[f]>1&&a.index<s[f]&&d.apply(u,a.slice(1)),o=a[0][f],h=i,u[f]>=p));)b[g]===a.index&&b[g]++;return h===s[f]?!o&&b.test("")||u.push(""):u.push(s.slice(h)),u[f]>p?u.slice(0,p):u}:"0"[p](void 0,0)[f]?function(e,t){return void 0===e&&0===t?[]:n.call(this,e,t)}:n,[function(n,r){var s=e(this),a=null==n?void 0:n[t];return void 0!==a?a.call(n,s,r):x.call(String(s),n,r)},function(e,t){var r=c(x,e,this,t,x!==n);if(r.done)return r.value;var l=s(e),d=String(this),p=a(l,RegExp),f=l.unicode,g=(l.ignoreCase?"i":"")+(l.multiline?"m":"")+(l.unicode?"u":"")+(b?"y":"g"),y=new p(b?l:"^(?:"+l.source+")",g),v=void 0===t?m:t>>>0;if(0===v)return[];if(0===d.length)return null===u(y,d)?[d]:[];for(var w=0,k=0,I=[];k<d.length;){y.lastIndex=b?k:0;var S,C=u(y,b?d:d.slice(k));if(null===C||(S=h(o(y.lastIndex+(b?0:k)),d.length))===w)k=i(d,k,f);else{if(I.push(d.slice(w,k)),I.length===v)return I;for(var N=1;N<=C.length-1;N++)if(I.push(C[N]),I.length===v)return I;k=w=S}}return I.push(d.slice(w)),I}]}))},1176:(e,t,n)=>{"use strict";n(5818);var r=n(296),s=n(2506),a=n(1711),i="toString",o=/./[i],u=function(e){n(8335)(RegExp.prototype,i,e,!0)};n(1508)((function(){return"/a/b"!=o.call({source:"a",flags:"b"})}))?u((function(){var e=r(this);return"/".concat(e.source,"/","flags"in e?e.flags:!a&&e instanceof RegExp?s.call(e):void 0)})):o.name!=i&&u((function(){return o.call(this)}))},1216:(e,t,n)=>{"use strict";var r=n(2203),s=n(1044),a=n(5806),i=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(a);r(r.P+r.F*i,"String",{padStart:function(e){return s(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},1226:e=>{var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},1231:(e,t,n)=>{var r=n(2203),s=n(3922),a=n(1508);e.exports=function(e,t){var n=(s.Object||{})[e]||Object[e],i={};i[e]=t(n),r(r.S+r.F*a((function(){n(1)})),"Object",i)}},1250:(e,t,n)=>{var r=n(9680),s=n(8140),a=n(4384),i=n(296),o=n(5129),u=n(1894),l={},c={},h=e.exports=function(e,t,n,h,d){var p,f,g,m,b=d?function(){return e}:u(e),x=r(n,h,t?2:1),y=0;if("function"!=typeof b)throw TypeError(e+" is not iterable!");if(a(b)){for(p=o(e.length);p>y;y++)if((m=t?x(i(f=e[y])[0],f[1]):x(e[y]))===l||m===c)return m}else for(g=b.call(e);!(f=g.next()).done;)if((m=s(g,x,f.value,t))===l||m===c)return m};h.BREAK=l,h.RETURN=c},1252:(e,t,n)=>{n(3882)("Set")},1328:(e,t,n)=>{var r=n(2203),s=n(6465);r(r.G+r.F*(parseFloat!=s),{parseFloat:s})},1404:(e,t,n)=>{var r=n(373);n(1231)("isSealed",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},1448:(e,t,n)=>{n(8693)("Int16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},1495:(e,t,n)=>{"use strict";n(6984)("big",(function(e){return function(){return e(this,"big","","")}}))},1506:(e,t,n)=>{"use strict";var r=n(2203),s=n(6622),a=n(5482),i=n(5129),o=n(8279),u=n(2928);r(r.P,"Array",{flatMap:function(e){var t,n,r=a(this);return o(e),t=i(r.length),n=u(r,0),s(n,r,r,t,0,1,e,arguments[1]),n}}),n(8980)("flatMap")},1508:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},1565:(e,t,n)=>{var r=n(2203),s=n(4823)(/[\\^$*+?.()|[\]{}]/g,"\\$&");r(r.S,"RegExp",{escape:function(e){return s(e)}})},1574:(e,t,n)=>{"use strict";var r=n(9841),s=n(9407),a="Map";e.exports=n(4689)(a,(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var t=r.getEntry(s(this,a),e);return t&&t.v},set:function(e,t){return r.def(s(this,a),0===e?0:e,t)}},r,!0)},1580:(e,t,n)=>{var r=n(1226),s=n(7544).set,a=r.MutationObserver||r.WebKitMutationObserver,i=r.process,o=r.Promise,u="process"==n(6861)(i);e.exports=function(){var e,t,n,l=function(){var r,s;for(u&&(r=i.domain)&&r.exit();e;){s=e.fn,e=e.next;try{s()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(u)n=function(){i.nextTick(l)};else if(!a||r.navigator&&r.navigator.standalone)if(o&&o.resolve){var c=o.resolve(void 0);n=function(){c.then(l)}}else n=function(){s.call(r,l)};else{var h=!0,d=document.createTextNode("");new a(l).observe(d,{characterData:!0}),n=function(){d.data=h=!h}}return function(r){var s={fn:r,next:void 0};t&&(t.next=s),e||(e=s,n()),t=s}}},1647:(e,t,n)=>{var r=n(432),s=n(296),a=n(8279),i=r.key,o=r.set;r.exp({metadata:function(e,t){return function(n,r){o(e,t,(void 0!==r?s:a)(n),i(r))}}})},1651:(e,t,n)=>{var r=n(5482),s=n(5507);n(1231)("keys",(function(){return function(e){return s(r(e))}}))},1711:(e,t,n)=>{e.exports=!n(1508)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},1723:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},1736:(e,t,n)=>{"use strict";var r=n(4540);n(2203)({target:"RegExp",proto:!0,forced:r!==/./.exec},{exec:r})},1750:(e,t,n)=>{"use strict";var r=n(8279),s=n(373),a=n(4673),i=[].slice,o={};e.exports=Function.bind||function(e){var t=r(this),n=i.call(arguments,1),u=function(){var r=n.concat(i.call(arguments));return this instanceof u?function(e,t,n){if(!(t in o)){for(var r=[],s=0;s<t;s++)r[s]="a["+s+"]";o[t]=Function("F,a","return new F("+r.join(",")+")")}return o[t](e,n)}(t,r.length,r):a(t,r,e)};return s(t.prototype)&&(u.prototype=t.prototype),u}},1786:(e,t,n)=>{"use strict";var r=n(1711),s=n(5507),a=n(2e3),i=n(9661),o=n(5482),u=n(2725),l=Object.assign;e.exports=!l||n(1508)((function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=l({},e)[n]||Object.keys(l({},t)).join("")!=r}))?function(e,t){for(var n=o(e),l=arguments.length,c=1,h=a.f,d=i.f;l>c;)for(var p,f=u(arguments[c++]),g=h?s(f).concat(h(f)):s(f),m=g.length,b=0;m>b;)p=g[b++],r&&!d.call(f,p)||(n[p]=f[p]);return n}:l},1788:(e,t,n)=>{"use strict";var r=n(2203),s=n(1119)(4);r(r.P+r.F*!n(6688)([].every,!0),"Array",{every:function(e){return s(this,e,arguments[1])}})},1821:(e,t,n)=>{"use strict";var r=n(1508),s=Date.prototype.getTime,a=Date.prototype.toISOString,i=function(e){return e>9?e:"0"+e};e.exports=r((function(){return"0385-07-25T07:06:39.999Z"!=a.call(new Date(-50000000000001))}))||!r((function(){a.call(new Date(NaN))}))?function(){if(!isFinite(s.call(this)))throw RangeError("Invalid time value");var e=this,t=e.getUTCFullYear(),n=e.getUTCMilliseconds(),r=t<0?"-":t>9999?"+":"";return r+("00000"+Math.abs(t)).slice(r?-6:-4)+"-"+i(e.getUTCMonth()+1)+"-"+i(e.getUTCDate())+"T"+i(e.getUTCHours())+":"+i(e.getUTCMinutes())+":"+i(e.getUTCSeconds())+"."+(n>99?n:"0"+i(n))+"Z"}:a},1845:(e,t,n)=>{"use strict";e.exports=n(9618)||!n(1508)((function(){var e=Math.random();__defineSetter__.call(null,e,(function(){})),delete n(1226)[e]}))},1872:(e,t,n)=>{var r=n(432),s=n(296),a=r.keys,i=r.key;r.exp({getOwnMetadataKeys:function(e){return a(s(e),arguments.length<2?void 0:i(arguments[1]))}})},1879:(e,t,n)=>{"use strict";var r=n(3142),s=n(9407),a="WeakSet";n(4689)(a,(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(s(this,a),e,!0)}},r,!1,!0)},1888:e=>{e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},1894:(e,t,n)=>{var r=n(8436),s=n(9370)("iterator"),a=n(7238);e.exports=n(3922).getIteratorMethod=function(e){if(null!=e)return e[s]||e["@@iterator"]||a[r(e)]}},1896:(e,t,n)=>{var r=n(2203),s=n(296),a=Object.preventExtensions;r(r.S,"Reflect",{preventExtensions:function(e){s(e);try{return a&&a(e),!0}catch(e){return!1}}})},1897:(e,t,n)=>{n(8693)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}),!0)},1912:(e,t,n)=>{var r=n(1226),s=n(2203),a=n(5806),i=[].slice,o=/MSIE .\./.test(a),u=function(e){return function(t,n){var r=arguments.length>2,s=!!r&&i.call(arguments,2);return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,s)}:t,n)}};s(s.G+s.B+s.F*o,{setTimeout:u(r.setTimeout),setInterval:u(r.setInterval)})},1918:(e,t,n)=>{for(var r=n(8497),s=n(5507),a=n(8335),i=n(1226),o=n(1073),u=n(7238),l=n(9370),c=l("iterator"),h=l("toStringTag"),d=u.Array,p={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},f=s(p),g=0;g<f.length;g++){var m,b=f[g],x=p[b],y=i[b],v=y&&y.prototype;if(v&&(v[c]||o(v,c,d),v[h]||o(v,h,b),u[b]=d,x))for(m in r)v[m]||a(v,m,r[m],!0)}},1925:(e,t,n)=>{"use strict";var r=n(2203),s=n(1119)(1);r(r.P+r.F*!n(6688)([].map,!0),"Array",{map:function(e){return s(this,e,arguments[1])}})},1935:(e,t,n)=>{var r=n(432),s=n(296),a=r.key,i=r.set;r.exp({defineMetadata:function(e,t,n,r){i(e,t,s(n),a(r))}})},2e3:(e,t)=>{t.f=Object.getOwnPropertySymbols},2069:(e,t,n)=>{"use strict";n(5073)("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd")},2119:e=>{e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},2147:(e,t,n)=>{"use strict";var r=n(9680),s=n(2203),a=n(5482),i=n(8140),o=n(4384),u=n(5129),l=n(7583),c=n(1894);s(s.S+s.F*!n(127)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,s,h,d=a(e),p="function"==typeof this?this:Array,f=arguments.length,g=f>1?arguments[1]:void 0,m=void 0!==g,b=0,x=c(d);if(m&&(g=r(g,f>2?arguments[2]:void 0,2)),null==x||p==Array&&o(x))for(n=new p(t=u(d.length));t>b;b++)l(n,b,m?g(d[b],b):d[b]);else for(h=x.call(d),n=new p;!(s=h.next()).done;b++)l(n,b,m?i(h,g,[s.value,b],!0):s.value);return n.length=b,n}})},2158:(e,t,n)=>{var r=n(8805),s=n(2203),a=n(296);s(s.S,"Reflect",{getOwnPropertyDescriptor:function(e,t){return r.f(a(e),t)}})},2161:(e,t,n)=>{var r=n(7299),s=n(5129);e.exports=function(e){if(void 0===e)return 0;var t=r(e),n=s(t);if(t!==n)throw RangeError("Wrong length!");return n}},2169:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},2197:(e,t,n)=>{var r=Date.prototype,s="Invalid Date",a="toString",i=r[a],o=r.getTime;new Date(NaN)+""!=s&&n(8335)(r,a,(function(){var e=o.call(this);return e==e?i.call(this):s}))},2203:(e,t,n)=>{var r=n(1226),s=n(3922),a=n(1073),i=n(8335),o=n(9680),u="prototype",l=function(e,t,n){var c,h,d,p,f=e&l.F,g=e&l.G,m=e&l.S,b=e&l.P,x=e&l.B,y=g?r:m?r[t]||(r[t]={}):(r[t]||{})[u],v=g?s:s[t]||(s[t]={}),w=v[u]||(v[u]={});for(c in g&&(n=t),n)d=((h=!f&&y&&void 0!==y[c])?y:n)[c],p=x&&h?o(d,r):b&&"function"==typeof d?o(Function.call,d):d,y&&i(y,c,d,e&l.U),v[c]!=d&&a(v,c,p),b&&w[c]!=d&&(w[c]=d)};r.core=s,l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},2209:(e,t,n)=>{n(7158),n(5731),n(9396),n(3572),n(3662),n(7148),n(1651),n(6867),n(7904),n(9282),n(2552),n(7882),n(1404),n(8645),n(8986),n(3479),n(6048),n(4886),n(2754),n(8861),n(8962),n(1055),n(1328),n(5121),n(6203),n(7353),n(4775),n(3561),n(5998),n(5053),n(8100),n(9582),n(3268),n(137),n(5350),n(3140),n(7127),n(5420),n(355),n(4844),n(941),n(4991),n(378),n(9172),n(7731),n(6129),n(257),n(5428),n(3845),n(402),n(3369),n(3948),n(7264),n(5231),n(5633),n(9811),n(3657),n(5220),n(6548),n(5434),n(8677),n(7076),n(1495),n(7979),n(7650),n(5167),n(1121),n(9873),n(9960),n(2585),n(4614),n(5539),n(907),n(5549),n(3904),n(414),n(7025),n(2197),n(6291),n(4535),n(2147),n(3374),n(4419),n(9929),n(4247),n(596),n(1925),n(3977),n(2587),n(1788),n(7277),n(6734),n(8773),n(8078),n(4136),n(3566),n(3524),n(757),n(7149),n(8497),n(633),n(1736),n(1176),n(5818),n(2580),n(6389),n(5017),n(1153),n(5585),n(1574),n(8772),n(6497),n(1879),n(718),n(5512),n(9295),n(3634),n(1897),n(1448),n(9499),n(5470),n(6485),n(6945),n(9110),n(4219),n(2966),n(2372),n(4860),n(3853),n(3811),n(2158),n(4620),n(7231),n(5135),n(2668),n(1896),n(55),n(8704),n(27),n(1506),n(522),n(6875),n(1216),n(8977),n(3842),n(2069),n(7163),n(7800),n(2256),n(7834),n(8158),n(454),n(7839),n(8091),n(7848),n(4348),n(309),n(4483),n(7814),n(1252),n(9413),n(3503),n(811),n(5725),n(8096),n(6102),n(104),n(8901),n(7608),n(9280),n(5931),n(5782),n(9435),n(6697),n(6778),n(7446),n(5907),n(4189),n(2441),n(6394),n(5239),n(4651),n(733),n(1935),n(9519),n(8512),n(8481),n(2971),n(1872),n(7700),n(9103),n(1647),n(7830),n(9070),n(1912),n(381),n(1918),e.exports=n(3922)},2256:(e,t,n)=>{n(8428)("observable")},2263:(e,t,n)=>{var r=n(6073),s=n(5482),a=n(2450)("IE_PROTO"),i=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=s(e),r(e,a)?e[a]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?i:null}},2360:e=>{e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},2372:(e,t,n)=>{var r=n(6435),s=n(2203),a=n(296),i=n(7988);s(s.S+s.F*n(1508)((function(){Reflect.defineProperty(r.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(e,t,n){a(e),t=i(t,!0),a(n);try{return r.f(e,t,n),!0}catch(e){return!1}}})},2441:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{scale:n(4152)})},2450:(e,t,n)=>{var r=n(3056)("keys"),s=n(7131);e.exports=function(e){return r[e]||(r[e]=s(e))}},2506:(e,t,n)=>{"use strict";var r=n(296);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},2549:e=>{e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},2552:(e,t,n)=>{var r=n(373),s=n(9672).onFreeze;n(1231)("preventExtensions",(function(e){return function(t){return e&&r(t)?e(s(t)):t}}))},2580:(e,t,n)=>{"use strict";var r=n(296),s=n(5129),a=n(544),i=n(3091);n(4920)("match",1,(function(e,t,n,o){return[function(n){var r=e(this),s=null==n?void 0:n[t];return void 0!==s?s.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=o(n,e,this);if(t.done)return t.value;var u=r(e),l=String(this);if(!u.global)return i(u,l);var c=u.unicode;u.lastIndex=0;for(var h,d=[],p=0;null!==(h=i(u,l));){var f=String(h[0]);d[p]=f,""===f&&(u.lastIndex=a(l,s(u.lastIndex),c)),p++}return 0===p?null:d}]}))},2585:(e,t,n)=>{"use strict";n(6984)("link",(function(e){return function(t){return e(this,"a","href",t)}}))},2587:(e,t,n)=>{"use strict";var r=n(2203),s=n(1119)(3);r(r.P+r.F*!n(6688)([].some,!0),"Array",{some:function(e){return s(this,e,arguments[1])}})},2603:e=>{var t=Math.expm1;e.exports=!t||t(10)>22025.465794806718||t(10)<22025.465794806718||-2e-17!=t(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:t},2668:(e,t,n)=>{var r=n(2203);r(r.S,"Reflect",{ownKeys:n(6650)})},2725:(e,t,n)=>{var r=n(6861);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},2754:(e,t,n)=>{var r=n(2203);r(r.P,"Function",{bind:n(1750)})},2775:(e,t,n)=>{"use strict";var r=n(2203),s=n(8279),a=n(9680),i=n(1250);e.exports=function(e){r(r.S,e,{from:function(e){var t,n,r,o,u=arguments[1];return s(this),(t=void 0!==u)&&s(u),null==e?new this:(n=[],t?(r=0,o=a(u,arguments[2],2),i(e,!1,(function(e){n.push(o(e,r++))}))):i(e,!1,n.push,n),new this(n))}})}},2793:e=>{e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},2836:e=>{e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},2928:(e,t,n)=>{var r=n(978);e.exports=function(e,t){return new(r(e))(t)}},2966:(e,t,n)=>{var r=n(2203),s=n(3747),a=n(8279),i=n(296),o=n(373),u=n(1508),l=n(1750),c=(n(1226).Reflect||{}).construct,h=u((function(){function e(){}return!(c((function(){}),[],e)instanceof e)})),d=!u((function(){c((function(){}))}));r(r.S+r.F*(h||d),"Reflect",{construct:function(e,t){a(e),i(t);var n=arguments.length<3?e:a(arguments[2]);if(d&&!h)return c(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(l.apply(e,r))}var u=n.prototype,p=s(o(u)?u:Object.prototype),f=Function.apply.call(e,p,t);return o(f)?f:p}})},2971:(e,t,n)=>{var r=n(432),s=n(296),a=r.get,i=r.key;r.exp({getOwnMetadata:function(e,t){return a(e,s(t),arguments.length<3?void 0:i(arguments[2]))}})},2989:(e,t,n)=>{var r=n(5507),s=n(2e3),a=n(9661);e.exports=function(e){var t=r(e),n=s.f;if(n)for(var i,o=n(e),u=a.f,l=0;o.length>l;)u.call(e,i=o[l++])&&t.push(i);return t}},3052:(e,t,n)=>{var r=n(4473),s=n(5129),a=n(777);e.exports=function(e){return function(t,n,i){var o,u=r(t),l=s(u.length),c=a(i,l);if(e&&n!=n){for(;l>c;)if((o=u[c++])!=o)return!0}else for(;l>c;c++)if((e||c in u)&&u[c]===n)return e||c||0;return!e&&-1}}},3056:(e,t,n)=>{var r=n(3922),s=n(1226),a="__core-js_shared__",i=s[a]||(s[a]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(9618)?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},3091:(e,t,n)=>{"use strict";var r=n(8436),s=RegExp.prototype.exec;e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var a=n.call(e,t);if("object"!=typeof a)throw new TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==r(e))throw new TypeError("RegExp#exec called on incompatible receiver");return s.call(e,t)}},3113:(e,t,n)=>{var r=n(296),s=n(373),a=n(3126);e.exports=function(e,t){if(r(e),s(t)&&t.constructor===e)return t;var n=a.f(e);return(0,n.resolve)(t),n.promise}},3116:e=>{e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},3126:(e,t,n)=>{"use strict";var r=n(8279);function s(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new s(e)}},3140:(e,t,n)=>{var r=n(2203),s=n(2549),a=Math.sqrt,i=Math.acosh;r(r.S+r.F*!(i&&710==Math.floor(i(Number.MAX_VALUE))&&i(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:s(e-1+a(e-1)*a(e+1))}})},3142:(e,t,n)=>{"use strict";var r=n(8461),s=n(9672).getWeak,a=n(296),i=n(373),o=n(2836),u=n(1250),l=n(1119),c=n(6073),h=n(9407),d=l(5),p=l(6),f=0,g=function(e){return e._l||(e._l=new m)},m=function(){this.a=[]},b=function(e,t){return d(e.a,(function(e){return e[0]===t}))};m.prototype={get:function(e){var t=b(this,e);if(t)return t[1]},has:function(e){return!!b(this,e)},set:function(e,t){var n=b(this,e);n?n[1]=t:this.a.push([e,t])},delete:function(e){var t=p(this.a,(function(t){return t[0]===e}));return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,n,a){var l=e((function(e,r){o(e,l,t,"_i"),e._t=t,e._i=f++,e._l=void 0,null!=r&&u(r,n,e[a],e)}));return r(l.prototype,{delete:function(e){if(!i(e))return!1;var n=s(e);return!0===n?g(h(this,t)).delete(e):n&&c(n,this._i)&&delete n[this._i]},has:function(e){if(!i(e))return!1;var n=s(e);return!0===n?g(h(this,t)).has(e):n&&c(n,this._i)}}),l},def:function(e,t,n){var r=s(a(t),!0);return!0===r?g(e).set(t,n):r[e._i]=n,e},ufstore:g}},3268:(e,t,n)=>{var r=n(2203);r(r.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},3369:(e,t,n)=>{var r=n(2203),s=n(2603),a=Math.exp;r(r.S,"Math",{tanh:function(e){var t=s(e=+e),n=s(-e);return t==1/0?1:n==1/0?-1:(t-n)/(a(e)+a(-e))}})},3374:(e,t,n)=>{"use strict";var r=n(2203),s=n(7583);r(r.S+r.F*n(1508)((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,t=arguments.length,n=new("function"==typeof this?this:Array)(t);t>e;)s(n,e,arguments[e++]);return n.length=t,n}})},3478:(e,t,n)=>{var r=n(6435),s=n(296),a=n(5507);e.exports=n(1711)?Object.defineProperties:function(e,t){s(e);for(var n,i=a(t),o=i.length,u=0;o>u;)r.f(e,n=i[u++],t[n]);return e}},3479:(e,t,n)=>{var r=n(2203);r(r.S,"Object",{is:n(891)})},3503:(e,t,n)=>{n(3882)("WeakSet")},3524:(e,t,n)=>{"use strict";var r=n(2203),s=n(1119)(5),a="find",i=!0;a in[]&&Array(1)[a]((function(){i=!1})),r(r.P+r.F*i,"Array",{find:function(e){return s(this,e,arguments.length>1?arguments[1]:void 0)}}),n(8980)(a)},3561:(e,t,n)=>{var r=n(2203),s=n(1226).isFinite;r(r.S,"Number",{isFinite:function(e){return"number"==typeof e&&s(e)}})},3566:(e,t,n)=>{var r=n(2203);r(r.P,"Array",{fill:n(4912)}),n(8980)("fill")},3572:(e,t,n)=>{var r=n(2203);r(r.S+r.F*!n(1711),"Object",{defineProperties:n(3478)})},3586:(e,t,n)=>{"use strict";var r=n(5482),s=n(777),a=n(5129);e.exports=[].copyWithin||function(e,t){var n=r(this),i=a(n.length),o=s(e,i),u=s(t,i),l=arguments.length>2?arguments[2]:void 0,c=Math.min((void 0===l?i:s(l,i))-u,i-o),h=1;for(u<o&&o<u+c&&(h=-1,u+=c-1,o+=c-1);c-- >0;)u in n?n[o]=n[u]:delete n[o],o+=h,u+=h;return n}},3634:(e,t,n)=>{n(8693)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},3657:(e,t,n)=>{"use strict";var r=n(2203),s=n(768)(!1);r(r.P,"String",{codePointAt:function(e){return s(this,e)}})},3662:(e,t,n)=>{var r=n(4473),s=n(8805).f;n(1231)("getOwnPropertyDescriptor",(function(){return function(e,t){return s(r(e),t)}}))},3665:(e,t,n)=>{"use strict";if(n(2209),n(4424),n(9405),n.g._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");function r(e,t,n){e[t]||Object.defineProperty(e,t,{writable:!0,configurable:!0,value:n})}n.g._babelPolyfill=!0,r(String.prototype,"padLeft","".padStart),r(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach((function(e){[][e]&&r(Array,e,Function.call.bind([][e]))}))},3710:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:m;if(t){if(e<0)return b;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return w}return e<0?o(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return m;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(l(n,8)),a=m,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var d=o(l(n,u));a=a.mul(d).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,g=i(1<<24),m=i(0);n.ZERO=m;var b=i(0,!0);n.UZERO=b;var x=i(1);n.ONE=x;var y=i(1,!0);n.UONE=y;var v=i(-1);n.NEG_ONE=v;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(l(e,6),this.unsigned),a=this,i="";;){var u=a.div(s),c=(a.sub(u.mul(s)).toInt()>>>0).toString(e);if((a=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return!(1&~this.low)},S.isEven=function(){return!(1&this.low)},S.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},S.neg=S.negate,S.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=s+l)>>>16,c+=(d+=n+o)>>>16,c+=t+i,u((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return m;if(r(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return m;if(this.eq(I))return e.isOdd()?I:m;if(e.eq(I))return this.isOdd()?I:m;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,x=0,y=0;return x+=(y+=i*p)>>>16,b+=(x+=a*p)>>>16,x&=65535,b+=(x+=i*d)>>>16,f+=(b+=s*p)>>>16,b&=65535,f+=(b+=a*d)>>>16,b&=65535,f+=(b+=i*c)>>>16,f+=n*p+s*d+a*c+i*l,u((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:m;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return y;a=b}else{if(this.eq(I))return e.eq(x)||e.eq(v)?I:e.eq(I)?x:(n=this.shr(1).div(e).shl(1)).eq(m)?e.isNegative()?x:v:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(I))return this.unsigned?b:m;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=m}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=x),a=a.add(d),s=s.sub(p)}return a},S.div=S.divide,S.modulo=function(e){return r(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},3747:(e,t,n)=>{var r=n(296),s=n(3478),a=n(1888),i=n(2450)("IE_PROTO"),o=function(){},u="prototype",l=function(){var e,t=n(4622)("iframe"),r=a.length;for(t.style.display="none",n(680).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),l=e.F;r--;)delete l[u][a[r]];return l()};e.exports=Object.create||function(e,t){var n;return null!==e?(o[u]=r(e),n=new o,o[u]=null,n[i]=e):n=l(),void 0===t?n:s(n,t)}},3811:(e,t,n)=>{var r=n(8805),s=n(2263),a=n(6073),i=n(2203),o=n(373),u=n(296);i(i.S,"Reflect",{get:function e(t,n){var i,l,c=arguments.length<3?t:arguments[2];return u(t)===c?t[n]:(i=r.f(t,n))?a(i,"value")?i.value:void 0!==i.get?i.get.call(c):void 0:o(l=s(t))?e(l,n,c):void 0}})},3842:(e,t,n)=>{"use strict";n(5073)("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart")},3845:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{sign:n(2793)})},3853:(e,t,n)=>{"use strict";var r=n(2203),s=n(296),a=function(e){this._t=s(e),this._i=0;var t,n=this._k=[];for(t in e)n.push(t)};n(9164)(a,"Object",(function(){var e,t=this,n=t._k;do{if(t._i>=n.length)return{value:void 0,done:!0}}while(!((e=n[t._i++])in t._t));return{value:e,done:!1}})),r(r.S,"Reflect",{enumerate:function(e){return new a(e)}})},3882:(e,t,n)=>{"use strict";var r=n(2203);e.exports=function(e){r(r.S,e,{of:function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}})}},3904:(e,t,n)=>{var r=n(2203);r(r.S,"Date",{now:function(){return(new Date).getTime()}})},3922:e=>{var t=e.exports={version:"2.6.12"};"number"==typeof __e&&(__e=t)},3948:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},3977:(e,t,n)=>{"use strict";var r=n(2203),s=n(1119)(2);r(r.P+r.F*!n(6688)([].filter,!0),"Array",{filter:function(e){return s(this,e,arguments[1])}})},4047:(e,t,n)=>{var r=n(373),s=n(6861),a=n(9370)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[a])?!!t:"RegExp"==s(e))}},4073:(e,t,n)=>{var r=n(4473),s=n(6971).f,a={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return i&&"[object Window]"==a.call(e)?function(e){try{return s(e)}catch(e){return i.slice()}}(e):s(r(e))}},4136:(e,t,n)=>{var r=n(2203);r(r.P,"Array",{copyWithin:n(3586)}),n(8980)("copyWithin")},4152:e=>{e.exports=Math.scale||function(e,t,n,r,s){return 0===arguments.length||e!=e||t!=t||n!=n||r!=r||s!=s?NaN:e===1/0||e===-1/0?e:(e-t)*(s-r)/(n-t)+r}},4158:(e,t,n)=>{"use strict";n.d(t,{qYS:()=>Qr,xWs:()=>Zi,FE$:()=>su,d_2:()=>Ra,ry7:()=>hu,OEK:()=>_s,DZQ:()=>Ls,BaG:()=>Al,bvq:()=>$u});var r={};n.r(r),n.d(r,{assertParamsValid:()=>ui,computeFlatOffset:()=>wi,computeOutShape:()=>ci,getNormalizedAxes:()=>fi,isSliceContinous:()=>vi,maskToAxes:()=>li,parseSliceParams:()=>ki,sliceInfo:()=>Ii,startForAxis:()=>xi,startIndicesWithElidedDims:()=>gi,stopForAxis:()=>yi,stopIndicesWithElidedDims:()=>mi,stridesForAxis:()=>bi,stridesWithElidedDims:()=>hi});var s={};n.r(s),n.d(s,{collectGatherOpShapeInfo:()=>Bc,computeOutShape:()=>Pc,segOpComputeOptimalWindowSize:()=>zc});var a={};n.r(a),n.d(a,{ERF_A1:()=>nc,ERF_A2:()=>rc,ERF_A3:()=>sc,ERF_A4:()=>ac,ERF_A5:()=>ic,ERF_P:()=>tc,PARALLELIZE_THRESHOLD:()=>Wl,RowPartitionType:()=>Ml,SELU_SCALE:()=>ec,SELU_SCALEALPHA:()=>Ql,applyActivation:()=>Uu,assertAndGetBroadcastShape:()=>ja,assertAxesAreInnerMostDims:()=>Do,assertParamsConsistent:()=>Dl,assignToTypedArray:()=>dc,axesAreInnerMostDims:()=>Ro,calculateShapes:()=>Zl,checkEinsumDimSizes:()=>wc,checkPadOnDimRoundingMode:()=>Ui,combineLocations:()=>Ao,combineRaggedTensorToTensorShapes:()=>Ll,complexWithEvenIndex:()=>lc,complexWithOddIndex:()=>cc,computeConv2DInfo:()=>Ai,computeConv3DInfo:()=>Fi,computeDefaultPad:()=>_i,computeDilation2DInfo:()=>Ti,computeOptimalWindowSize:()=>Ul,computeOutAndReduceShapes:()=>Fo,computeOutShape:()=>Ol,computePool2DInfo:()=>Ei,computePool3DInfo:()=>Ri,convertConv2DDataFormat:()=>Wi,decodeEinsumEquation:()=>yc,eitherStridesOrDilationsAreOne:()=>Pi,expandShapeToKeepDim:()=>_o,exponent:()=>fc,exponents:()=>pc,fromStringArrayToUint8:()=>Uc,fromUint8ToStringArray:()=>Wc,getAxesPermutation:()=>Oo,getBroadcastDims:()=>Ga,getComplexWithIndex:()=>hc,getEinsumComputePath:()=>kc,getEinsumPermutation:()=>vc,getFusedBiasGradient:()=>Wu,getFusedDyActivation:()=>Bu,getImageCenter:()=>Vl,getInnerMostAxes:()=>Lo,getPermuted:()=>Hl,getRaggedRank:()=>Pl,getReductionAxes:()=>Ha,getReshaped:()=>Gl,getReshapedPermuted:()=>jl,getRowPartitionTypesHelper:()=>zl,getSliceBeginCoords:()=>Kl,getSliceSize:()=>ql,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Nc,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>$c,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Tc,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Ac,getSparseReshapeInputOutputMismatchErrorMessage:()=>_c,getSparseReshapeInputOutputMultipleErrorMessage:()=>Fc,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Ec,getSparseReshapeNegativeOutputDimErrorMessage:()=>Rc,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Lc,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Dc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Oc,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Mc,getUndoAxesPermutation:()=>Mo,isIdentityPermutation:()=>Ic,log:()=>cr,mergeRealAndImagArrays:()=>oc,prepareAndValidate:()=>Xl,prepareSplitSize:()=>Cc,segment_util:()=>s,shouldFuse:()=>Vu,slice_util:()=>r,splitRealAndImagArrays:()=>uc,stridesOrDilationsArePositive:()=>Bi,tupleValuesAreOne:()=>zi,upcastType:()=>us,validateDefaultValueShape:()=>Bl,validateInput:()=>Jl,validateUpdateShape:()=>Yl,warn:()=>lr});var i={};n.r(i),n.d(i,{mx:()=>mv,XI:()=>uw,Nk:()=>lw,f6:()=>hw,ct:()=>hv,YG:()=>fw,hH:()=>vw,z3:()=>sk,sG:()=>gk,uM:()=>vk,vS:()=>Lk,qB:()=>Hk,GG:()=>Kk,lg:()=>Zk,rq:()=>Xk,cu:()=>hI,WR:()=>uI,GE:()=>fI,px:()=>mI,jC:()=>AI,He:()=>DI,hE:()=>GI,BF:()=>Yw,Dk:()=>eS,cl:()=>uS,_B:()=>wS,ub:()=>SS,_f:()=>$S,Ku:()=>_S,qy:()=>OS,Zy:()=>KS,bu:()=>YS,zv:()=>nv,dH:()=>Cv,HS:()=>sw,yH:()=>mC,l3:()=>xC,z9:()=>vC,x6:()=>CC,_m:()=>FC,eW:()=>MC,GK:()=>PC,SP:()=>UC,yr:()=>GC,dl:()=>Nk,Dw:()=>YC,xT:()=>eN,_X:()=>Fv,wz:()=>oN});class o{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class u{refCount(e){return l("refCount")}incRef(e){return l("incRef")}timerAvailable(){return!0}time(e){return l("time")}read(e){return l("read")}readSync(e){return l("readSync")}readToGPU(e,t){return l("readToGPU")}numDataIds(){return l("numDataIds")}disposeData(e,t){return l("disposeData")}write(e,t,n){return l("write")}move(e,t,n,r,s){return l("move")}createTensorFromGPUData(e,t,n){return l("createTensorFromGPUData")}memory(){return l("memory")}floatPrecision(){return l("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return l("dispose")}}function l(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function c(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,p(e,t,n)}function h(e,t,n){return Math.max(e,Math.min(t,n))}function d(e){return e%2==0?e:e+1}function p(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function f(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function g(e,t,n=""){f(x(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function m(e){f(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function b(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function x(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function y(e){return e%1==0}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e,t=e=>0,n,r){return new Promise(((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const u=t(i);null!=n&&i>=n?a():null!=r?r(o,u):setTimeout(o,u)};o()}))}function I(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function S(e,t){const n=t.length;return f((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),f(e.every((e=>y(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function C(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:S(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function N(e,t){return $(e,t)}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function T(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function E(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function R(e){return"string"==typeof e||e instanceof String}function A(e){return"number"==typeof e}function F(e){return Array.isArray(e)?F(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":A(e)?"float32":R(e)?"string":"boolean"==typeof e?"bool":"float32"}function _(e){return!!(e&&e.constructor&&e.call&&e.apply)}function D(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function O(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function M(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=M(e+t*o,i,n,r)}return s}function L(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return M(0,e,t,n)}function z(e,t){const n=P(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function P(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function B(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return L(e,new Float32Array(n));if("int32"===t)return L(e,new Int32Array(n));if("bool"===t)return L(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function W(e){e.forEach((t=>{f(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function U(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function V(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function G(e){return e&&e.then&&"function"==typeof e.then}const H="tfjsflags";class j{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=K,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(G(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);H in e&&e[H].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function K(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function q(){return Y}let X,Y=null;function J(){if(null==X){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}X=e}return X}function Z(e,t){const n=function(){const e=J();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Q="Abs",ee="Acos",te="Acosh",ne="Add",re="AddN",se="All",ae="Any",ie="ArgMax",oe="ArgMin",ue="Asin",le="Asinh",ce="Atan",he="Atanh",de="Atan2",pe="AvgPool",fe="AvgPoolGrad",ge="AvgPool3D",me="AvgPool3DGrad",be="BatchMatMul",xe="BatchToSpaceND",ye="Bincount",ve="BitwiseAnd",we="BroadcastArgs",ke="Cast",Ie="Ceil",Se="ClipByValue",Ce="Complex",Ne="ComplexAbs",$e="Concat",Te="Conv2D",Ee="Conv2DBackpropFilter",Re="Conv2DBackpropInput",Ae="Conv3D",Fe="Conv3DBackpropFilterV2",_e="Conv3DBackpropInputV2",De="Cos",Oe="Cosh",Me="Cumprod",Le="Cumsum",ze="CropAndResize",Pe="DenseBincount",Be="DepthToSpace",We="DepthwiseConv2dNative",Ue="DepthwiseConv2dNativeBackpropFilter",Ve="DepthwiseConv2dNativeBackpropInput",Ge="Diag",He="Dilation2D",je="Dilation2DBackpropInput",Ke="Dilation2DBackpropFilter",qe="RealDiv",Xe="Einsum",Ye="Elu",Je="EluGrad",Ze="Erf",Qe="Equal",et="Exp",tt="ExpandDims",nt="Expm1",rt="FFT",st="Fill",at="FlipLeftRight",it="Floor",ot="FloorDiv",ut="FusedBatchNorm",lt="GatherV2",ct="GatherNd",ht="Greater",dt="GreaterEqual",pt="Identity",ft="IFFT",gt="Imag",mt="IsFinite",bt="IsInf",xt="IsNan",yt="LeakyRelu",vt="Less",wt="LessEqual",kt="LinSpace",It="Log",St="Log1p",Ct="LogicalAnd",Nt="LogicalNot",$t="LogicalOr",Tt="LRN",Et="LRNGrad",Rt="Max",At="Maximum",Ft="MaxPool",_t="MaxPoolGrad",Dt="MaxPool3D",Ot="MaxPool3DGrad",Mt="MaxPoolWithArgmax",Lt="Mean",zt="Min",Pt="Minimum",Bt="MirrorPad",Wt="Mod",Ut="Multinomial",Vt="Multiply",Gt="Neg",Ht="NotEqual",jt="NonMaxSuppressionV3",Kt="NonMaxSuppressionV4",qt="NonMaxSuppressionV5",Xt="OnesLike",Yt="OneHot",Jt="Pack",Zt="PadV2",Qt="Pow",en="Prelu",tn="Prod",nn="RaggedGather",rn="RaggedRange",sn="RaggedTensorToTensor",an="Range",on="Real",un="Reciprocal",ln="Relu",cn="Reshape",hn="ResizeNearestNeighbor",dn="ResizeNearestNeighborGrad",pn="ResizeBilinear",fn="ResizeBilinearGrad",gn="Relu6",mn="Reverse",bn="Round",xn="Rsqrt",yn="ScatterNd",vn="TensorScatterUpdate",wn="SearchSorted",kn="Select",In="Selu",Sn="Slice",Cn="Sin",Nn="Sinh",$n="Sign",Tn="Sigmoid",En="Softplus",Rn="Sqrt",An="Sum",Fn="SpaceToBatchND",_n="SplitV",Dn="Softmax",On="SparseFillEmptyRows",Mn="SparseReshape",Ln="SparseSegmentMean",zn="SparseSegmentSum",Pn="SparseToDense",Bn="SquaredDifference",Wn="Square",Un="StaticRegexReplace",Vn="StridedSlice",Gn="StringNGrams",Hn="StringSplit",jn="StringToHashBucketFast",Kn="Sub",qn="Tan",Xn="Tanh",Yn="Tile",Jn="TopK",Zn="Transform",Qn="Transpose",er="Unique",tr="Unpack",nr="UnsortedSegmentSum",rr="ZerosLike",sr="Step",ar="RotateWithOffset",ir="_FusedMatMul",or="FusedConv2D",ur="FusedDepthwiseConv2D";function lr(...e){q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(...e)}function cr(...e){q().getBool("IS_TEST")||q().getBool("PROD")||console.log(...e)}const hr=Z("kernelRegistry",(()=>new Map)),dr=Z("gradRegistry",(()=>new Map));function pr(e,t){const n=xr(e,t);return hr.get(n)}function fr(e){return dr.get(e)}function gr(e){const t=hr.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function mr(e){const{kernelName:t,backendName:n}=e,r=xr(t,n);hr.has(r)&&lr(`The kernel '${t}' for backend '${n}' is already registered`),hr.set(r,e)}function br(e){const{kernelName:t}=e;dr.has(t)&&q().getBool("DEBUG")&&lr(`Overriding the gradient for '${t}'`),dr.set(t,e)}function xr(e,t){return`${t}_${e}`}function yr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var vr=n(3710);const wr=n.n(vr)()||vr;function kr(e){return wr.fromString(e,!0,16)}const Ir=kr("c3a5c85c97cb3127"),Sr=kr("b492b66fbe98f273"),Cr=kr("9ae16a3b2f90404f");function Nr(e){return e.xor(e.shru(47))}function $r(e,t,n){const r=e.slice(t,t+n);return wr.fromBytes(Array.from(r),!0,!0)}function Tr(e,t){return $r(e,t,8)}function Er(e,t){return $r(e,t,4)}function Rr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ar(e,t,n=kr("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Fr(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Rr(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(Rr(s,44)),[s.add(r),a.add(i)]}(Tr(e,t),Tr(e,t+8),Tr(e,t+16),Tr(e,t+24),n,r)}function _r(e,t=e.length){const n=wr.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Cr.add(2*t),r=Tr(e,0).add(Cr),s=Tr(e,t-8);return Ar(Rr(s,37).mul(n).add(r),Rr(r,25).add(s).mul(n),n)}if(t>=4){const n=Cr.add(2*t);return Ar(Er(e,0).shl(3).add(t),Er(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Nr(Cr.mul(n).xor(Ir.mul(r))).mul(Cr)}return Cr}(e,t):function(e,t=e.length){const n=Cr.add(2*t),r=Tr(e,0).mul(Sr),s=Tr(e,8),a=Tr(e,t-8).mul(n),i=Tr(e,t-16).mul(Cr);return Ar(Rr(r.add(s),43).add(Rr(a,30)).add(i),r.add(Rr(s.add(Cr),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Cr.add(2*t),r=Tr(e,0).mul(Cr),s=Tr(e,8),a=Tr(e,t-8).mul(n),i=Tr(e,t-16).mul(Cr),o=Rr(r.add(s),43).add(Rr(a,30)).add(i),u=Ar(o,r.add(Rr(s.add(Cr),18)).add(a),n),l=Tr(e,16).mul(n),c=Tr(e,24),h=o.add(Tr(e,t-32)).mul(n),d=u.add(Tr(e,t-24)).mul(n);return Ar(Rr(l.add(c),43).add(Rr(h,30)).add(d),l.add(Rr(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(Sr).add(113),a=Nr(s.mul(Cr).add(113)).mul(Cr),i=[wr.UZERO,wr.UZERO],o=[wr.UZERO,wr.UZERO];r=r.mul(Cr).add(Tr(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Rr(r.add(s).add(i[0]).add(Tr(e,u+8)),37).mul(Sr),s=Rr(s.add(i[1]).add(Tr(e,u+48)),42).mul(Sr),r=r.xor(o[1]),s=s.add(i[0]).add(Tr(e,u+40)),a=Rr(a.add(o[0]),33).mul(Sr),i=Fr(e,u,i[1].mul(Sr),r.add(o[0])),o=Fr(e,u+32,a.add(o[1]),s.add(Tr(e,u+16))),[a,r]=[r,a],u+=64}while(u!==l);const h=Sr.add(a.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Rr(r.add(s).add(i[0]).add(Tr(e,u+8)),37).mul(h),s=Rr(s.add(i[1]).add(Tr(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Tr(e,u+40))),a=Rr(a.add(o[0]),33).mul(h),i=Fr(e,u,i[1].mul(h),r.add(o[0])),o=Fr(e,u+32,a.add(o[1]),s.add(Tr(e,u+16))),[a,r]=[r,a],Ar(Ar(i[0],o[0],h).add(Nr(s).mul(Ir)).add(a),Ar(i[1],o[1],h).add(r),h)}function Dr(e,t){return"string"===t?Lr(e):Or([e],t)}function Or(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Br(e)),q().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Mr(){return q().platform.now()}function Lr(e,t="utf-8"){return t=t||"utf-8",q().platform.encode(e,t)}function zr(e,t="utf-8"){return t=t||"utf-8",q().platform.decode(e,t)}function Pr(e){return null!=q().platform.isTypedArray?q().platform.isTypedArray(e):yr(e)}function Br(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||G(e)||null==e||Pr(e)&&n)t.push(e);else if(Array.isArray(e)||Pr(e))for(let r=0;r<e.length;++r)Br(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)Br(e[s],t,n)}return t}class Wr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Vr)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=Mr();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Mr()-i})}if(q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Ur(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Ur(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Vr{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?w(`${r}ms`,9):r.error,o=w(e,25),u=t.rank,l=t.size,c=w(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Gr(e,t,n,r){const s=O(t),a=function(e,t,n,r){const s=b(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,u="complex64"===n?qr(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],Hr(u[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=Kr(e,t,n,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function Hr(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:R(e)?`'${e}'`:"bool"===n?jr(e):parseFloat(e.toFixed(7)).toString(),w(r,t)}function jr(e){return 0===e?"false":"true"}function Kr(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[Hr(qr(e)[0],0,n)]:"bool"===n?[jr(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=qr(r),a=qr(a)),["["+r.map(((e,t)=>Hr(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>Hr(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?qr(e):Array.from(e)).map(((e,t)=>Hr(e,s[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...Kr(e.slice(r,a),l,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...Kr(e.slice(r,a),l,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...Kr(e.slice(r,a),l,n,c,s,t===o-1))}const p=2===u?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function qr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Xr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=b(e),null!=n){const e=n.length;f(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||$(t,this.size),this.strides=O(e)}set(e,...t){0===t.length&&(t=[0]),f(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Yr().makeTensor(this.values,this.shape,this.dtype)}}let Yr=null,Jr=null,Zr=null;class Qr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=b(e),this.strides=O(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Jr.buffer(this.shape,this.dtype,e)}bufferSync(){return Jr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return L(this.shape,e,"complex64"===this.dtype)}arraySync(){return L(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Yr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>zr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Yr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Yr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>zr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Yr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Yr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Jr.print(this,e)}clone(){return this.throwIfDisposed(),Jr.clone(this)}toString(e=!1){return Gr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Jr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Yr().makeVariable(this,e,t,n)}}function es(){return Z("Tensor",(()=>Qr))}Object.defineProperty(Qr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),es();class ts extends Qr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!x(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Yr().disposeTensor(this),this.dataId=e.dataId,Yr().incRef(this,null)}dispose(){Yr().disposeVariable(this),this.isDisposedInternal=!0}}var ns,rs,ss,as,is;Object.defineProperty(ts,Symbol.hasInstance,{value:e=>e instanceof Qr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ns||(ns={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(rs||(rs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ss||(ss={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(as||(as={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(is||(is={}));const os={float32:as,int32:rs,bool:ss,complex64:is};function us(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return os[e][t]}function ls(e){return us(e,"int32")}function cs(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function hs(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function ds(e,t){if(e.dtype===t.dtype)return[e,t];const n=us(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ps(e,t){return t.some((t=>t.id===e.id))}function fs(e){const t=[];return gs(e,t,new Set),t}function gs(e,t,n){if(null==e)return;if(e instanceof Qr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),gs(r,t,n))}}function ms(e){return null!=e.kernelName}class bs{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class xs{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new bs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(lr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Wr(this.backendInstance),!0}setupRegisteredKernels(){gr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){gr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof u||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,lr(`Initialization of backend ${e} failed`),lr(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return lr(`Initialization of backend ${e} failed`),lr(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return xs.nextTensorId++}nextVariableId(){return xs.nextVariableId++}clone(e){const t=vs.runKernel(pt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return vs.runKernel(ke,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==pr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=ms(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ms(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const u=pr(t,this.backendName);f(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=ms(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=fr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(f(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&R(e[0])&&(s=e.map((e=>Lr(e))));const a=r.write(s,t,n),i=new Qr(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new Qr(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new ts(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*E(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ts||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*E(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=fr(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=P(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=fs(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(f(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));f(s instanceof Qr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=z(b(e),"float32");return vs.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!x(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),ws);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return f(_(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;f(t.every((e=>e instanceof Qr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),f(n.value instanceof Qr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),f(_(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];f(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),f(a.every((e=>e instanceof Qr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Mr(),n=await this.backend.time(e);return n.wallMs=Mr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new bs;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ys(){const e=J();if(null==e._tfengine){const t=new j(e);e._tfengine=new xs(t)}var t;return t=e._tfengine.ENV,Y=t,Yr=()=>e._tfengine,e._tfengine}xs.nextTensorId=0,xs.nextVariableId=0;const vs=ys();function ws(e,t){const n={a:e,b:t};return vs.runKernel(ne,n)}function ks(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Is(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ss=q();function Cs(e,t){let n=e;if(Pr(e))return"string"===t?[]:[e.length];if(cs(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(hs(e))return[e.buffer.size/(null==t?4:E(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Pr(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ns(e,r,[]),r}function Ns(e,t,n){if(n=n||[],!Array.isArray(e)&&!Pr(e))return void f(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));f(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),f(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Ns(e[t],r,n.concat(t))}function $s(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ts(e,t,n,r="numeric"){if(e instanceof es())return $s(r,e.dtype,t,n),e;let s=F(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),$s(r,s,t,n),null==e||!Pr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Cs(e,s);Pr(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?Or(e,s):Br(e,[],!0);return vs.makeTensor(i,a,s)}function Es(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Ts(e,`${t}[${s}]`,n,r)))}function Rs(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{vs.startScope(n);try{const t=r(...e);return G(t)&&console.error("Cannot return a Promise inside of tidy."),vs.endScope(t),t}catch(e){throw vs.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}Ss.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ss.registerFlag("IS_BROWSER",(()=>Is())),Ss.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Ss.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ss.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Ss.registerFlag("PROD",(()=>!1)),Ss.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ss.getBool("DEBUG"))),Ss.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ss.registerFlag("IS_TEST",(()=>!1)),Ss.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Ss.getBool("DEBUG"))),Ss.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Ss.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Ss.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const As=Rs({complex_:function(e,t){const n=Ts(e,"real","complex"),r=Ts(t,"imag","complex");g(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return vs.runKernel(Ce,s)}});function Fs(e,t,n,r){if(null==r)r=F(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(hs(e)||cs(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return vs.backend.createTensorFromGPUData(e,t||n,r)}if(!Pr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){W(t);const e=b(t),r=b(n);f(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==b(t.slice(e));f(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Pr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Or(e,r):Br(e,[],!0),vs.makeTensor(e,t,r)}function _s(e,t,n){return Fs(e,t,Cs(e,n),n)}class Ds{static join(e){return new Ds(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Pr(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],i=e+a-n.start,o=a,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,i,u-i);if(s.set(l,o),a+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Os(){return vs}function Ms(){return vs.memory()}function Ls(e,t){return vs.tidy(e,t)}function zs(e){fs(e).forEach((e=>e.dispose()))}function Ps(e){return vs.keep(e)}function Bs(e,t,n=1){return vs.registerBackend(e,t,n)}async function Ws(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Us(await Promise.all(r)),specs:n}}function Us(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}Zr=function(e){q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Vs="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Gs(e){return Vs?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Hs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function js(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Gs(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Gs(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Ds(e.weightData).byteLength}}function Ks(e){const t=[];for(const n of e)t.push(...n.weights);return t}class qs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==qs.instance&&(qs.instance=new qs),qs.instance}static registerSaveRouter(e){qs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){qs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return qs.getHandlers(e,"save")}static getLoadHandlers(e,t){return qs.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?qs.getInstance().loadRouters:qs.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Xs="tensorflowjs",Ys="models_store",Js="model_info_store";function Zs(){if(!q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Qs(e){const t=e.result;t.createObjectStore(Ys,{keyPath:"modelPath"}),t.createObjectStore(Js,{keyPath:"modelPath"})}class ea{constructor(e){if(this.indexedDB=Zs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Xs,1);r.onupgradeneeded=()=>Qs(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Ys,"readonly"),r=t.objectStore(Ys).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=Ds.join(t.weightData);const r=js(t),a=s.transaction(Js,"readwrite");let i,o,u=a.objectStore(Js);try{i=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}i.onsuccess=()=>{o=s.transaction(Ys,"readwrite");const i=o.objectStore(Ys);let l;try{l=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{u=a.objectStore(Js);const t=u.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(l.error)),t.onerror=e=>(s.close(),n(l.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==o?s.close():o.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}ea.URL_SCHEME="indexeddb://";const ta=e=>{return q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ea.URL_SCHEME)?(t=e.slice(ea.URL_SCHEME.length),new ea(t)):null;var t};qs.registerSaveRouter(ta),qs.registerLoadRouter(ta);class na{constructor(){this.indexedDB=Zs()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Xs,1);n.onupgradeneeded=()=>Qs(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Js,"readonly"),a=s.objectStore(Js).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ea.URL_SCHEME)?t.slice(ea.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Xs,1);r.onupgradeneeded=()=>Qs(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Js,"readwrite"),i=a.objectStore(Js),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{u=s.transaction(Ys,"readwrite");const r=u.objectStore(Ys).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const ra="/",sa="tensorflowjs_models",aa="info",ia="model_topology",oa="weight_specs",ua="weight_data",la="model_metadata";function ca(e){return{info:[sa,e,aa].join(ra),topology:[sa,e,ia].join(ra),weightSpecs:[sa,e,oa].join(ra),weightData:[sa,e,ua].join(ra),modelMetadata:[sa,e,la].join(ra)}}function ha(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function da(e){const t=e.split(ra);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ra)}class pa{constructor(e){if(!q().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ca(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=js(e),s=Ds.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Vs)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw ha(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Vs){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}pa.URL_SCHEME="localstorage://";const fa=e=>{return q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(pa.URL_SCHEME)?(t=e.slice(pa.URL_SCHEME.length),new pa(t)):null;var t};qs.registerSaveRouter(fa),qs.registerLoadRouter(fa);class ga{constructor(){f(q().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),f("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=sa+ra,n=ra+aa;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[da(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=ca(e=(t=e).startsWith(pa.URL_SCHEME)?t.slice(pa.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ha(n),r}}class ma{constructor(){this.managers={}}static getInstance(){return null==ma.instance&&(ma.instance=new ma),ma.instance}static registerManager(e,t){f(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),f(e.length>0,(()=>"scheme must not be an empty string."));const n=ma.getInstance();f(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ma.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ma.getInstance().managers)}}class ba{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&q().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return yr(e)}}if(q().get("IS_BROWSER")){q().setPlatform("browser",new ba);try{ma.registerManager(pa.URL_SCHEME,new ga)}catch(e){}try{ma.registerManager(ea.URL_SCHEME,new na)}catch(e){}}let xa;function ya(e,t="float32",n){return t=t||"float32",W(e),new Xr(e,t,n)}q().get("IS_NODE")&&!q().get("IS_BROWSER")&&q().setPlatform("node",new class{constructor(){this.util=n(6901),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=q().global.fetch?q().global.fetch(e,t):(null==xa&&(xa=n(8661)),xa(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const va=Rs({cast_:function(e,t){const n=Ts(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return vs.runKernel(ke,r,s)}}),wa=Rs({clone_:function(e){const t={x:Ts(e,"x","clone","string_or_numeric")};return vs.runKernel(pt,t)}});ys(),Jr={buffer:ya,cast:va,clone:wa,print:function(e,t=!1){console.log(e.toString(t))}};const ka=Rs({add_:function(e,t){let n=Ts(e,"a","add"),r=Ts(t,"b","add");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(ne,s)}}),Ia=Rs({floorDiv_:function(e,t){let n=Ts(e,"a","floorDiv"),r=Ts(t,"b","floorDiv");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(ot,s)}}),Sa=Rs({div_:function(e,t){let n=Ts(e,"a","div"),r=Ts(t,"b","div");if([n,r]=ds(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Ia(n,r);const s={a:n,b:r};return vs.runKernel(qe,s,{})}}),Ca=Rs({mul_:function(e,t){let n=Ts(e,"a","mul"),r=Ts(t,"b","mul");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(Vt,s)}}),Na=Rs({sqrt_:function(e){const t={x:Ts(e,"x","sqrt","float32")};return vs.runKernel(Rn,t)}}),$a=Rs({square_:function(e){const t=Ts(e,"x","square");return vs.runKernel("Square",{x:t},{})}}),Ta=Rs({zerosLike_:function(e){const t={x:Ts(e,"x","zerosLike")};return vs.runKernel(rr,t)}});function Ea(e){return vs.customGrad(e)}function Ra(e,t){if((Pr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Pr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Fs(e,[],[],t)}const Aa=new Map,Fa=new Map;class _a{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Da{constructor(){this.classNameMap={}}static getMap(){return null==Da.instance&&(Da.instance=new Da),Da.instance}static register(e){Da.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Oa(e,t,n){f(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),f("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),f(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return Da.register(e),Aa.set(r,e),Fa.set(e,r),e}class Ma extends _a{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return zs(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){f(_(e),(()=>"The f passed in variableGrads(f) must be a function")),f(null==t||Array.isArray(t)&&t.every((e=>e instanceof ts)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in vs.registeredVariables)t.push(vs.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),f(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=vs.gradients(e,t,null,!0);f(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),f(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&zs(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ra(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ma,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class La extends Ma{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=vs.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=vs.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Ls((()=>Ta(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Ls((()=>Ta(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Ls((()=>{const e=ka(Ca(i,this.rho),Ca($a(a),1-this.rho)),t=Ca(Sa(Na(ka(o,this.epsilon)),Na(ka(i,this.epsilon))),a),n=ka(Ca(o,this.rho),Ca($a(t),1-this.rho));i.assign(e),o.assign(n);const s=ka(Ca(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(zs(this.accumulatedGrads.map((e=>e.variable))),zs(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function za(e,t,n){W(e);const r={shape:e,value:t,dtype:n=n||F(t)};return vs.runKernel(st,{},r)}class Pa extends Ma{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=vs.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Ls((()=>za(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Ls((()=>{const e=ka(a,$a(s));a.assign(e);const t=ka(Ca(Sa(s,Na(ka(e,vs.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&zs(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Ba=Rs({pow_:function(e,t){let n=Ts(e,"base","pow"),r=Ts(t,"exp","pow");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(Qt,s)}}),Wa=Rs({sub_:function(e,t){let n=Ts(e,"a","sub"),r=Ts(t,"b","sub");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(Kn,s)}});class Ua extends Ma{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ls((()=>{this.accBeta1=Ra(t).variable(),this.accBeta2=Ra(n).variable()})),null==r&&(this.epsilon=vs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ls((()=>{const n=Wa(1,this.accBeta1),r=Wa(1,this.accBeta2);t.forEach(((t,s)=>{const a=vs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Ls((()=>Ta(a).variable(i)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Ls((()=>Ta(a).variable(i)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,c=ka(Ca(u,this.beta1),Ca(o,1-this.beta1)),h=ka(Ca(l,this.beta2),Ca($a(o),1-this.beta2)),d=Sa(c,n),p=Sa(h,r);u.assign(c),l.assign(h);const f=ka(Ca(Sa(d,ka(Na(p),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign(Ca(this.accBeta1,this.beta1)),this.accBeta2.assign(Ca(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&zs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&zs(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Ls((()=>{this.accBeta1.assign(Ba(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ba(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Va=Rs({abs_:function(e){const t=Ts(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return vs.runKernel(Ne,e)}{const e={x:t};return vs.runKernel(Q,e)}}});function Ga(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Ha(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function ja(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-s-1]=a}}return r}const Ka=Rs({maximum_:function(e,t){let n=Ts(e,"a","maximum"),r=Ts(t,"b","maximum");[n,r]=ds(n,r),"bool"===n.dtype&&(n=va(n,"int32"),r=va(r,"int32")),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(At,s)}});class qa extends Ma{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ls((()=>{this.iteration=Ra(0).variable(),this.accBeta1=Ra(t).variable()})),null==r&&(this.epsilon=vs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ls((()=>{const n=Wa(1,this.accBeta1),r=Sa(-this.learningRate,ka(Ca(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=vs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Ta(a).variable(i)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:Ta(a).variable(i)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,c=ka(Ca(u,this.beta1),Ca(o,1-this.beta1)),h=Ca(l,this.beta2),d=Va(o),p=Ka(h,d);u.assign(c),l.assign(p);const f=ka(Ca(Sa(r,n),Sa(c,ka(p,this.epsilon))),a);a.assign(f)})),this.iteration.assign(ka(this.iteration,1)),this.accBeta1.assign(Ca(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&zs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&zs(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Xa extends Ma{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=vs.registeredVariables[t];Ls((()=>{const e=ka(Ca(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ps(Ra(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Ya extends Xa{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ra(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=vs.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Ls((()=>Ta(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Ls((()=>{let e;const t=ka(Ca(this.m,s),a);e=this.useNesterov?ka(Ca(this.c,ka(a,Ca(t,this.m))),r):ka(Ca(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&zs(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Ja extends Ma{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=vs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=vs.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Ls((()=>Ta(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Ls((()=>Ta(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Ls((()=>Ta(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Ls((()=>{const e=ka(Ca(i,this.decay),Ca($a(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=ka(Ca(t,this.decay),Ca(a,1-this.decay)),u=Sa(Ca(a,this.learningRate),Na(Wa(e,ka($a(s),this.epsilon)))),l=ka(Ca(o,this.momentum),u);i.assign(e),t.assign(s),o.assign(l);const c=Wa(r,l);r.assign(c)}else{const e=ka(Ca(i,this.decay),Ca($a(a),1-this.decay)),t=ka(Ca(o,this.momentum),Sa(Ca(a,this.learningRate),Na(ka(e,this.epsilon))));i.assign(e),o.assign(t);const n=Wa(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&zs(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&zs(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&zs(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Za=[La,Pa,Ua,qa,Ya,Ja,Xa];function Qa(e){return new Promise((e=>setTimeout(e))).then(e)}class ei{constructor(e){if(!q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ei.URL_SCHEME)&&(e=e.slice(ei.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Ds.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Hs(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Qa((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Qa((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:js(e)}}}}function ti(e,t,n,r){!function(e){f(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){f(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),f(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),f(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function ni(e,t){null==t&&(t={});const n=null==t.fetchFunc?q().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await ti(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await ti(s,t.onProgress,.5,1)}ei.URL_SCHEME="downloads://",qs.registerSaveRouter((e=>q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ei.URL_SCHEME)?function(e="model"){return new ei(e)}(e.slice(ei.URL_SCHEME.length)):null));class ri{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(f("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=q().platform.fetch,f(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&f(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Hs(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Ds.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:js(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():async function(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),function(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}(e,n,r)}(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Ks(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?q().platform.fetch:t.fetchFunc;let s,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){if(!s){const n=(await r(e[a],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:u}=await s.read();if(!o)return void n.enqueue(u);a++,s=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[Ks(e),await ni(t,this.loadOptions)]}}function si(e){return null!=e.match(ri.URL_SCHEME_REGEX)}ri.URL_SCHEME_REGEX=/^https?:\/\//;const ai=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>si(e))):si(e),n)return function(e,t){return new ri(e,t)}(e,t)}return null};qs.registerSaveRouter(ai),qs.registerLoadRouter(ai);const ii=-2,oi=-1;function ui(e,t,n){const r=e.shape.length;f(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),f(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)f(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function li(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ci(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function hi(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function di(e,t,n){return n<=e?n:n-(t-1)}function pi(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function fi(e,t,n,r,s,a,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=gi(i,u,l,r,e),h=mi(o,u,l,s,e),d=hi(a,u,l,e)}else for(let t=0;t<l;t++)c[t]=xi(i,r,a,e,t,u),h[t]=yi(o,s,a,e,t,u),d[t]=bi(a,t,u);return{begin:c,end:h,strides:d}}function gi(e,t,n,r,s){const a=[...s],i=pi(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=di(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function mi(e,t,n,r,s){const a=[...s],i=pi(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=di(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=h(0,a[e],s[e])}return a}function bi(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function xi(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=h(0,i,u-1),i}function yi(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=o>0?h(0,i,u):h(-1,i,u-1),i}function vi(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function wi(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function ki(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{f(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(f(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Ii(e,t,n,r,s,a,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&1<<e&o&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(ii),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(oi),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,g=!0;const m=[],b=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){m.push(n?1:-1);continue}const s=[d.beginMask&1<<t,d.endMask&1<<t],a=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=Si(d.begin[t],0,d.strides[t],r,s,a),d.end[t]=Si(d.end[t],1,d.strides[t],r,s,a);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=d.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!==0?1:0),m.push(e)}else m.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?b.push(m[t]):t===ii&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>d.finalShapeGatherIndices[t]!==ii)),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function Si(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const Ci=Rs({all_:function(e,t=null,n=!1){const r={x:Ts(e,"x","all","bool")},s={axis:t,keepDims:n};return vs.runKernel(se,r,s)}}),Ni=Rs({any_:function(e,t=null,n=!1){const r={x:Ts(e,"x","any","bool")},s={axis:t,keepDims:n};return vs.runKernel(ae,r,s)}}),$i=Rs({argMax_:function(e,t=0){const n={x:Ts(e,"x","argMax")},r={axis:t};return vs.runKernel(ie,n,r)}});function Ti(e,t,n,r,s="NHWC",a){return Ai(e,[...t,e[3]],n,a,r,null,null,Wi(s))}function Ei(e,t,n,r,s,a,i="channelsLast"){const[o,u]=Di(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return Ai(e,l,n,r,s,a,!1,i)}function Ri(e,t,n,r,s,a,i="NDHWC"){const[o,u,l]=Oi(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return Fi(e,c,n,r,s,!1,h,a)}function Ai(e,t,n,r,s,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[g,m]=Di(n),[b,x]=Di(r),y=Mi(d,b),v=Mi(p,x),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=_i(e,t,n));const a=e[1];return[Li((e[0]-t+2*r)/n+1,s),Li((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=Li((t-a+d+p)/r+1,o),h=Li((n-i+f+g)/s+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,g,m,y,v,a,o),S=i?f*h:f;let C;return"channelsFirst"===o?C=[u,S,k,I]:"channelsLast"===o&&(C=[u,k,I,S]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:e,outShape:C,filterShape:t}}function Fi(e,t,n,r,s,a=!1,i="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,l,c,h]=e}const[p,f,g,,m]=t,[b,x,y]=Oi(n),[v,w,k]=Oi(r),I=Mi(p,v),S=Mi(f,w),C=Mi(g,k),{padInfo:N,outDepth:$,outHeight:T,outWidth:E}=function(e,t,n,r,s,a,i,o,u,l,c){let h,d,p,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const g=function(e,t,n,r,s,a){null==s&&(s=_i(e,t[0],r[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(i[n]=Li((e[n]-t[n]+2*s)/r[n]+1,a));return i}([t,n,r,1],[o,u,l],0,[s,a,i],e,c);d=g[0],p=g[1],f=g[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+u-n,g=(f-1)*i+l-r,m=Math.floor(e/2),b=e-m,x=Math.floor(c/2),y=c-x,v=Math.floor(g/2);h={top:x,bottom:y,left:v,right:g-v,front:m,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,l,c,h,b,x,y,I,S,C,o),R=a?m*d:m;let A;return"channelsFirst"===i?A=[u,R,$,T,E]:"channelsLast"===i&&(A=[u,$,T,E,R]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:$,outHeight:T,outWidth:E,outChannels:R,padInfo:N,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function _i(e,t,n,r=1){const s=Mi(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Di(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Oi(e){return"number"==typeof e?[e,e,e]:e}function Mi(e,t){return t<=1?e:e+(e-1)*(t-1)}function Li(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function zi(e){const[t,n,r]=Di(e);return 1===t&&1===n&&1===r}function Pi(e,t){return zi(e)||zi(t)}function Bi(e){return Di(e).every((e=>e>0))}function Wi(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Ui(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)f(y(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{f(y(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Vi=Rs({reshape_:function(e,t){const n={x:Ts(e,"x","reshape","string_or_numeric")},r={shape:t};return vs.runKernel(cn,n,r)}}),Gi=Rs({avgPool_:function(e,t,n,r,s){const a=Ts(e,"x","avgPool","float32");f(Pi(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Vi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),f(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Ui("avgPool",r,s);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=vs.runKernel(pe,u,l);return c=va(c,a.dtype),o?Vi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Hi=Rs({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=Ts(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=Vi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),f(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),f("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),f("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Ui("avgPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=vs.runKernel(ge,l,c);return h=va(h,o.dtype),u?Vi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),ji=Rs({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Ts(e,"x","batchNorm"),o=Ts(t,"mean","batchNorm"),u=Ts(n,"variance","batchNorm");let l,c;null!=s&&(l=Ts(s,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),f(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Vi(e,[1,1,1,e.size]):2===e.rank?Vi(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Vi(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:l,offset:c,mean:o,variance:u},d={varianceEpsilon:a},p=vs.runKernel(ut,h,d);return Vi(p,i.shape)}}),Ki=Rs({batchNorm2d_:function(e,t,n,r,s,a){const i=Ts(e,"x","batchNorm"),o=Ts(t,"mean","batchNorm"),u=Ts(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ts(s,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),f(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),f(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),f(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&f(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&f(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),ji(i,o,u,c,l,a)}}),qi=Rs({batchNorm3d_:function(e,t,n,r,s,a){const i=Ts(e,"x","batchNorm"),o=Ts(t,"mean","batchNorm"),u=Ts(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ts(s,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),f(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),f(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),f(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&f(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&f(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),ji(i,o,u,c,l,a)}}),Xi=Rs({batchNorm4d_:function(e,t,n,r,s,a){const i=Ts(e,"x","batchNorm"),o=Ts(t,"mean","batchNorm"),u=Ts(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ts(s,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),f(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),f(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),f(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&f(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&f(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),ji(i,o,u,c,l,a)}}),Yi=Rs({broadcastTo_:function(e,t){let n=Ts(e,"broadcastTo","x");const r=n.shape;if(W(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Vi(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return wa(n);const i={x:n},o={reps:a};return vs.runKernel(Yn,i,o)}}),Ji=Rs({clipByValue_:function(e,t,n){const r=Ts(e,"x","clipByValue");if(f(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return za(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return vs.runKernel(Se,s,a)}}),Zi=Rs({concat_:function(e,t=0){f(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Es(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return wa(n[0]);const r=n,s={axis:t};return vs.runKernel($e,r,s)}}),Qi=Rs({concat1d_:function(e){return Zi(e,0)}}),eo=Rs({concat2d_:function(e,t){return Zi(e,t)}}),to=Rs({concat3d_:function(e,t){return Zi(e,t)}}),no=Rs({concat4d_:function(e,t){return Zi(e,t)}}),ro=Rs({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ts(e,"x","conv2d","float32"),u=Ts(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Vi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),f(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),f(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),Ui("conv2d",r,i);const h="NHWC"===s?l.shape[3]:l.shape[1];f(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),f(Pi(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),f(Bi(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),f(Bi(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},g=vs.runKernel(Te,d,p);return c?Vi(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),so=Rs({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Ts(e,"x","conv1d"),u=Ts(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Vi(o,[1,o.shape[0],o.shape[1]])),f(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),f(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),Ui("conv1d",r,i),f(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),f(Pi(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),f(Bi(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),f(Bi(n),(()=>"Error in conv1D: Stride should be larger than 0.")),f("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Vi(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=Vi(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=ro(d,h,[1,n],r,"NHWC",[1,a],i);return Vi(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),ao=Rs({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){f(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Vi(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),f(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),f(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),f(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?u.shape[3]:u.shape[1];f(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),f(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Ui("conv2dDerInput",s,i);const d={dy:u,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},g=vs.runKernel(Re,d,p);return l?Vi(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),io=Rs({conv2dTranspose_:function(e,t,n,r,s,a){const i=Ts(e,"x","conv2dTranspose"),o=Ts(t,"filter","conv2dTranspose");return ao(n,i,o,r,s,"NHWC",a)}}),oo=Rs({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Ts(e,"x","conv3d"),o=Ts(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Vi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),f(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),f(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),f(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),f(Pi(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),f("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),f(Bi(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),f(Bi(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=vs.runKernel(Ae,c,h);return l?Vi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),uo=Rs({conv3DBackpropInput_:function(e,t,n,r,s){f(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Vi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],l=i.shape[4];f(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),f(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),f(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),f(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),f(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},d=vs.runKernel(_e,c,h);return o?Vi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),lo=Rs({conv3dTranspose_:function(e,t,n,r,s){const a=Ts(e,"x","conv3dTranspose"),i=Ts(t,"filter","conv3dTranspose");return uo(n,a,i,r,s)}}),co=Rs({denseBincount_:function(e,t,n,r=!1){const s=Ts(e,"x","denseBincount"),a=Ts(t,"weights","denseBincount");f("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),f(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),f(n>=0,(()=>`size must be non-negative, but got ${n}.`)),f(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return vs.runKernel(Pe,i,o)}}),ho=Rs({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ts(e,"x","depthwiseConv2d","float32"),u=Ts(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Vi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),f(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),f(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const h="NHWC"===s?l.shape[3]:l.shape[1];f(h===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Ui("depthwiseConv2d",r,i);const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},g=vs.runKernel(We,d,p);return c?Vi(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),po=Rs({elu_:function(e){const t={x:Ts(e,"x","elu","float32")};return vs.runKernel(Ye,t)}}),fo=Rs({equal_:function(e,t){let n=Ts(e,"a","equal","string_or_numeric"),r=Ts(t,"b","equal","string_or_numeric");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(Qe,s)}}),go=Rs({erf_:function(e){let t=Ts(e,"x","erf");f("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=va(t,"float32"));const n={x:t};return vs.runKernel(Ze,n)}}),mo=Rs({exp_:function(e){const t={x:Ts(e,"x","exp")};return vs.runKernel(et,t)}}),bo=Rs({expandDims_:function(e,t=0){const n=Ts(e,"x","expandDims","string_or_numeric");f(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return vs.runKernel(tt,r,s)}}),xo=Rs({tile_:function(e,t){const n=Ts(e,"x","tile","string_or_numeric");f(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return vs.runKernel(Yn,r,s)}}),yo=Rs({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=ya([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=Vi(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return xo(bo(i,0),[n[0],1,1]);if(2===n.length)return xo(bo(bo(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return xo(bo(bo(bo(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),vo=Rs({floor_:function(e){const t={x:Ts(e,"x","floor","float32")};return vs.runKernel(it,t)}}),wo=Rs({gather_:function(e,t,n=0,r=0){const s={x:Ts(e,"x","gather"),indices:Ts(t,"indices","gather","int32")},a={axis:n,batchDims:r};return vs.runKernel(lt,s,a)}}),ko=Rs({greater_:function(e,t){let n=Ts(e,"a","greater","string_or_numeric"),r=Ts(t,"b","greater","string_or_numeric");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(ht,s)}}),Io=Rs({greaterEqual_:function(e,t){let n=Ts(e,"a","greaterEqual","string_or_numeric"),r=Ts(t,"b","greaterEqual","string_or_numeric");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(dt,s)}}),So=Rs({leakyRelu_:function(e,t=.2){const n={x:Ts(e,"x","leakyRelu")},r={alpha:t};return vs.runKernel(yt,n,r)}}),Co=Rs({log_:function(e){const t={x:Ts(e,"x","log","float32")};return vs.runKernel(It,t)}}),No=Rs({log1p_:function(e){const t={x:Ts(e,"x","log1p")};return vs.runKernel(St,t)}}),$o=Rs({max_:function(e,t=null,n=!1){const r={x:Ts(e,"x","max")},s={reductionIndices:t,keepDims:n};return vs.runKernel(Rt,r,s)}}),To=Rs({sum_:function(e,t=null,n=!1){let r=Ts(e,"x","sum");"bool"===r.dtype&&(r=va(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return vs.runKernel(An,s,a)}}),Eo=Rs({logSoftmax_:function(e,t=-1){const n=Ts(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Ea(((e,n)=>{const r=$o(e,t,!0),s=Wa(e,r),a=Wa(va(s,"float32"),Co(To(mo(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=mo(r);return Wa(e,Ca(To(e,t,!0),s))}}}));return r(n)}});function Ro(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ao(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Fo(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function _o(e,t){return Ao(e,t.map((e=>1)),t)}function Do(e,t,n){f(Ro(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Oo(e,t){if(Ro(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Mo(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Lo(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const zo=Rs({logSumExp_:function(e,t=null,n=!1){const r=Ts(e,"x","logSumExp"),s=S(t,r.shape),a=$o(r,s,!0),i=Wa(r,a),o=mo(i),u=To(o,s),l=Co(u),c=ka(Vi(a,l.shape),l);if(n){const e=_o(c.shape,s);return Vi(c,e)}return c}}),Po=Rs({logicalAnd_:function(e,t){const n=Ts(e,"a","logicalAnd","bool"),r=Ts(t,"b","logicalAnd","bool");ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(Ct,s)}}),Bo=Rs({matMul_:function(e,t,n=!1,r=!1){let s=Ts(e,"a","matMul"),a=Ts(t,"b","matMul");[s,a]=ds(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return vs.runKernel(be,i,o)}}),Wo=Rs({maxPool_:function(e,t,n,r,s){const a=Ts(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Vi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),f(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),f(Pi(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Ui("maxPool",r,s);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=vs.runKernel(Ft,u,l);return o?Vi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Uo=Rs({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=Ts(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=Vi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),f(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),f("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Ui("maxPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=vs.runKernel(Dt,l,c);return u?Vi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Vo=Rs({mean_:function(e,t=null,n=!1){const r={x:Ts(e,"x","mean")},s={axis:t,keepDims:n};return vs.runKernel(Lt,r,s)}}),Go=Rs({min_:function(e,t=null,n=!1){const r={x:Ts(e,"x","min")},s={axis:t,keepDims:n};return vs.runKernel(zt,r,s)}}),Ho=Rs({minimum_:function(e,t){let n=Ts(e,"a","minimum"),r=Ts(t,"b","minimum");[n,r]=ds(n,r),"bool"===n.dtype&&(n=va(n,"int32"),r=va(r,"int32")),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(Pt,s)}}),jo=Rs({moments_:function(e,t=null,n=!1){const r=S(t,(e=Ts(e,"x","moments")).shape),s=Vo(e,r,n);let a=s.shape;n||(a=_o(s.shape,r));const i=$a(Wa(va(e,"float32"),Vi(s,a)));return{mean:s,variance:Vo(i,r,n)}}}),Ko=Rs({neg_:function(e){const t={x:Ts(e,"x","neg")};return vs.runKernel(Gt,t)}}),qo=Rs({notEqual_:function(e,t){let n=Ts(e,"a","notEqual","string_or_numeric"),r=Ts(t,"b","notEqual","string_or_numeric");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(Ht,s)}}),Xo=Rs({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Ts(e,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:n,offValue:r};return vs.runKernel(Yt,a,i)}});function Yo(e,t="float32"){if(W(e),"complex64"===t){const t=Yo(e,"float32"),n=Yo(e,"float32");return As(t,n)}const n=P(b(e),t);return vs.makeTensor(n,e,t)}function Jo(e,t="float32"){if(W(e),"complex64"===t){const t=Jo(e,"float32"),n=Yo(e,"float32");return As(t,n)}const n=z(b(e),t);return vs.makeTensor(n,e,t)}const Zo=Rs({onesLike_:function(e){const t={x:Ts(e,"x","onesLike")};return vs.runKernel(Xt,t)}}),Qo=Rs({pad_:function(e,t,n=0){const r=Ts(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return vs.runKernel(Zt,a,s)}}),eu=Rs({prelu_:function(e,t){const n={x:Ts(e,"x","prelu"),alpha:Ts(t,"alpha","prelu")};return vs.runKernel(en,n)}});var tu=n(6307);class nu{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=tu.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class ru{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=tu.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const su=Rs({randomNormal_:function(e,t=0,n=1,r,s){if(W(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new nu(t,n,r,!1,s),i=ya(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),au=Rs({randomUniform_:function(e,t=0,n=1,r="float32",s){W(e);const a=ya(e,r),i=new ru(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function iu(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return vs.runKernel(an,{},s)}const ou=Rs({relu_:function(e){const t={x:Ts(e,"x","relu")};return vs.runKernel(ln,t)}}),uu=Rs({reverse_:function(e,t){const n={x:Ts(e,"x","reverse")},r={dims:t};return vs.runKernel(mn,n,r)}}),lu=Rs({selu_:function(e){const t={x:Ts(e,"x","selu")};return vs.runKernel(In,t)}}),cu=Rs({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Ts(e,"x","separableConv2d"),u=Ts(t,"depthwiseFilter","separableConv2d"),l=Ts(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Vi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");f(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),f(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),f(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),f(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),f(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],p=u.shape[3];f(l.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`));const g=ho(c,u,r,s,i,a),m=ro(g,l,1,"valid",i);return h?Vi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),hu=Rs({sigmoid_:function(e){const t={x:Ts(e,"x","sigmoid","float32")};return vs.runKernel(Tn,t)}}),du=Rs({slice_:function(e,t,n){const r=Ts(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return vs.runKernel(Sn,s,a)}}),pu=Rs({slice1d_:function(e,t,n){const r=Ts(e,"x","slice1d");return f(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),du(r,[t],[n])}}),fu=Rs({slice2d_:function(e,t,n){const r=Ts(e,"x","slice2d");return f(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),du(r,t,n)}}),gu=Rs({slice3d_:function(e,t,n){const r=Ts(e,"x","slice3d");return f(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),du(r,t,n)}}),mu=Rs({slice4d_:function(e,t,n){const r=Ts(e,"x","slice4d");return f(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),du(r,t,n)}}),bu=Rs({softmax_:function(e,t=-1){const n=Ts(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return vs.runKernel(Dn,r,s)}}),xu=Rs({softplus_:function(e){const t={x:Ts(e,"x","softplus")};return vs.runKernel(En,t)}}),yu=Rs({split_:function(e,t,n=0){const r={x:Ts(e,"x","split")},s={numOrSizeSplits:t,axis:n};return vs.runKernel(_n,r,s)}}),vu=Rs({squeeze_:function(e,t){const n=Ts(e,"x","squeeze","string_or_numeric");return Vi(n,C(n.shape,t).newShape)}}),wu=Rs({stack_:function(e,t=0){const n=Es(e,"tensors","stack","string_or_numeric");f(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&f(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return vs.runKernel(Jt,r,s)}}),ku=Rs({tanh_:function(e){const t={x:Ts(e,"x","tanh","float32")};return vs.runKernel(Xn,t)}});function Iu(e,t){m(e);const n=Cs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Fs(e,null,n,t)}function Su(e,t,n){if(m(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Cs(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Fs(e,t,r,n)}const Cu=Rs({truncatedNormal_:function(e,t=0,n=1,r,s){if(W(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new nu(t,n,r,!0,s),i=ya(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Nu=Rs({unstack_:function(e,t=0){const n=Ts(e,"x","unstack","string_or_numeric");f(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return vs.runKernel(tr,r,s)}});function $u(e,t=!0,n,r){return vs.makeVariable(e,t,n,r)}const Tu=Rs({where_:function(e,t,n){const r=Ts(t,"a","where"),s=Ts(n,"b","where"),a=Ts(e,"condition","where","bool"),i=ja(ja(a.shape,r.shape),s.shape),o={condition:Yi(a,i),t:Yi(r,i),e:Yi(s,i)};return vs.runKernel(kn,o)}}),Eu=Rs({imag_:function(e){const t={input:Ts(e,"input","imag")};return vs.runKernel(gt,t)}}),Ru=Rs({real_:function(e){const t={input:Ts(e,"input","real")};return vs.runKernel(on,t)}}),Au=Rs({transpose_:function(e,t,n){const r=Ts(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),f(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{f(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?Ls((()=>{let e=Ru(r),t=Eu(r);return e=vs.runKernel(Qn,{x:e},a),t=vs.runKernel(Qn,{x:t},a),n&&(t=Ko(t)),As(e,t)})):vs.runKernel(Qn,s,a)}}),Fu=Rs({dropout_:function(e,t,n,r){const s=Ts(e,"x","dropout");if(f("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),f(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Qr?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(x(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Sa(vo(ka(au(a,0,1,"float32",r),i)),i);return Ca(s,o)}}),_u=Rs({fft_:function(e){f("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return vs.runKernel(rt,t)}}),Du=Rs({rfft_:function(e,t){f("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=du(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Zi([e,Yo(r)],e.shape.length-1),n=t}else s=e;const a=Ta(s),i=Vi(As(s,a),[r,n]),o=_u(i),u=Math.floor(n/2)+1,l=Ru(o),c=Eu(o),h=yu(l,[u,n-u],l.shape.length-1),d=yu(c,[u,n-u],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,Vi(As(h[0],d[0]),p)}}),Ou=Rs({ifft_:function(e){f("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return vs.runKernel(ft,t)}}),Mu=Rs({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Vi(e,[n,t]);r=Ou(s)}else{const s=[n,2*(t-1)],a=Vi(Ru(e),[n,t]),i=Vi(Eu(e),[n,t]),o=uu(du(a,[0,1],[n,t-2]),1),u=Ca(uu(du(i,[0,1],[n,t-2]),1),Ra(-1)),l=Zi([a,o],1),c=Zi([i,u],1),h=Vi(As(l,c),[s[0],s[1]]);r=Ou(h)}if(r=Ru(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Vi(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Lu=Rs({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=Vi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Vi(t,[1,t.shape[0],t.shape[1],t.shape[2]])),f(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),f(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),f(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];f(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),f(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Ui("conv2dDerFilter",s,i);const h={x:o,dy:u},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return vs.runKernel(Ee,h,d)}}),zu=Rs({relu6_:function(e){const t={x:Ts(e,"x","relu6")};return vs.runKernel(gn,t)}}),Pu=Rs({step_:function(e,t=0){const n={x:Ts(e,"x","step")},r={alpha:t};return vs.runKernel(sr,n,r)}});function Bu(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ca(e,Pu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Wu(e,t){let n=t;const r=Ha(e.shape,t.shape);return r.length>0&&(n=To(n,r)),Vi(n,e.shape)}function Uu(e,t,n,r){if("linear"===t)return e;if("relu"===t)return ou(e);if("elu"===t)return po(e);if("relu6"===t)return zu(e);if("prelu"===t)return eu(e,n);if("leakyrelu"===t)return So(e,r);if("sigmoid"===t)return hu(e);throw new Error(`Unknown fused activation ${t}.`)}const Vu=(e,t)=>!(e>0)||"linear"===t,Gu=Rs({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Vu(vs.state.gradientDepth,u)){f("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=ro(e,t,n,r,s,a,i);return null!=o&&(h=ka(h,o)),Uu(h,u,l,c)}const h=Ts(e,"x","conv2d","float32"),d=Ts(t,"filter","conv2d","float32");let p=h,g=!1;3===h.rank&&(g=!0,p=Vi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),f(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),f(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Ui("fused conv2d",r,i);const m="NHWC"===s?p.shape[3]:p.shape[1];f(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),f(Pi(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const b=Ai(p.shape,d.shape,n,a,r,i);let x,y;if(null!=o&&(x=Ts(o,"bias","fused conv2d"),[x]=ds(x,h),"NHWC"===s?ja(b.outShape,x.shape):(f(x.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`)),f(0===x.shape.length||x.shape[0]===b.outChannels||1===x.shape[0],(()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=l){const e=l.shape;if(f(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)f(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{ja(e,b.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}y=Ts(l,"prelu weights","fused conv2d")}const v=(e,t)=>{f("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[i,o,l,c]=t,h=Bu(e,l,u);f(zi(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const d=[ao(o.shape,h,i,n,r),Lu(o,h,i.shape,n,r)];if(null!=c){const e=Wu(c,h);d.push(e)}return d},w={x:p,filter:d,bias:x,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=Ea(((e,t,n)=>{let r=vs.runKernel(or,w,k);return n([t,e,r]),g&&(r=Vi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(p,d)}{const e=Ea(((e,t,n,r)=>{let s=vs.runKernel(or,w,k);return r([t,e,s,n]),g&&(s=Vi(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(p,d,x)}}}),Hu=Rs({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=Vi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Vi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return vs.runKernel(Ue,l,c)}}),ju=Rs({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=Vi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=vs.runKernel(Ve,l,c);return u?Vi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Ku=Rs({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Vu(vs.state.gradientDepth,a)){let u=Bo(e,t,n,r);return null!=s&&(u=ka(u,s)),Uu(u,a,i,o)}let u=Ts(e,"a","fused matMul"),l=Ts(t,"b","fused matMul");[u,l]=ds(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],g=u.shape.slice(0,-2),m=l.shape.slice(0,-2),x=b(g),y=b(m);f(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=ja(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),w=Vi(u,n?[x,c,d]:[x,d,c]),k=Vi(l,r?[y,p,h]:[y,h,p]);let I,S;null!=s&&(I=Ts(s,"bias","fused matMul"),[I]=ds(I,u),ja(v,I.shape)),null!=i&&(S=Ts(i,"prelu weights","fused matMul"));const C=(e,t)=>{const[i,o,u,l]=t,c=Bu(Vi(e,u.shape),u,a);let h,d;return n||r?!n&&r?(h=Bo(c,o,!1,!1),d=Bo(c,i,!0,!1)):n&&!r?(h=Bo(o,c,!1,!0),d=Bo(i,c,!1,!1)):(h=Bo(o,c,!0,!0),d=Bo(c,i,!0,!0)):(h=Bo(c,o,!1,!0),d=Bo(i,c,!0,!1)),null!=s?[h,d,Wu(l,c)]:[h,d]},N={a:w,b:k,bias:I,preluActivationWeights:S},$={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=Ea(((e,t,n)=>{const r=vs.runKernel(ir,N,$);return n([e,t,r]),{value:Vi(r,v),gradFunc:C}}));return e(w,k)}{const e=Ea(((e,t,n,r)=>{const s=vs.runKernel(ir,N,$);return r([e,t,s,n]),{value:Vi(s,v),gradFunc:C}}));return e(w,k,I)}}}),qu=Rs({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=Ts(e,"image","cropAndResize"),o=Ts(t,"boxes","cropAndResize","float32"),u=Ts(n,"boxInd","cropAndResize","int32"),l=o.shape[0];f(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),f(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),f(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),f(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),f(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),f("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:u},h={method:s,extrapolationValue:a,cropSize:r};return vs.runKernel(ze,c,h)}}),Xu=Rs({flipLeftRight_:function(e){const t=Ts(e,"image","flipLeftRight","float32");f(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return vs.runKernel(at,n,{})}}),Yu=Rs({grayscaleToRGB_:function(e){const t=Ts(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];f(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),f(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,xo(t,s)}}),Ju=Rs({einsum_:function(e,...t){const n=t.map(((e,t)=>Ts(e,`tensors${t}`,"einsum"))),r={equation:e};return vs.runKernel(Xe,n,r)}}),Zu=Rs({rgbToGrayscale_:function(e){const t=Ts(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];f(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),f(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,a=va(t,"float32"),i=Iu([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Ju("ij,j->i",a,i);break;case 3:o=Ju("ijk,k->ij",a,i);break;case 4:o=Ju("ijkl,l->ijk",a,i);break;case 5:o=Ju("ijklm,m->ijkl",a,i);break;case 6:o=Ju("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return o=bo(o,-1),va(o,s)}}),Qu=Rs({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Ts(e,"image","rotateWithOffset","float32");f(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return vs.runKernel(ar,a,i)}});function el(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),f(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),f(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),f(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),f(1===t.rank,(()=>"scores must be a 1D tensor")),f(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),f(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const tl=Rs({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ts(e,"boxes","nonMaxSuppression","float32"),i=Ts(t,"scores","nonMaxSuppression","float32"),o=el(a,i,n,r,s),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return vs.runKernel(jt,{boxes:a,scores:i},u)}});function nl(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||rl)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function rl(e,t){return e>t?1:e<t?-1:0}function sl(e,t,n,r,s){return ol(e,t,n,r,s,0)}function al(e,t,n,r,s,a){return ol(e,t,n,r,s,0,!1,a,!0)}function il(e,t,n,r,s,a){return ol(e,t,n,r,s,a,!0)}function ol(e,t,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>s&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(cl);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=ul(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*ll(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&nl(l,t,cl))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return i&&(g.selectedScores=d),u&&(g.validOutputs=p),g}function ul(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(a,l),m=Math.max(i,c),b=Math.min(o,h),x=Math.min(u,d),y=Math.max(b-g,0)*Math.max(x-m,0);return y/(p+f-y)}function ll(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function cl(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const hl=Rs({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ts(e,"boxes","nonMaxSuppression"),o=Ts(t,"scores","nonMaxSuppression"),u=el(i,o,n,r,s,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=vs.runKernel(qt,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),dl=Rs({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ts(e,"boxes","nonMaxSuppression"),o=Ts(t,"scores","nonMaxSuppression"),u=el(i,o,n,r,s,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=vs.runKernel(Kt,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),pl=Rs({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Ts(e,"images","resizeBilinear");f(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),f(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),f(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Vi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=vs.runKernel(pn,o,u);return i?Vi(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),fl=Rs({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Ts(e,"images","resizeNearestNeighbor");f(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),f(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),f("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),f(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Vi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=vs.runKernel(hn,o,u);return i?Vi(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),gl=Rs({bincount_:function(e,t,n){const r=Ts(e,"x","bincount"),s=Ts(t,"weights","bincount");f("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),f(n>=0,(()=>`size must be non-negative, but got ${n}.`)),f(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return vs.runKernel(ye,a,i)}}),ml=Rs({lessEqual_:function(e,t){let n=Ts(e,"a","lessEqual","string_or_numeric"),r=Ts(t,"b","lessEqual","string_or_numeric");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(wt,s)}}),bl=Rs({round_:function(e){const t={x:Ts(e,"x","round")};return vs.runKernel(bn,t)}}),xl=Rs({threshold_:function(e,t="binary",n=!1,r=.5){const s=Ts(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,u,l,c=Ca(Iu([r]),255);if(f(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),f(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),f("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),f("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,u]=yu(s,[1,1,1],-1);const e=Ca(i,.2989),t=Ca(o,.587),n=Ca(u,.114);l=ka(ka(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,u=Iu([-1]),l=Iu([0]),c=Iu([0]);for(let h=0;h<e.size-1;h++){n=du(e,0,h+1),r=du(e,h+1),i=Sa(To(n),t),o=Sa(To(r),t);const d=To(Ca(n,iu(0,n.size)));s=Sa(d,To(n));const p=za(r.shape,n.size),f=ka(iu(0,r.size),p),g=Ca(r,f);a=Sa(To(g),To(r));const m=Wa(s,a),b=Wa(s,a),x=Ca(i,o);c=Ca(Ca(x,m),b);const y=ko(c,l);l=Tu(y,c,l),u=Tu(y,Iu([h]),u)}return u}(gl(va(bl(l),"int32"),_s([]),256),a));const h=n?ml(l,c):ko(l,c);return va(Ca(h,255),"int32")}}),yl=Rs({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=Ts(e,"image","transform","float32"),o=Ts(t,"transforms","transform","float32");f(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),f(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),f(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return vs.runKernel(Zn,u,l)}}),vl=Rs({less_:function(e,t){let n=Ts(e,"a","less","string_or_numeric"),r=Ts(t,"b","less","string_or_numeric");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(vt,s)}}),wl=Rs({bandPart_:function(e,t,n){const r=Ts(e,"a","bandPart");f(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);let o,u;"number"==typeof t?(f(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),f(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),o=Ts(t<0?a:t,"numLower","bandPart")):(f("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=Tu(vl(t,0),a,Ho(t,a))),"number"==typeof n?(f(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),f(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),u=Ts(n<0?i:n,"numUpper","bandPart")):(f("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=Tu(vl(n,0),i,Ho(n,i)));const l=Vi(iu(0,a,1,"int32"),[-1,1]),c=iu(0,i,1,"int32"),h=Wa(l,c),d=Po(ml(h,o),Io(h,Ko(u))),p=Yo([a,i],r.dtype);return Vi(wu(Nu(Vi(r,[-1,a,i])).map((e=>Tu(d,e,p)))),s)}});function kl(e,t,n=null){if(0===e.rank)return Va(e);if(1!==e.rank&&null===n)return kl(Vi(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return To(Va(e),n);if(t===1/0)return $o(Va(e),n);if(t===-1/0)return Go(Va(e),n);if("euclidean"===t||2===t)return Na(To(Ba(Va(e),Ra(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return $o(To(Va(e),n[0]),n[1]-1);if(t===1/0)return $o(To(Va(e),n[1]),n[0]);if(t===-1/0)return Go(To(Va(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Na(To($a(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Il=Rs({norm_:function(e,t="euclidean",n=null,r=!1){const s=kl(e=Ts(e,"x","norm"),t,n);let a=s.shape;if(r){const t=S(n,e.shape);a=_o(s.shape,t)}return Vi(s,a)}}),Sl=Rs({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,f(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)f(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=yu(e,e.shape[0],0).map((e=>vu(e,[0])));f(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(vs.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Ca(To(Ca(n[r],e)),n[r]);e=Wa(e,t)}return Sa(e,Il(e,"euclidean"))})));return t?wu(n,0):n}});function Cl(e,t=!1){return vs.tidy((()=>{f(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=yo(n),a=wa(e);const i=Su([[1]],[1,1]);let o=wa(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=o,l=s;[o,a,s]=vs.tidy((()=>{const t=du(a,[e,e],[n-e,1]),u=Il(t),l=du(a,[e,e],[1,1]),c=Tu(ko(l,0),Su([[-1]]),Su([[1]])),h=Wa(l,Ca(c,u)),d=Sa(t,h);o=1===d.shape[0]?wa(i):Zi([i,du(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Ko(Sa(Bo(c,h),u)),f=du(a,[e,0],[n-e,r]),g=Ca(p,o),m=Au(o);if(0===e)a=Wa(f,Bo(g,Bo(m,f)));else{const t=Wa(f,Bo(g,Bo(m,f)));a=Zi([du(a,[0,0],[e,r]),t],0)}const b=Au(g),x=du(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Wa(x,Bo(Bo(x,o),b));else{const t=Wa(x,Bo(Bo(x,o),b));s=Zi([du(s,[0,0],[n,e]),t],1)}return[o,a,s]})),zs([t,u,l])}return!t&&n>r&&(s=du(s,[0,0],[n,r]),a=du(a,[0,0],[r,r])),[s,a]}))}const Nl=Rs({qr_:function(e,t=!1){if(f(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Cl(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Nu(Vi(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=Cl(e,t);s.push(n),a.push(r)})),[Vi(wu(s,0),e.shape),Vi(wu(a,0),e.shape)]}}});var $l;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}($l||($l={}));const Tl=Rs({squaredDifference_:function(e,t){let n=Ts(e,"a","squaredDifference"),r=Ts(t,"b","squaredDifference");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(Bn,s,{})}}),El={flipLeftRight:Xu,grayscaleToRGB:Yu,resizeNearestNeighbor:fl,resizeBilinear:pl,rgbToGrayscale:Zu,rotateWithOffset:Qu,cropAndResize:qu,nonMaxSuppression:tl,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ts(e,"boxes","nonMaxSuppressionAsync"),i=Ts(t,"scores","nonMaxSuppressionAsync"),o=el(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=sl(l,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),Iu(h,"int32")},nonMaxSuppressionWithScore:hl,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ts(e,"boxes","nonMaxSuppressionAsync"),o=Ts(t,"scores","nonMaxSuppressionAsync"),u=el(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=il(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Iu(d,"int32"),selectedScores:Iu(p)}},nonMaxSuppressionPadded:dl,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ts(e,"boxes","nonMaxSuppressionAsync"),o=Ts(t,"scores","nonMaxSuppressionAsync"),u=el(i,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:g}=al(d,p,l,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Iu(f,"int32"),validOutputs:Ra(g,"int32")}},threshold:xl,transform:yl},Rl={bandPart:wl,gramSchmidt:Sl,qr:Nl},Al=class{static sgd(e){return new Xa(e)}static momentum(e,t,n=!1){return new Ya(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Ja(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Ua(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new La(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new qa(e,t,n,r,s)}static adagrad(e,t=.1){return new Pa(e,t)}},Fl="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function _l(){return new Promise((e=>Fl((()=>e()))))}function Dl(e,t){const n=e[0].length;e.forEach(((e,t)=>{f(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),f(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)f(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Ol(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Ml;function Ll(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function zl(e){const t={FIRST_DIM_SIZE:Ml.FIRST_DIM_SIZE,VALUE_ROWIDS:Ml.VALUE_ROWIDS,ROW_LENGTHS:Ml.ROW_LENGTHS,ROW_SPLITS:Ml.ROW_SPLITS,ROW_LIMITS:Ml.ROW_LIMITS,ROW_STARTS:Ml.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Pl(e){return 0===e.length?0:e[0]===Ml.FIRST_DIM_SIZE?e.length-1:e.length}function Bl(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Ml||(Ml={}));const Wl=30;function Ul(e){return e<=Wl?e:D(e,Math.floor(Math.sqrt(e)))}function Vl(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Gl(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Hl(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function jl(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Kl(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function ql(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Xl(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===b(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,u=s.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=o[e],u.push(o[e]);const c=[...O(e.shape).map((e=>e/l)),1].slice(0,a);return[u,i,l,c]}function Yl(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Jl(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Yl(n,t,e)}function Zl(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:b(t.shape)/o,sliceSize:i,strides:[...O(n.slice(0,s)),1],outputSize:b(n)}}const Ql=1.7580993408473768,ec=1.0507009873554805,tc=.3275911,nc=.254829592,rc=-.284496736,sc=1.421413741,ac=-1.453152027,ic=1.061405429;function oc(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function uc(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function lc(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function cc(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function hc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function dc(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function pc(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function fc(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const gc="->",mc=/->/g,bc=",",xc="...";function yc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(mc,"").length)/gc.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${gc}").`);const[r,s]=e.split(gc);f(-1===r.indexOf(xc),(()=>`The ellipsis notation ("${xc}") is not supported yet.`));const a=r.split(bc),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==bc&&o.push(t)}const u=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<a[e].length;++t)u[e].push(o.indexOf(a[e][t]))}const l=o.length,c=[];for(let e=s.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function vc(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function wc(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:f(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function kc(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=Sc(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function Ic(e){return e.every(((e,t)=>e===t))}function Sc(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Cc(e,t,n=0){let r=[];if("number"==typeof t)f(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);f(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}f(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Nc(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function $c(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Tc(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Ec(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Rc(e,t){return`size ${e} must be non-negative, not ${t}`}function Ac(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Fc(e,t){return`Input to reshape is a SparseTensor with ${b(e)}\n  dense values, but the requested shape requires a multiple of ${b(t)}. inputShape=${e} outputShape= ${t}`}function _c(e,t){return`Input to reshape is a tensor with ${b(e)} dense values, but the requested shape has ${b(t)}. inputShape=${e} outputShape=${t}`}function Dc(){return"segment ids must be >= 0"}function Oc(){return"segment ids are not increasing"}function Mc(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Lc(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function zc(e,t){let n,r=!1;for(e<=Wl?(n=e,r=!0):n=D(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=D(e,n+1);return n}function Pc(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Bc(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Wc(e){try{return e.map((e=>zr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Uc(e){return e.map((e=>Lr(e)))}function Vc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=ya(e,"int32"),s=ya([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}!function(){for(const e of Za)Oa(e)}();const Gc={kernelName:Q,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,Pu(va(n,"float32"),-1))}}},Hc={kernelName:ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=$a(va(n,"float32")),r=Na(Wa(Ra(1),t));return Ko(Sa(e,r))}}}},jc={kernelName:te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Na(Wa($a(va(n,"float32")),1));return Sa(e,t)}}}},Kc={kernelName:ne,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{let t=e;const r=Ha(n.shape,s);return r.length>0&&(t=To(t,r)),Vi(t,n.shape)},b:()=>{let t=e;const n=Ha(r.shape,s);return n.length>0&&(t=To(t,n)),Vi(t,r.shape)}}}},qc={kernelName:re,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Xc={kernelName:ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ta(n)}}},Yc={kernelName:oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ta(n)}}},Jc={kernelName:ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,Na(Wa(Ra(1),$a(va(n,"float32")))))}}},Zc={kernelName:le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Na(ka(Ra(1),$a(va(n,"float32"))));return Sa(e,t)}}}},Qc={kernelName:de,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{const t=ka($a(n),$a(r));let a=Ca(e,Sa(r,t));const i=Ha(n.shape,s);return i.length>0&&(a=To(a,i)),Vi(a,n.shape)},b:()=>{const t=ka($a(n),$a(r));let a=Ko(Ca(e,Sa(n,t)));const i=Ha(r.shape,s);return i.length>0&&(a=To(a,i)),Vi(a,r.shape)}}}},eh={kernelName:ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,ka($a(va(n,"float32")),1))}}},th={kernelName:he,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,Wa(Ra(1),$a(va(n,"float32"))))}}},nh=Rs({avgPool3dGrad_:function(e,t,n,r,s,a){const i=Ts(e,"dy","avgPool3dGrad"),o=Ts(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=Vi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Vi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),f(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),Ui("avgPool3dGrad",s,a);const h={dy:u,input:l},d={filterSize:n,strides:r,pad:s,dimRoundingMode:a},p=vs.runKernel(me,h,d);return c?Vi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),rh={kernelName:ge,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>nh(e,r,s,a,i,o)}}},sh=Rs({avgPoolGrad_:function(e,t,n,r,s){const a=Ts(e,"dy","avgPoolGrad"),i=Ts(t,"input","avgPoolGrad");f(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=Vi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Vi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),f(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),f(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:s},d=vs.runKernel(fe,c,h);return l?Vi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ah={kernelName:pe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>sh(e,r,s,a,i)}}},ih={kernelName:be,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Bo(e,s,!1,!1),b:()=>Bo(e,r,!0,!1)}:a&&!i?{a:()=>Bo(s,e,!1,!0),b:()=>Bo(r,e,!1,!1)}:{a:()=>Bo(s,e,!0,!0),b:()=>Bo(e,r,!0,!0)}:{a:()=>Bo(e,s,!1,!0),b:()=>Bo(r,e,!0,!1)}}},oh=Rs({spaceToBatchND_:function(e,t,n){const r=Ts(e,"x","spaceToBatchND");f(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),f(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),f(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return vs.runKernel(Fn,s,a)}}),uh={kernelName:xe,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>oh(e,r,s)}}},lh={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>To(e,o,!0)}}},ch={kernelName:ke,gradFunc:e=>({x:()=>e.clone()})},hh={kernelName:Ie,gradFunc:e=>({x:()=>Ta(e)})},dh={kernelName:Se,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>Tu(Po(Io(r,s),ml(r,a)),e,Ta(e))}}},ph={kernelName:Ne,inputsToSave:["x"],gradFunc:Gc.gradFunc},fh={kernelName:$e,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=S(s,t[0].shape)[0],i=r.map((e=>e[a]));return yu(e,i,a).map((e=>()=>e))}},gh={kernelName:Te,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return f(zi(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>ao(r.shape,e,s,i,o,u),filter:()=>Lu(r,e,s.shape,i,o,u)}}},mh={kernelName:Re,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>ro(e,s,a,i,o,1,u),filter:()=>Lu(e,r,s.shape,a,i,o,u)}}},bh=Rs({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=Vi(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Vi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),f(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),f(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),f(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),f(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),f(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},u={strides:r,pad:s,filterShape:n};return vs.runKernel(Fe,o,u)}}),xh={kernelName:Ae,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;f(zi(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>uo(i.shape,e,o,s,a),filter:()=>bh(i,e,o.shape,s,a)}}},yh=Rs({sin_:function(e){const t={x:Ts(e,"x","sin","float32")};return vs.runKernel(Cn,t)}}),vh={kernelName:De,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(Ko(yh(va(n,"float32"))),e)}}},wh=Rs({sinh_:function(e){const t={x:Ts(e,"x","sinh")};return vs.runKernel(Nn,t)}}),kh={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(wh(va(n,"float32")),e)}}},Ih=Rs({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Ts(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return vs.runKernel(Le,s,a)}}),Sh={kernelName:Le,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=Oo([s],r.rank);let n=Ih(e,s,a,!i);return null!=t&&(n=Au(n,t)),n}}}},Ch={kernelName:We,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;f(zi(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return f(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),f(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),f(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),f(Pi(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),Ui("depthwiseConv2d",a,i),{x:()=>ju(u.shape,e,l,s,a,o,i),filter:()=>Hu(u,e,l.shape,s,a,o,i)}}},Nh={kernelName:He,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>vs.runKernel(je,a,n),filter:()=>vs.runKernel(Ke,i,n)}}},$h={kernelName:Ye,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>vs.runKernel(Je,r)}}},Th={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ca(mo(Ko($a(n))),2/Math.sqrt(Math.PI));return{x:()=>Ca(e,r)}}},Eh={kernelName:et,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,n)}}},Rh={kernelName:tt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Vi(e,n.shape)}}},Ah={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,mo(n))}}},Fh={kernelName:it,gradFunc:e=>({x:()=>Ta(e)})},_h={kernelName:ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{const t=Sa(e,va(r,"float32")),a=Ha(n.shape,s);return a.length>0?Vi(To(t,a),n.shape):t},b:()=>{let t=Ca(e,va(n,"float32"));const a=Ha(r.shape,s);a.length>0&&(t=Vi(To(t,a),r.shape));const i=$a(r);return Ko(Sa(t,va(i,"float32")))}}}},Dh=Rs({rsqrt_:function(e){const t={x:Ts(e,"x","rsqrt","float32")};return vs.runKernel(xn,t)}}),Oh={kernelName:ut,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,u=null==o?Ra(1):o,l=Ha(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Wa(s,a),d=Ca(e,u),p=Dh(ka(i,Ra(r))),f=Ca(Ca(Ca(p,p),p),Ra(-.5));return{x:()=>1===a.rank?Vi(Ca(Ca(e,xo(Vi(p,[1,1,1,a.shape[0]]),c)),u),s.shape):Vi(Ca(Ca(e,p),u),s.shape),mean:()=>{let e=Ca(Ca(p,Ra(-1)),d);return 1===a.rank&&(e=To(e,l)),Vi(e,a.shape)},variance:()=>{let e=Ca(Ca(f,h),d);return 1===a.rank&&(e=To(e,l)),Vi(e,a.shape)},scale:()=>{const t=Ca(h,p);let n=Ca(e,t);return 1===a.rank&&(n=To(n,l)),Vi(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=To(t,l)),Vi(t,a.shape)}}}},Mh=Rs({unsortedSegmentSum_:function(e,t,n){const r=Ts(e,"x","unsortedSegmentSum"),s=Ts(t,"segmentIds","unsortedSegmentSum","int32");f(y(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return vs.runKernel(nr,a,i)}}),Lh={kernelName:lt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a,batchDims:i}=n,o=S(a,r.shape)[0],u=(e,t,n)=>()=>{const r=e.shape,s=t.size,i=r.slice(0,o),u=i.length,l=r.slice(a,r.length).slice(1),c=l.length,h=zh(0,u),d=zh(u+1,u+1+c),p=Ph([i,[s],l]),f=Vi(n,p),g=Vi(t,[s]),m=Ph([[u],h,d]),b=Au(f,m);let x=Mh(b,g,e.shape[o]);const y=Mo(m);return x=Au(x,y),x};if(1===i){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=wu(n.map(((t,n)=>u(t,s.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)},indices:()=>s}}return{x:u(r,s,e),indices:()=>s}}};function zh(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ph(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Bh={kernelName:dt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ta(n),b:()=>Ta(r)}}},Wh={kernelName:pt,gradFunc:e=>({x:()=>va(e,"float32")})},Uh={kernelName:mt,gradFunc:e=>({x:()=>Ta(e)})},Vh={kernelName:bt,gradFunc:e=>({x:()=>Ta(e)})},Gh={kernelName:xt,gradFunc:e=>({x:()=>Ta(e)})},Hh={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=ko(r,0);return{x:()=>Tu(a,e,Ca(e,s))}}},jh={kernelName:St,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,ka(n,1))}}},Kh={kernelName:It,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,va(n,"float32"))}}},qh={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=mo(r);return Wa(e,Ca(To(e,s,!0),t))}}}},Xh=Rs({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return vs.runKernel(Et,o,u)}}),Yh={kernelName:Tt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>Xh(r,s,e,a,i,o,u)}}};function Jh(e,t,n,r){return t.rank<n.rank&&(t=Vi(t,_o(t.shape,r))),e.rank<n.rank&&(e=Vi(e,_o(e.shape,r))),{x:()=>Ca(e,va(fo(n,t),e.dtype))}}const Zh={kernelName:Rt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Jh(e,t[1],a,S(s,a.shape));return{x:()=>i.x()}}},Qh={kernelName:At,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ca(e,va(Io(n,r),"float32")),b:()=>Ca(e,va(vl(n,r),"float32"))}}},ed=Rs({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=Ts(e,"dy","maxPool3dGrad"),u=Ts(t,"input","maxPool3dGrad"),l=Ts(n,"output","maxPool3dGrad");let c=o,h=u,d=l,p=!1;4===u.rank&&(p=!0,c=Vi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Vi(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=Vi(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),f(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),f(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),f(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Ui("maxPool3dGrad",a,i);const g={dy:c,input:h,output:d},m={filterSize:r,strides:s,pad:a,dimRoundingMode:i},b=vs.runKernel(Ot,g,m);return p?Vi(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),td={kernelName:Dt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>ed(e,r,s,a,i,o,u)}}},nd=Rs({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Ts(e,"dy","maxPoolGrad"),u=Ts(t,"input","maxPoolGrad"),l=Ts(n,"output","maxPoolGrad");f(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),f(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),f(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),Ui("maxPoolGrad",a,i);const c={dy:o,input:u,output:l},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return vs.runKernel(_t,c,h)}}),rd={kernelName:Ft,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>nd(e,r,s,a,i,o)}}},sd={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=S(s,r.shape),i=b(Fo(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=Vi(e,t);return Sa(Ca(n,Jo(r.shape,"float32")),i)}}}},ad={kernelName:zt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Jh(e,i,a,S(s,a.shape));return{x:()=>o.x()}}},id={kernelName:Pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ca(e,va(ml(n,r),"float32")),b:()=>Ca(e,va(ko(n,r),"float32"))}}},od={kernelName:Bt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>du(e,a,r.shape)}}},ud={kernelName:Wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{const t=Ha(n.shape,s);return t.length>0?Vi(To(e,t),n.shape):e},b:()=>{const t=Ca(e,Ko(vo(Sa(n,r)))),a=Ha(r.shape,s);return a.length>0?Vi(To(t,a),r.shape):t}}}},ld={kernelName:Vt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{const t=Ca(e,va(r,"float32")),a=Ha(n.shape,s);return a.length>0?Vi(To(t,a),n.shape):t},b:()=>{const t=Ca(e,va(n,"float32")),a=Ha(r.shape,s);return a.length>0?Vi(To(t,a),r.shape):t}}}},cd={kernelName:Gt,gradFunc:e=>({x:()=>Ko(e)})},hd={kernelName:Yt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Yo(n.shape,"float32")}}},dd={kernelName:Xt,gradFunc:e=>({x:()=>Ta(e)})},pd={kernelName:Jt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Nu(e,r).map((e=>()=>e))}},fd={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>du(e,a,r.shape)}}},gd={kernelName:Qt,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=ja(a.shape,i.shape);return{a:()=>{const t=va(i,"float32");let n=Ca(e,Ca(t,Ba(a,Wa(t,Ra(1)))));const r=Ha(a.shape,o);return r.length>0&&(n=To(n,r)),Vi(n,a.shape)},b:()=>{const t=ko(a,0),n=Tu(t,Co(a),Ta(a));let r=Ca(e,Ca(s,n));const u=Ha(i.shape,o);return u.length>0&&(r=To(r,u)),Vi(r,i.shape)}}}},md={kernelName:en,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=ko(n,0);return{x:()=>Tu(s,e,Ca(e,r)),alpha:()=>{let t=Tu(s,Ta(e),Ca(e,n));const a=Ha(r.shape,e.shape);return a.length>0&&(t=To(t,a)),Vi(t,r.shape)}}}},bd=Rs({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:Ts(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return vs.runKernel(Me,s,a)}});const xd={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const r=e.shape.length,s=r-n.length,a=Oo(n,r);let i=e;null!=a&&(i=Au(e,a));const o=i.shape.slice(),u=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(u);let l=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=Vi(t,r),a=bd(e,n,!0,!1),i=bd(e,n,!0,!0),o=Ca(a,i);return Ca(s,o)}(i.reshape(o),t,s);if(l=l.reshape(i.shape),null!=a){const e=Mo(a);l=Au(l,e)}return l}(r,e,a)}}},yd={kernelName:qe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{const t=Sa(e,va(r,"float32")),a=Ha(n.shape,s);return a.length>0?Vi(To(t,a),n.shape):t},b:()=>{let t=Ca(e,va(n,"float32"));const a=Ha(r.shape,s);a.length>0&&(t=Vi(To(t,a),r.shape));const i=$a(r);return Ko(Sa(t,va(i,"float32")))}}}},vd={kernelName:un,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,Ko($a(n)))}}},wd={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ca(ml(n,6),Pu(n));return{x:()=>Ca(e,va(r,"float32"))}}},kd={kernelName:ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,va(Pu(n),"float32"))}}},Id={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vi(e,n.shape)}}},Sd={kernelName:pn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>vs.runKernel(fn,s,n)}}},Cd={kernelName:hn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>vs.runKernel(dn,s,n)}}},Nd={kernelName:mn,gradFunc:(e,t,n)=>{const{dims:r}=n,s=S(r,e.shape);return{x:()=>uu(e,s)}}},$d={kernelName:bn,gradFunc:e=>({x:()=>Ta(e)})},Td={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ko(Sa(e,Ca(Ba(n,1.5),2)))}}},Ed=Rs({logicalNot_:function(e){const t={x:Ts(e,"x","logicalNot","bool")};return vs.runKernel(Nt,t)}}),Rd={kernelName:kn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>va(Ta(n),"float32"),t:()=>Ca(e,va(n,e.dtype)),e:()=>Ca(e,va(Ed(n),e.dtype))}}},Ad={kernelName:In,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ko(n,Ra(0)),r=Ra(Ql),s=Ra(ec),a=Ca(e,s),i=Ca(Ca(e,r),mo(va(n,"float32")));return Tu(t,a,i)}}}},Fd={kernelName:Tn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,Ca(n,Wa(Ra(1),n)))}}},_d={kernelName:$n,gradFunc:e=>({x:()=>Ta(e)})},Dd=Rs({cos_:function(e){const t={x:Ts(e,"x","cos","float32")};return vs.runKernel(De,t)}}),Od={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(Dd(va(n,"float32")),e)}}},Md=Rs({cosh_:function(e){const t={x:Ts(e,"x","cosh","float32")};return vs.runKernel(Oe,t)}}),Ld={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(Md(va(n,"float32")),e)}}},zd={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,u]=ki(r,s,a),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>Qo(e,l)}}},Pd={kernelName:Dn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Ca(e,r);return{logits:()=>Wa(a,Ca(To(a,[s],!0),r))}}},Bd={kernelName:En,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,hu(n))}}},Wd=Rs({batchToSpaceND_:function(e,t,n){const r=Ts(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));f(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),f(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),f(r.shape[0]%s===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return vs.runKernel(xe,a,i)}}),Ud={kernelName:Fn,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Wd(e,r,s)}}},Vd={kernelName:_n,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Zi(e,r)}}},Gd=[Gc,Hc,jc,Kc,qc,Xc,Yc,Jc,Zc,Qc,eh,th,rh,ah,ih,uh,lh,ch,hh,dh,ph,fh,mh,gh,xh,vh,kh,Sh,Ch,Nh,yd,$h,Th,Eh,Rh,Ah,_h,Fh,Oh,Lh,Bh,Wh,Uh,Vh,Gh,Hh,jh,Kh,qh,Yh,Zh,Zh,Qh,td,rd,sd,ad,id,od,ud,ld,cd,hd,dd,pd,fd,fd,gd,md,xd,vd,wd,kd,Id,Sd,Cd,Nd,$d,Td,Rd,Ad,Fd,_d,Od,Ld,zd,Pd,Bd,Ud,Ud,Vd,Vd,{kernelName:Rn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,Ca(Na(va(n,"float32")),2))}}},{kernelName:Bn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ra(2);return{a:()=>Ca(e,Ca(s,Wa(n,r))),b:()=>Ca(e,Ca(s,Wa(r,n)))}}},{kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,Ca(va(n,"float32"),2))}}},{kernelName:sr,gradFunc:e=>({x:()=>Ta(e)})},{kernelName:Kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{let t=e;const r=Ha(n.shape,s);return r.length>0&&(t=To(t,r)),Vi(t,n.shape)},b:()=>{let t=e;const n=Ha(r.shape,s);return n.length>0&&(t=To(t,n)),Vi(Ko(t),r.shape)}}}},{kernelName:An,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;S(a,r.shape).forEach((e=>{s[e]=1}));const i=Vi(e,s),o=Ca(i,Jo(r.shape,"float32"));return{x:()=>o}}},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,$a(Dd(n)))}}},{kernelName:Xn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(Wa(Ra(1),$a(n)),e)}}},{kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=Ta(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=ka(t,du(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=ka(t,du(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=ka(t,du(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=ka(t,du(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Qn,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Mo(s);return{x:()=>Au(e,a)}}},{kernelName:tr,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>wu(e,s)}}},{kernelName:nr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ka(t,Ta(t)),r=wo(e,n);let s=Io(t,Ra(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=bo(s,e+1);s=Po(s,Jo(r.shape,"bool"));const i=Ta(r);return Tu(s,r,i)}(e,n)}}},{kernelName:rr,gradFunc:e=>({x:()=>Ta(e)})}];for(const e of Gd)br(e);es().prototype.abs=function(){return this.throwIfDisposed(),Va(this)};const Hd=Rs({acos_:function(e){const t={x:Ts(e,"x","acos")};return vs.runKernel(ee,t)}});es().prototype.acos=function(){return this.throwIfDisposed(),Hd(this)};const jd=Rs({acosh_:function(e){const t={x:Ts(e,"x","acosh")};return vs.runKernel(te,t)}});es().prototype.acosh=function(){return this.throwIfDisposed(),jd(this)},es().prototype.add=function(e){return this.throwIfDisposed(),ka(this,e)},es().prototype.all=function(e,t){return this.throwIfDisposed(),Ci(this,e,t)},es().prototype.any=function(e,t){return this.throwIfDisposed(),Ni(this,e,t)},es().prototype.argMax=function(e){return this.throwIfDisposed(),$i(this,e)};const Kd=Rs({argMin_:function(e,t=0){const n={x:Ts(e,"x","argMin")},r={axis:t};return vs.runKernel(oe,n,r)}});es().prototype.argMin=function(e){return this.throwIfDisposed(),Kd(this,e)},es().prototype.asScalar=function(){return this.throwIfDisposed(),f(1===this.size,(()=>"The array must have only 1 element.")),Vi(this,[])},es().prototype.asType=function(e){return this.throwIfDisposed(),va(this,e)},es().prototype.as1D=function(){return this.throwIfDisposed(),Vi(this,[this.size])},es().prototype.as2D=function(e,t){return this.throwIfDisposed(),Vi(this,[e,t])},es().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Vi(this,[e,t,n])},es().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Vi(this,[e,t,n,r])},es().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Vi(this,[e,t,n,r,s])};const qd=Rs({asin_:function(e){const t={x:Ts(e,"x","asin")};return vs.runKernel(ue,t)}});es().prototype.asin=function(){return this.throwIfDisposed(),qd(this)};const Xd=Rs({asinh_:function(e){const t={x:Ts(e,"x","asinh")};return vs.runKernel(le,t)}});es().prototype.asinh=function(){return this.throwIfDisposed(),Xd(this)};const Yd=Rs({atan_:function(e){const t={x:Ts(e,"x","atan")};return vs.runKernel(ce,t)}});es().prototype.atan=function(){return this.throwIfDisposed(),Yd(this)};const Jd=Rs({atan2_:function(e,t){let n=Ts(e,"a","atan2"),r=Ts(t,"b","atan2");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(de,s)}});es().prototype.atan2=function(e){return this.throwIfDisposed(),Jd(this,e)};const Zd=Rs({atanh_:function(e){const t={x:Ts(e,"x","atanh")};return vs.runKernel(he,t)}});es().prototype.atanh=function(){return this.throwIfDisposed(),Zd(this)},es().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Gi(this,e,t,n,r)},es().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Wd(this,e,t)},es().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),ji(this,e,t,n,r,s)},es().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Yi(this,e)},es().prototype.cast=function(e){return this.throwIfDisposed(),va(this,e)};const Qd=Rs({ceil_:function(e){const t={x:Ts(e,"x","ceil","float32")};return vs.runKernel(Ie,t)}});es().prototype.ceil=function(){return this.throwIfDisposed(),Qd(this)},es().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Ji(this,e,t)},es().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Qr&&(e=[e]),Zi([this,...e],t)},es().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),so(this,e,t,n,r,s,a)},es().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),io(this,e,t,n,r,s)},es().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),ro(this,e,t,n,r,s,a)},es().prototype.cos=function(){return this.throwIfDisposed(),Dd(this)},es().prototype.cosh=function(){return this.throwIfDisposed(),Md(this)},es().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),bd(this,e,t,n)},es().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Ih(this,e,t,n)};const ep=Rs({depthToSpace_:function(e,t,n="NHWC"){const r=Ts(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];f(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),f(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),f(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),f(i%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return vs.runKernel(Be,o,u)}});es().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),ep(this,e,t)},es().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),ho(this,e,t,n,r,s,a)};const tp=Rs({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Ts(e,"x","dilation2d"),o=Ts(t,"filter","dilation2d");f(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),f(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),f("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let u=i,l=!1;3===i.rank&&(u=Vi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0),f(u.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${o.shape[2]}`));const c={x:u,filter:o},h={strides:n,pad:r,dilations:s},d=vs.runKernel(He,c,h);return l?Vi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});es().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),tp(this,e,t,n,r,s)};const np=Rs({divNoNan_:function(e,t){let n=Ts(e,"a","div"),r=Ts(t,"b","div");[n,r]=ds(n,r);const s=Sa(n,r),a=Ta(s),i=fo(r,a);return Tu(i,a,s)}});es().prototype.divNoNan=function(e){return this.throwIfDisposed(),np(this,e)},es().prototype.div=function(e){return this.throwIfDisposed(),Sa(this,e)};const rp=Rs({dot_:function(e,t){const n=Ts(e,"t1","dot"),r=Ts(t,"t2","dot");f(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(f(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=Vi(n,[1,-1]),t=Vi(r,[-1,1]),s=Bo(e,t);return Vi(s,[])}if(1===n.rank&&2===r.rank){const e=Vi(n,[1,-1]),t=Vi(r,[r.shape[0],r.shape[1]]),s=Bo(e,t);return Vi(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Vi(r,[-1,1]),t=Bo(n,e);return Vi(t,[t.size])}{const e=Vi(r,[r.shape[0],r.shape[1]]);return Bo(n,e)}}});es().prototype.dot=function(e){return this.throwIfDisposed(),rp(this,e)},es().prototype.elu=function(){return this.throwIfDisposed(),po(this)},es().prototype.equal=function(e){return this.throwIfDisposed(),fo(this,e)},es().prototype.erf=function(){return this.throwIfDisposed(),go(this)};const sp=Rs({euclideanNorm_:function(e,t=null,n=!1){return Il(e,"euclidean",t,n)}});es().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),sp(this,e,t)},es().prototype.exp=function(){return this.throwIfDisposed(),mo(this)},es().prototype.expandDims=function(e){return this.throwIfDisposed(),bo(this,e)};const ap=Rs({expm1_:function(e){const t={x:Ts(e,"x","expm1")};return vs.runKernel(nt,t)}});es().prototype.expm1=function(){return this.throwIfDisposed(),ap(this)},es().prototype.fft=function(){return this.throwIfDisposed(),_u(this)},es().prototype.flatten=function(){return this.throwIfDisposed(),Vi(this,[this.size])},es().prototype.floor=function(){return this.throwIfDisposed(),vo(this)},es().prototype.floorDiv=function(e){return this.throwIfDisposed(),Ia(this,e)},es().prototype.gather=function(e,t,n){return this.throwIfDisposed(),wo(this,e,t,n)},es().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Io(this,e)},es().prototype.greater=function(e){return this.throwIfDisposed(),ko(this,e)},es().prototype.ifft=function(){return this.throwIfDisposed(),Ou(this)},es().prototype.irfft=function(){return this.throwIfDisposed(),Mu(this)};const ip=Rs({isFinite_:function(e){const t={x:Ts(e,"x","isFinite")};return vs.runKernel(mt,t)}});es().prototype.isFinite=function(){return this.throwIfDisposed(),ip(this)};const op=Rs({isInf_:function(e){const t={x:Ts(e,"x","isInf")};return vs.runKernel(bt,t)}});es().prototype.isInf=function(){return this.throwIfDisposed(),op(this)};const up=Rs({isNaN_:function(e){const t={x:Ts(e,"x","isNaN")};return vs.runKernel(xt,t)}});es().prototype.isNaN=function(){return this.throwIfDisposed(),up(this)},es().prototype.leakyRelu=function(e){return this.throwIfDisposed(),So(this,e)},es().prototype.lessEqual=function(e){return this.throwIfDisposed(),ml(this,e)},es().prototype.less=function(e){return this.throwIfDisposed(),vl(this,e)};const lp=Rs({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Ts(e,"x","localResponseNormalization");f(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),f(y(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Vi(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:s},c=vs.runKernel(Tt,u,l);return o?Vi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});es().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),lp(this,e,t,n,r)};const cp=Rs({logSigmoid_:function(e){const t=Ts(e,"x","logSigmoid");return Ea((e=>({value:Ko(xu(Ko(e))),gradFunc:t=>Ca(t,hu(Ko(e)))})))(t)}});es().prototype.logSigmoid=function(){return this.throwIfDisposed(),cp(this)},es().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Eo(this,e)},es().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),zo(this,e,t)},es().prototype.log=function(){return this.throwIfDisposed(),Co(this)},es().prototype.log1p=function(){return this.throwIfDisposed(),No(this)},es().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Po(this,e)},es().prototype.logicalNot=function(){return this.throwIfDisposed(),Ed(this)};const hp=Rs({logicalOr_:function(e,t){const n=Ts(e,"a","logicalOr","bool"),r=Ts(t,"b","logicalOr","bool");ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel($t,s)}});es().prototype.logicalOr=function(e){return this.throwIfDisposed(),hp(this,e)};const dp=Rs({logicalXor_:function(e,t){const n=Ts(e,"a","logicalXor","bool"),r=Ts(t,"b","logicalXor","bool");return ja(n.shape,r.shape),Po(hp(e,t),Ed(Po(e,t)))}});es().prototype.logicalXor=function(e){return this.throwIfDisposed(),dp(this,e)},es().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Bo(this,e,t,n)},es().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Wo(this,e,t,n,r)},es().prototype.max=function(e,t){return this.throwIfDisposed(),$o(this,e,t)},es().prototype.maximum=function(e){return this.throwIfDisposed(),Ka(this,e)},es().prototype.mean=function(e,t){return this.throwIfDisposed(),Vo(this,e,t)},es().prototype.min=function(e,t){return this.throwIfDisposed(),Go(this,e,t)},es().prototype.minimum=function(e){return this.throwIfDisposed(),Ho(this,e)};const pp=Rs({mirrorPad_:function(e,t,n){f("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Ts(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");f(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)f(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),f(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return vs.runKernel(Bt,i,a)}});es().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),pp(this,e,t)};const fp=Rs({mod_:function(e,t){let n=Ts(e,"a","mod"),r=Ts(t,"b","mod");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(Wt,s)}});es().prototype.mod=function(e){return this.throwIfDisposed(),fp(this,e)},es().prototype.mul=function(e){return this.throwIfDisposed(),Ca(this,e)},es().prototype.neg=function(){return this.throwIfDisposed(),Ko(this)},es().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Il(this,e,t,n)},es().prototype.notEqual=function(e){return this.throwIfDisposed(),qo(this,e)},es().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Xo(this,e,t,n)},es().prototype.onesLike=function(){return this.throwIfDisposed(),Zo(this)},es().prototype.pad=function(e,t){return this.throwIfDisposed(),Qo(this,e,t)};const gp=Rs({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Ts(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=Vi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),f(Pi(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=Ei(u.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[g,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,d),b=p?r:"valid",x=p?u:oh(u,h,g),y=("avg"===n?()=>Gi(x,t,a,b,i):()=>Wo(x,t,a,b,i))(),v=p?y:Wd(y,h,m);return l?Vi(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});es().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),gp(this,e,t,n,r,s,a)},es().prototype.pow=function(e){return this.throwIfDisposed(),Ba(this,e)},es().prototype.prelu=function(e){return this.throwIfDisposed(),eu(this,e)};const mp=Rs({prod_:function(e,t=null,n=!1){let r=Ts(e,"x","prod");"bool"===r.dtype&&(r=va(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return vs.runKernel(tn,s,a)}});es().prototype.prod=function(e,t){return this.throwIfDisposed(),mp(this,e,t)};const bp=Rs({reciprocal_:function(e){const t={x:Ts(e,"x","reciprocal")};return vs.runKernel(un,t)}});es().prototype.reciprocal=function(){return this.throwIfDisposed(),bp(this)},es().prototype.relu=function(){return this.throwIfDisposed(),ou(this)},es().prototype.relu6=function(){return this.throwIfDisposed(),zu(this)},es().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Vi(this,e.shape)},es().prototype.reshape=function(e){return this.throwIfDisposed(),Vi(this,e)},es().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),pl(this,e,t,n)},es().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),fl(this,e,t,n)},es().prototype.reverse=function(e){return this.throwIfDisposed(),uu(this,e)},es().prototype.rfft=function(){return this.throwIfDisposed(),Du(this)},es().prototype.round=function(){return this.throwIfDisposed(),bl(this)},es().prototype.rsqrt=function(){return this.throwIfDisposed(),Dh(this)},es().prototype.selu=function(){return this.throwIfDisposed(),lu(this)},es().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),cu(this,e,t,n,r,s,a)},es().prototype.sigmoid=function(){return this.throwIfDisposed(),hu(this)};const xp=Rs({sign_:function(e){const t={x:Ts(e,"x","sign")};return vs.runKernel($n,t)}});es().prototype.sign=function(){return this.throwIfDisposed(),xp(this)},es().prototype.sin=function(){return this.throwIfDisposed(),yh(this)},es().prototype.sinh=function(){return this.throwIfDisposed(),wh(this)},es().prototype.slice=function(e,t){return this.throwIfDisposed(),du(this,e,t)},es().prototype.softmax=function(e){return this.throwIfDisposed(),bu(this,e)},es().prototype.softplus=function(){return this.throwIfDisposed(),xu(this)},es().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),oh(this,e,t)},es().prototype.split=function(e,t){return this.throwIfDisposed(),yu(this,e,t)},es().prototype.sqrt=function(){return this.throwIfDisposed(),Na(this)},es().prototype.square=function(){return this.throwIfDisposed(),$a(this)},es().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Tl(this,e)},es().prototype.squeeze=function(e){return this.throwIfDisposed(),vu(this,e)},es().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Qr?[this,e]:[this,...e];return wu(n,t)},es().prototype.step=function(e){return this.throwIfDisposed(),Pu(this,e)};const yp=Rs({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,u=0){const l={x:Ts(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return vs.runKernel(Vn,l,c)}});es().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),yp(this,e,t,n,r,s,a,i,o)},es().prototype.sub=function(e){return this.throwIfDisposed(),Wa(this,e)},es().prototype.sum=function(e,t){return this.throwIfDisposed(),To(this,e,t)};const vp=Rs({tan_:function(e){const t={x:Ts(e,"x","tan","float32")};return vs.runKernel(qn,t)}});es().prototype.tan=function(){return this.throwIfDisposed(),vp(this)},es().prototype.tanh=function(){return this.throwIfDisposed(),ku(this)},es().prototype.tile=function(e){return this.throwIfDisposed(),xo(this,e)},es().prototype.toBool=function(){return this.throwIfDisposed(),va(this,"bool")},es().prototype.toFloat=function(){return this.throwIfDisposed(),va(this,"float32")},es().prototype.toInt=function(){return this.throwIfDisposed(),va(this,"int32")};const wp=Rs({topk_:function(e,t=1,n=!0){const r=Ts(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,u]=vs.runKernel(Jn,a,i);return{values:o,indices:u}}});es().prototype.topk=function(e,t){return this.throwIfDisposed(),wp(this,e,t)},es().prototype.transpose=function(e){return this.throwIfDisposed(),Au(this,e)};const kp=Rs({unique_:function(e,t=0){const n=Ts(e,"x","unique","string_or_numeric");f(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=vs.runKernel(er,r,s);return{values:a,indices:i}}});es().prototype.unique=function(e){return this.throwIfDisposed(),kp(this,e)},es().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Mh(this,e,t)},es().prototype.unstack=function(e){return this.throwIfDisposed(),Nu(this,e)},es().prototype.where=function(e,t){return this.throwIfDisposed(),Tu(e,this,t)},es().prototype.zerosLike=function(){return this.throwIfDisposed(),Ta(this)};class Ip extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ip.prototype)}}class Sp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Sp.prototype)}}class Cp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Cp.prototype)}}class Np extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Np.prototype)}}class $p extends Error{constructor(e){super(e),Object.setPrototypeOf(this,$p.prototype)}}Error;class Tp{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Ep(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Rp(e,t){if(!e)throw new $p(t)}function Ap(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Fp(e){return 1===e.length?e[0]:e}function _p(e){return Array.isArray(e)?e:[e]}function Dp(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Op(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Mp={};function Lp(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function zp(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>zp(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?zp(t):e[n]=t.value)}}}function Pp(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in Mp)a=Mp[s];else if(a=t[s],null==a)throw new Cp(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Cp(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in Mp?[o,u]=Mp.className:i in t&&([o,u]=t[i]),null==o)throw new Cp(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Mp))e[t]=Mp[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Mp);for(const e of Object.keys(n))Mp[e]=n[e];zp(a.config);const r=u(o,a.config,n,s);return Mp=Object.assign({},t),r}{const e=Object.assign({},Mp);for(const e of Object.keys(n))Mp[e]=n[e];const t=new o(a.config);return Mp=Object.assign({},e),t}}}function Bp(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Wp(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Up(e){if(null==e)throw new Cp(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Vp(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Cp(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Gp(e,t,n=0,r=1/0){return Rp(n>=0),Rp(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Hp(e,t){Array.isArray(e)?(f(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Hp(e,`element ${n+1} of ${t}`)))):f(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${jp(e)}.`))}function jp(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>jp(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Kp(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let qp=0;function Xp(){return qp++}const Yp={};function Jp(e=""){return e in Yp||(Yp[e]=0),Yp[e]+=1,e+Yp[e].toString()}const Zp=["channelsFirst","channelsLast"],Qp=["nearest","bilinear"],ef=["valid","same","causal"],tf=["max","avg"],nf=["sum","mul","concat","ave"],rf=new Map;function sf(e){Vp(Zp,"DataFormat",e)}function af(e){Vp(ef,"PaddingMode",e)}function of(e){Vp(tf,"PoolMode",e)}const uf=[];function lf(e,t){uf.push(e);try{const e=t();return uf.pop(),e}catch(e){throw uf.pop(),e}}function cf(e){if(!pf(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===uf.length?"":uf.join("/")+"/")+e}function hf(e){if(!pf(e))throw new Error("Not a valid tensor name: '"+e+"'");rf.has(e)||rf.set(e,0);const t=rf.get(e);if(rf.set(e,rf.get(e)+1),t>0){const n=`${e}_${t}`;return rf.set(n,1),n}return e}const df=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function pf(e){return!!e.match(df)}function ff(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function gf(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function mf(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function bf(e,t){if(t<e)throw new Cp(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let xf;function yf(){return null==xf&&(xf=vs.backend.epsilon()),xf}function vf(e,t){return va(e,t)}function wf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Vi(e,n)}function kf(e,t,n){return Ls((()=>{switch(e.rank){case 1:return pu(e,t,n);case 2:return fu(e,[t,0],[n,e.shape[1]]);case 3:return gu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return mu(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return du(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return du(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Cp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function If(e,t,n){return Ls((()=>{switch(e.rank){case 1:return pu(e,t,n);case 2:return fu(e,[0,t],[e.shape[0],n]);case 3:return gu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return mu(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Cp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Sf(e,t,n,r){return Ls((()=>{switch(e.rank){case 1:return pu(e,t,n);case 2:switch(r){case 1:return kf(e,t,n);case 2:return If(e,t,n);default:throw new Cp(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return kf(e,t,n);case 2:return gu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return If(e,t,n);default:throw new Cp(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return kf(e,t,n);case 2:return mu(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return mu(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return If(e,t,n);default:throw new Cp(`The axis is not within the rank of the tensor ${r}`)}default:throw new Cp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Cf(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Zi(e,t)}function Nf(e,t){switch(e.rank){case 1:return Qi([e,t]);case 2:return eo([e,t],0);case 3:return to([e,t],0);case 4:return no([e,t],0);default:throw new Cp(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function $f(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Cp(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return xo(e,t)}function Tf(e,t=0,n=1,r,s){return su(e,t,n,r,s)}function Ef(e,t,n,r){if(e.rank<2||t.rank<2)throw new Np(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Np(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Ku({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Ff(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=Vi(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Vi(Au(t,c),[u,-1]);const h=[...s,...l];return Vi(Ku({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Ff(e.rank,r,"channelsLast"):null,activation:n}),h)}}function Rf(e,t,n){return Ls((()=>(t=Array.isArray(t)?Iu(t,"int32"):va(t,"int32"),wo(e,t,n))))}function Af(e){return Ca(e,e)}function Ff(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Cp(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Vi(t,[1,r[0],1,1,1]):Vi(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Vi(t,[1,1,1,1,r[0]]):Vi(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Vi(t,[1,r[0],1,1]):Vi(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Vi(t,[1,1,1,r[0]]):Vi(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Vi(t,[1,r[0],1]):Vi(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Vi(t,[1,1,r[0]]):Vi(t,[1].concat(r))}else if(e<3)return t;throw new Cp(`Unsupported input rank by biasAdd: ${t.rank}`)}function _f(e,t,n){return Ls((()=>(null==n&&(n="channelsLast"),sf(n),ka(e,Ff(e.rank,t,n)))))}function Df(e,t,n,r){return Ls((()=>Fu(e,t,n,r)))}function Of(e,t,n=!1){return n?e():t()}const Mf=["fanIn","fanOut","fanAvg"],Lf=["normal","uniform","truncatedNormal"];class zf extends _a{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Pf extends zf{apply(e,t){return Yo(e,t)}}Pf.className="Zeros",Oa(Pf);class Bf extends zf{apply(e,t){return Jo(e,t)}}Bf.className="Ones",Oa(Bf);class Wf extends zf{constructor(e){if(super(),"object"!=typeof e)throw new Cp(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Cp(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Ls((()=>Ca(Ra(this.value),Jo(e,t))))}getConfig(){return{value:this.value}}}Wf.className="Constant",Oa(Wf);class Uf extends zf{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return au(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Uf.className="RandomUniform",Oa(Uf);class Vf extends zf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Np(`randomNormal does not support dType ${t}.`);return Tf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Vf.className="RandomNormal",Oa(Vf);class Gf extends zf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Np(`truncatedNormal does not support dType ${t}.`);return Cu(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Gf.className="TruncatedNormal",Oa(Gf);class Hf extends zf{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Ls((()=>{if(2!==e.length||e[0]!==e[1])throw new Cp("Identity matrix initializer can only be used for 2D square matrices.");return Ca(this.gain,yo(e[0]))}))}getConfig(){return{gain:this.gain}}}Hf.className="Identity",Oa(Hf);class jf extends zf{constructor(e){if(super(),e.scale<0)throw new Cp(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Vp(Mf,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Vp(Lf,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(sf(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=ff(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=ff(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=ff(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Np(`${this.getClassName()} does not support dType ${t}.`);return Cu(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return au(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}jf.className="VarianceScaling",Oa(jf);class Kf extends jf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return jf.className}}Kf.className="GlorotUniform",Oa(Kf);class qf extends jf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return jf.className}}qf.className="GlorotNormal",Oa(qf);class Xf extends jf{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return jf.className}}Xf.className="HeNormal",Oa(Xf);class Yf extends jf{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return jf.className}}Yf.className="HeUniform",Oa(Yf);class Jf extends jf{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return jf.className}}Jf.className="LeCunNormal",Oa(Jf);class Zf extends jf{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return jf.className}}Zf.className="LeCunUniform",Oa(Zf);class Qf extends zf{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Ls((()=>{if(e.length<2)throw new Np("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=b(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const a=Tf([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=Rl.qr(a,!1);let o=i[0];const u=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=Ca(o,u.sign()),n<r&&(o=o.transpose()),Ca(Ra(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Qf.className="Orthogonal",Oa(Qf);const eg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function tg(e,t={}){return Pp(e,Da.getMap().classNameMap,t,"initializer")}function ng(e){return Lp(e)}function rg(e){if("string"==typeof e){const t=e in eg?eg[e]:e;if("GlorotNormal"===t)return new qf;if("GlorotUniform"===t)return new Kf;if("HeNormal"===t)return new Xf;if("HeUniform"===t)return new Yf;if("LeCunNormal"===t)return new Jf;if("LeCunUniform"===t)return new Zf;{const e={};return e.className=t,e.config={},tg(e)}}return e instanceof zf?e:tg(e)}function sg(e){return Array.isArray(e)&&Array.isArray(e[0])}function ag(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function ig(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Cp(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function og(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Cp(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ug(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const lg="Variable";class cg{constructor(e,t="float32",n=lg,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Xp(),n=null==n?lg:n,this.originalName=cf(n),this.name=hf(this.originalName),this.trainable_=r,this.constraint=s,this.val=$u(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function hg(e){return e.map((e=>e.read()))}function dg(e){e.forEach((e=>{e[0].write(e[1])}))}class pg{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class fg{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Xp(),null!=a&&(this.originalName=cf(a),this.name=hf(this.originalName)),this.rank=t.length}}let gg=0;class mg{constructor(e,t){this.callArgs=t,this.id=gg++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let bg=0;class xg extends _a{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=bg++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Dp(e)+"_"+Jp(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Sp(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Cp(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Fp(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Fp(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ip(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Ip(`Layer ${this.name} is not connected, no input to return.`);return Fp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Ip(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ip(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Fp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=_p(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=_p(this.inputSpec);if(t.length!==n.length)throw new Cp(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],s=n[e];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Cp(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Cp(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Cp(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Cp(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const n in s.axes){const r=Number(n),a=s.axes[n],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new Cp(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],a=r.shape[t];if(null!=n&&null!=a&&n!==a)throw new Cp(`Input ${e} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=_p(e),r=function(e){let t=!0;for(const n of _p(e))if(!(n instanceof fg)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of _p(e))if(n instanceof fg){t=!1;break}return t}(e);if(r===s)throw new Cp("Arguments to apply() must be all SymbolicTensors or all Tensors");return lf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of _p(e))t.push(n.shape);this.build(Fp(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=_p(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=Fp(a),null!=this.activityRegularizer)throw new Np("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=_p(e);const t=[];for(const n of e)t.push(n.shape);return Fp(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new fg(a,n,this,_p(e),t,this.name,r))):new fg(a,r,this,_p(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Np("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Ip(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Ip(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Sp(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ug(this.weights)}build(e){this.built=!0}getWeights(e=!1){return hg(e?this.trainableWeights:this.weights)}setWeights(e){Ls((()=>{const t=this.weights;if(t.length!==e.length)throw new Cp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=hg(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!x(a.shape,o.shape))throw new Cp(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}dg(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Cp(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():rg("zeros"));const u=r.apply(t,n),l=new cg(u,n,e,a,i);return u.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=_p(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=_p(t),a=_p(r);if(s.length!==a.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let e=0;e<s.length;e++)s[e].kerasMask=a[e]}addInboundNode(e,t,n,r,s,a,i=null){const o=_p(e);t=_p(t),n=_p(n),r=_p(r),s=ag(s),a=ag(a);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new mg({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function yg(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=yg(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class vg extends xg{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Jp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Cp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Cp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Cp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new fg(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new mg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Cp(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}vg.className="InputLayer",Oa(vg);class wg{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof wg)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Cp(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return va(t,e.dtype)}catch(n){throw new Cp(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof fg){if(null==this.id2Value[e.id])throw new Cp(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Cp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof fg){if(null==this.id2Value[e.id])throw new Cp(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Cp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&zs(this.id2Mask)}}const kg=new Tp,Ig=new Tp;function Sg(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=kg.get(c);if(null==d){const e=function(e,t){f(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=Ng(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Ng(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Cg(r)}}(i,t);d=e.sorted,h=e.recipientCounts,kg.put(c,d),Ig.put(c,h)}h={},s||Object.assign(h,Ig.get(c));const p=new wg(t);for(let e=0;e<d.length;++e){if(null!=r){const e=Ms().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=d[e],i=a.sourceLayer;if(i instanceof vg)continue;const l=[],c=[],f=[];let g=!1;for(const e of a.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(g=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}g&&((n=n||{}).mask=c[0]);const m=_p(i.apply(l,n));let b=null;i.supportsMasking&&(b=i.computeMask(l,c));const x=$g(a),y=Array.isArray(x)?x:[x];for(let e=0;e<y.length;++e){p.hasKey(y[e])||p.add(y[e],m[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(y[e].name);-1!==t&&(u[t]=m[e])}s||zs(f)}return p.disposeMasks(),a?u:u[0]}function Cg(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Ng(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function $g(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Tg(e,t){return Ls((()=>Na(To(Ca(e,e),t,!0))))}q().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=kg&&kg.setMaxEntries(e),null!=Ig&&Ig.setMaxEntries(e)}));class Eg extends _a{getConfig(){return{}}}class Rg extends Eg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ls((()=>{const t=Tg(e,this.axis),n=Ji(t,0,this.maxValue);return Ca(e,Sa(n,ka(yf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Rg.className="MaxNorm",Oa(Rg);class Ag extends Eg{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ls((()=>Sa(e,ka(yf(),Tg(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ag.className="UnitNorm",Oa(Ag);class Fg extends Eg{apply(e){return ou(e)}}Fg.className="NonNeg",Oa(Fg);class _g extends Eg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ls((()=>{const t=Tg(e,this.axis),n=ka(Ca(this.rate,Ji(t,this.minValue,this.maxValue)),Ca(1-this.rate,t));return Ca(e,Sa(n,ka(yf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}_g.className="MinMaxNorm",Oa(_g);const Dg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Og(e){return Lp(e)}function Mg(e,t={}){return Pp(e,Da.getMap().classNameMap,t,"constraint")}function Lg(e){return null==e?null:"string"==typeof e?Mg({className:e in Dg?Dg[e]:e,config:{}}):e instanceof Eg?e:Mg(e)}async function zg(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];zs(r)}}function Pg(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Bg;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Bg||(Bg={}));class Wg{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Ug{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Vg extends Wg{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=Ls((()=>ka(this.totals[e],Ca(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Ls((()=>{const n=Ca(Sa(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Ps(t[e])})))}}class Gg extends Wg{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Hg extends Wg{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||_l,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");A(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():Mr();return(...a)=>{const i=null!=n?n():Mr();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await zg(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await zg(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await zg(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await zg(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await zg(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):A(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await zg(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await zg(e),await this.trainEnd(e))}}function jg(e,t){return null==e&&(e={}),e instanceof Wg?[e]:Array.isArray(e)&&e[0]instanceof Wg?e:_p(e).map((e=>new Hg(e,t)))}class Kg{constructor(){}static registerCallbackConstructor(e,t){f(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Kg.checkForDuplicate(t),null==Kg.constructors[e]&&(Kg.constructors[e]=[]),Kg.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Kg.constructors)Kg.constructors[+t].forEach((t=>{if(t===e)throw new Cp("Duplicate callback constructor.")}))}static clear(){Kg.constructors={}}static createCallbacks(e){const t=[];for(const n in Kg.constructors){const r=+n;e>=r&&t.push(...Kg.constructors[r])}return t.map((e=>new e))}}function qg(e,t,n,r,s,a,i,o,u){const l=new Gg,c=[new Vg,...Kg.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Ug(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Xg(e,t={},n=!1){return Pp(e,Da.getMap().classNameMap,t,"layer",n)}function Yg(e,t){return Ls((()=>{"float32"!==e.dtype&&(e=va(e,"float32"));const n=To(Af(e),t,!0),r=za(n.shape,yf()),s=Na(Ka(n,r));return Sa(e,s)}))}function Jg(e,t){return Ls((()=>Vo(Af(Wa(t,e)),-1)))}function Zg(e,t){return Ls((()=>Vo(Va(Wa(t,e)),-1)))}function Qg(e,t){return Ls((()=>{const n=Wa(e,t),r=Ji(Va(e),yf(),Number.MAX_VALUE),s=Va(Sa(n,r));return Ca(100,Vo(s,-1))}))}function em(e,t,n=!1){return Ls((()=>{if(n)t=bu(t);else{const e=To(t,t.shape.length-1,!0);t=Sa(t,e)}return t=Ji(t,yf(),1-yf()),Ko(To(Ca(va(e,"float32"),Co(t)),t.shape.length-1))}))}function tm(e,t,n=!1){return Ls((()=>{const r=va(vo(function(e){const t=[ff(e.shape)];return Vi(e,t)}(e)),"int32"),s=(t=Ji(t,yf(),1-yf())).shape;return em(Vi(Xo(r,s[s.length-1]),s),t,n)}))}function nm(e,t){return Ls((()=>{let n;return n=Ji(t,yf(),1-yf()),n=Co(Sa(n,Wa(1,n))),Vo(function(e,t){if(!x(e.shape,t.shape))throw new Cp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Ls((()=>{const n=ou(t),r=Ko(Va(t));return ka(Wa(n,Ca(t,e)),No(mo(r)))}))}(e,n),-1)}))}function rm(e,t){return Ls((()=>{const n=Yg(e,-1),r=Yg(t,-1),s=Ca(n,r);return Ko(To(s,-1))}))}Kg.constructors={};const sm={meanSquaredError:Jg,meanAbsoluteError:Zg,meanAbsolutePercentageError:Qg,meanSquaredLogarithmicError:function(e,t){return Ls((()=>{const n=Ji(t,yf(),Number.MAX_VALUE),r=Co(ka(1,n)),s=Ji(e,yf(),Number.MAX_VALUE),a=Co(ka(1,s));return Vo(Af(Wa(r,a)),-1)}))},squaredHinge:function(e,t){return Ls((()=>{const n=Ka(0,Wa(1,Ca(e,t)));return Vo(Af(n),-1)}))},hinge:function(e,t){return Ls((()=>{const n=Ka(0,Wa(1,Ca(e,t)));return Vo(n,-1)}))},categoricalHinge:function(e,t){return Ls((()=>{const n=To(Ca(e,t),-1),r=$o(Ca(Wa(1,e),t),-1);return Ka(0,ka(1,Wa(r,n)))}))},logcosh:function(e,t){return Ls((()=>{const n=Math.log(2),r=Wa(t,e),s=Wa(ka(r,xu(Ca(-2,r))),n);return Vo(s,-1)}))},categoricalCrossentropy:em,sparseCategoricalCrossentropy:tm,binaryCrossentropy:nm,kullbackLeiblerDivergence:function(e,t){return Ls((()=>{const n=Ji(e,yf(),1),r=Ji(t,yf(),1);return To(Ca(e,Co(Sa(n,r))),-1)}))},poisson:function(e,t){return Ls((()=>{const n=Co(ka(yf(),t));return Vo(Wa(t,Ca(e,n)),-1)}))},cosineProximity:rm};function am(e){if("string"==typeof e){if(e in sm)return sm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Cp(t)}return e}function im(e,t){return Ls((()=>{const n=Ca(.5,Zo(t)),r=vf(ko(t,n),e.dtype);return Vo(fo(e,r),-1)}))}function om(e,t){return Ls((()=>vf(fo($i(e,-1),$i(t,-1)),"float32")))}function um(e,t){return nm(e,t)}function lm(e,t){return e.rank===t.rank&&(e=vu(e,[e.rank-1])),(t=$i(t,-1)).dtype!==e.dtype&&(t=va(t,e.dtype)),va(fo(e,t),"float32")}const cm=em,hm=tm,dm={binaryAccuracy:im,categoricalAccuracy:om,precision:function(e,t){return Ls((()=>{const n=function(e,t){return Ls((()=>va(To(Po(fo(e,1),fo(t,1))),"float32")))}(e,t),r=function(e,t){return Ls((()=>va(To(Po(fo(e,0),fo(t,1))),"float32")))}(e,t),s=ka(n,r);return va(Tu(ko(s,0),Sa(n,s),0),"float32")}))},categoricalCrossentropy:cm,sparseCategoricalCrossentropy:hm,mse:Jg,MSE:Jg,mae:Zg,MAE:Zg,mape:Qg,MAPE:Qg,cosine:rm};function pm(e){if("string"==typeof e&&e in dm)return dm[e];if("string"!=typeof e&&null!=e)return e;throw new Cp(`Unknown metric ${e}`)}function fm(e){if(Rp(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(sm))if(sm[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(dm))if(dm[n]===e){t=n;break}return void 0!==t?t:e.name}}function gm(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!mm(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function mm(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!mm(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!mm(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function bm(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function xm(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}bm([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function ym(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${r}][${s}]`)}const o=e.name,u=e.getClassName(),l=0===i.length?"":i[0];bm([`${o} (${u})`,a,s,e.countParams().toString(),l],t,r);for(let e=1;e<i.length;++e)bm(["","","","",i[e]],t,r)}function vm(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function wm(e,t){if(null===e)return null;if("string"==typeof e)return Op(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];vm(t,s,r)?n.push(r):n.push(wm(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Op(n);t[e]=wm(r,e)}}return t}}function km(e,t){if(null==e)return null;if("string"==typeof e)return Dp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];vm(t,s,r)?n.push(r):n.push(km(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Dp(n)]="name"!==n&&"className"!==n||"string"!=typeof r?km(r,n):r}return t}}const Im="4.22.0";class Sm extends xg{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Jp(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Wp(this.inputs).length!==this.inputs.length)throw new Cp(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Wp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Rp(0===n,"input layer has >1 nodes"),Rp(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof vg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new Sp(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Sm.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],s=l.inboundLayers[e],a=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Bp);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Sm&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Bp);const f=this.inputs.slice(),g=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Sp(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const e of m){const t=m.filter((t=>t===e)).length;if(1!==t)throw new Sp(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new mg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Cp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const e of this.layers)for(const[t,a]of e.weights.entries()){const e=s?`${a.name.split("/").slice(0,-1).join("/")+"/"}${t}`:a.originalName;if(null!=n[e])throw new Cp(`Duplicate weight name: ${e}`);n[e]=a,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new Cp(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Cp(`${e.length} of ${r} weights are not set: ${e}`)}dg(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Im}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=km(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Ls((()=>{e=_p(e);const n=new wg;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Sg(this.outputs,n,t)}))}computeMask(e,t){return Ls((()=>{let n;return e=_p(e),n=null==t?Ep(null,e.length):_p(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=ag(e);if(t.length!==this.inputLayers.length)throw new Cp(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Bp);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=ag(t.computeOutputShape(Fp(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];Rp(t in n),s.push(n[t])}return Fp(s)}runInternalGraph(e,t){null==t&&(t=Ep(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Bp);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),o=_p(t.call(e,l)),u=_p(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==l.mask&&(l.mask=i),o=_p(t.call(r,l)),u=_p(t.computeMask(r,i));if(t.activityRegularizer)throw new Np("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=u[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){Rp(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Sm?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=Sm.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Cp("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new Cp(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new Cp(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Ls((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Sm.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=Sm.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[Sm.nodeKey(s,a)];null==u&&(u=0),e.push([s.name,u,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=Sm.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=Sm.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(Fp(n),r)}function u(e){const n=e.name,a=Xg(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Cp(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!Up(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];Rp(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Rp(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new Cp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Ls((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Cm(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Nm(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Ls((()=>{if(1===e.shape.length)return wa(e);if(2===e.shape.length){if(e.shape[1]>1)return $i(e,1);if(1===e.shape[1])return Vi(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());zs(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Iu(s,"float32")}return null}function $m(e,t){return Ca(e,t)}function Tm(e,t){let n,r;const s=t;n=s.xs,r=s.ys,f(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Em("input",e.inputNames,n),i=Em("output",e.outputNames,r),o=a[0].shape[0];f(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),f(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)f(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)f(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Em(e,t,n){if(n instanceof Qr)return[n];if(Array.isArray(n))return f(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new Cp(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function Rm(e){return"function"==typeof e.iterator}function Am(e){f(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Fm(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>kf(e,t,n-t))):kf(e,t,n-t)}function _m(e,t){return Ls((()=>null==e?null:Array.isArray(e)?e.map((e=>_m(e,t))):Rf(e,"int32"===t.dtype?t:va(t,"int32"))))}function Dm(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function Om(e){const t=[];e instanceof Qr&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(wf(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Mm(e,t){if(null==e)return;const n=[];if(t instanceof Qr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Qr)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Lm(e){return Array.isArray(e)}function zm(e){return!function(e){return e instanceof Qr}(e)&&!Lm(e)}function Pm(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Lm(e)&&e.length>0)t=!0;else if(zm(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Cp(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(zm(e)){a=[];for(const n of t){if(null==e[n])throw new Cp(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Lm(e)){if(e.length!==t.length)throw new Cp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new Cp(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Om(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Cp(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new Cp(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Bm(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Cp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Cp(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Cp(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u!==o)throw new Cp(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Wm extends Sm{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Cp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),bm(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?xm(o[e],n,r):ym(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?ug(e.collectedTrainableWeights):ug(e.trainableWeights),t}(e),l=ug(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Al.adagrad(.01),Adadelta:()=>Al.adadelta(1,.95,yf()),Adam:()=>Al.adam(.001,.9,.999,yf()),Adamax:()=>Al.adamax(.002,.9,.999,yf(),0),RMSProp:()=>Al.rmsprop(.001,.9,0,yf()),SGD:()=>Al.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Cp(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ma))throw new Cp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Cp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>am(e)))}else{const n=am(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Cp(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(am(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],lf("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};lf("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===nm?-1!==["accuracy","acc"].indexOf(i)?r=im:-1!==["crossentropy","ce"].indexOf(i)&&(r=um):this.lossFunctions[e]===tm?-1!==["accuracy","acc"].indexOf(i)?r=lm:-1!==["crossentropy","ce"].indexOf(i)&&(r=hm):-1!==["accuracy","acc"].indexOf(i)?r=om:-1!==["crossentropy","ce"].indexOf(i)&&(r=cm),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=pm(i);a=e,n=""+fm(i)}let t;lf(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Am(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return Fp(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Mm(s[0],e),Mm(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new Np("Verbose mode is not implemented yet.");f(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(a=Ls((()=>{if(t.value){const{xs:n,ys:r}=Tm(e,t.value),i=n.concat(r),l=Ls((()=>s(i)));if(zs(i),0===u)for(let e=0;e<l.length;++e)a.push(Ra(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=Ls((()=>ka(a[e],Ca(c,t)))),u>0&&zs(n)}zs(l),o+=c,++u}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Sa(a[e],o),zs(t)}return Fp(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new Cp(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Cp(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Cp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new wg;if(e instanceof Qr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Cp(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Cp(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=Sg(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Ep(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Cp(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Ls((()=>{const r=this.checkNumSamples(e);if(n)throw new Np("Verbose predictLoop() is not implemented yet.");const s=Dm(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)Ls((()=>{const n=s[t][0],r=s[t][1],a=Fm(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new wg(i);return Sg(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return Fp(a.map((e=>Zi(e,0))))}))}predict(e,t={}){const n=Om(e);Bm(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Am(e),this.predictLoop(n,e)}finally{Mm(n,e)}}predictOnBatch(e){Bm(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Sp("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===tm?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t){const n=Wp(e.map((e=>e.shape[0])));n.sort();const r=Wp(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new Cp(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Cp(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!x(n,r))throw new Cp(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Pm(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Pm(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[Jg,nm,em];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===em&&1===a.shape[a.shape.length-1])throw new Cp(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new Cp(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new Cp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Cm(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Nm(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,s){return Ls((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new Np("Verbose mode is not implemented yet.");if(null!=s)throw new Np("steps mode in testLoop() is not implemented yet");{const r=Dm(a,n),s=Iu(bf(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=kf(s,a,o-a),l=_m(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(Ra(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=ka(i[e],Ca(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Sa(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;Ap(e,r)>1&&(s+=`_${Ap(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new wg(e),o=Sg(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=$m(n,s[e]));const a=Vo(n);t.push(a),u=0===e?n:ka(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=Vo(t(r[s],o[s]))}Ps(n),a.push(n)}return u=Vo(u),this.calculateLosses().forEach((e=>{u=ka(u,e)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Ls((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new wg(a),o=Sg(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Vo(r(s[e],o[e]));n=0===e?a:ka(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Vo(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,a,i,o,u,l,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;Am(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);r=f[0],s=f[1],h=f[2];let g,m=!1;if(null!=n.validationData&&n.validationData.length>0){if(m=!0,2!==n.validationData.length)throw 3===n.validationData.length?new Np("validationData including sample weights is not supported yet."):new Cp(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],u=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,u,null,null,e,d);l=t[0],c=t[1],g=l.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){m=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];l=Fm(r,e,t),a=r,r=Fm(r,0,e),c=Fm(s,e,t),i=s,s=Fm(s,0,e),g=l.concat(c)}else null!=n.validationSteps&&(m=!0);const b=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const x=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let v,w;m?(this.makeTestFunction(),v=this.testFunction,w=y.slice().concat(y.map((e=>"val_"+e)))):(v=null,g=[],w=y.slice());const k=jg(n.callbacks,n.yieldEvery);return await this.fitLoop(x,b,y,d,n.epochs,n.verbose,k,v,g,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,Mm(r,e),Mm(s,t),Mm(a,e),Mm(i,t),Mm(l,o),Mm(c,u),null!=h&&zs(h)}}async fitLoop(e,t,n,r,s,a,i,o,u,l,h,d,p,f){null==r&&(r=32),null==s&&(s=1),null==l&&(l=!0),null==d&&(d=0);let g=!1;if(null!=o&&null!=u&&(g=!0),null!=f&&(g=!0,null==p))throw new Cp("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,p,"steps_per_epoch");let b;null!=m&&(b=bf(0,m)),null==a&&(a=1);const{callbackList:x,history:y}=qg(i,a,s,d,m,p,r,g,h);x.setModel(this),this.history=y,await x.onTrainBegin(),this.stopTraining_=!1;for(let a=d;a<s;++a){await x.onEpochBegin(a);const s={};if(null!=p)throw new Np("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new Np("batch shuffling is not implemneted yet");l&&c(b);const a=Iu(b),i=Dm(m,r);for(let l=0;l<i.length;++l){const c={};if(await x.onBatchBegin(l,c),Ls((()=>{const h=i[l][0],d=i[l][1],p=kf(a,h,d-h);c.batch=l,c.size=d-h;const f=_m(t,p),m=e(f);for(let e=0;e<n.length;++e){const t=n[e],r=m[e];c[t]=r,Ps(r)}if(l===i.length-1&&g){const e=this.testLoop(o,u,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];Ps(a),s["val_"+r]=a}}})),await x.onBatchEnd(l,c),Pg(c),this.stopTraining_)break}a.dispose()}if(await x.onEpochEnd(a,s),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(f(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),f(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),f(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),f(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),f(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Rm(n.validationData))f(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Np("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=jg(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=qg(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let g=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;g<n.epochs;){const l={};await d.onEpochBegin(g);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Tm(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Cm(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Nm(s[e],null,t[e]))}const l=r.concat(s).concat(i),p=o(l);zs(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];a[t]=n,Ps(n)}await d.onBatchEnd(h,a),Pg(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Rm(n.validationData)?_p(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):_p(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(g,l),g++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return zs(a),Mm(n[0],e),Mm(n[1],t),Fp(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Ms().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ms().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Dp(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Dp(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Dp(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Dp(fm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Dp(fm(e))));{const e={};for(const t in this.metrics)e[t]=Dp(fm(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Xg(wm(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Op(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Op(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Op(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Op(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Op(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,qs.getSaveHandlers(n));if(0===t.length)throw new Cp(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Cp(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new Cp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Ws(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Im}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Ws(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=(a=[r.data,t],Ds.join(a))}var a;if(null!=this.userDefinedMetadata){const e=!0;gm(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){gm(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Wm.className="Model",Oa(Wm);class Um extends Wm{}Um.className="Functional",Oa(Um);class Vm extends Wm{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Jp("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Cp(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Vm||e instanceof Wm;let n;if(t){if(n=e,1!==n.outputs.length)throw new Cp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Cp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Cp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Cp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new vg({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Cp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Cp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=yg(this.outputs[0])}this.inboundNodes=[],new mg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ep(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(og(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Wm({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Sp("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Sp("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Sp("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Sp("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Cp("Legacy serialization format not supported yet.");s=t}else f(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Vm))throw new Np(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=Xg(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Cp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Cp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Vm.className="Sequential",Oa(Vm);class Gm extends _a{getConfig(){return{}}}class Hm extends Gm{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Np(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return po(e)}(e,t)}}Hm.className="elu",Oa(Hm);class jm extends Gm{apply(e){return lu(e)}}jm.className="selu",Oa(jm);class Km extends Gm{apply(e){return ou(e)}}Km.className="relu",Oa(Km);class qm extends Gm{apply(e){return Ls((()=>Ho(6,ou(e))))}}qm.className="relu6",Oa(qm);class Xm extends Gm{apply(e){return e}}Xm.className="linear",Oa(Xm);class Ym extends Gm{apply(e){return hu(e)}}Ym.className="sigmoid",Oa(Ym);class Jm extends Gm{apply(e){return function(e){return Ls((()=>{const t=ka(.5,Ca(.2,e));return Ji(t,0,1)}))}(e)}}Jm.className="hardSigmoid",Oa(Jm);class Zm extends Gm{apply(e){return xu(e)}}Zm.className="softplus",Oa(Zm);class Qm extends Gm{apply(e){return function(e){return Ls((()=>Sa(e,ka(Va(e),1))))}(e)}}Qm.className="softsign",Oa(Qm);class eb extends Gm{apply(e){return ku(e)}}eb.className="tanh",Oa(eb);class tb extends Gm{apply(e,t=-1){return bu(e,t)}}tb.className="softmax",Oa(tb);class nb extends Gm{apply(e,t=-1){return Eo(e,t)}}nb.className="logSoftmax",Oa(nb);class rb extends Gm{apply(e){return Ls((()=>Ls((()=>{const t=Math.sqrt(2),n=Ca(.5,ka(1,go(Sa(e,t))));return Ca(e,n)}))))}}rb.className="gelu",Oa(rb);class sb extends Gm{apply(e){return Ls((()=>Ca(.5,Ca(e,ka(1,ku(Ca(Na(Sa(2,Math.PI)),ka(e,Ca(.044715,Ba(e,3))))))))))}}sb.className="gelu_new",Oa(sb);class ab extends Gm{apply(e){return Ls((()=>Ca(e,ku(xu(e)))))}}ab.className="mish",Oa(ab);class ib extends Gm{apply(e,t=1){return Ls((()=>Ca(hu(Ca(e,t)),e)))}}function ob(e){return e.getClassName()}function ub(e,t={}){return Pp(e,Da.getMap().classNameMap,t,"activation")}function lb(e){if(null==e){return ub({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},ub(t)}return e instanceof Gm?e:ub(e)}ib.className="swish",Oa(ib);class cb extends _a{}class hb extends cb{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Ls((()=>{let t=Yo([1]);return this.hasL1&&(t=ka(t,To(Ca(this.l1,Va(e))))),this.hasL2&&(t=ka(t,To(Ca(this.l2,Af(e))))),Vi(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}hb.className="L1L2",Oa(hb);const db={l1l2:"L1L2"};function pb(e){return Lp(e)}function fb(e,t={}){return Pp(e,Da.getMap().classNameMap,t,"regularizer")}function gb(e){return null==e?null:"string"==typeof e?fb({className:e in db?db[e]:e,config:{}}):e instanceof cb?e:fb(e)}class mb extends xg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=ig(e);let n=ou(e);return null!=this.maxValue&&(n=Ji(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}mb.className="ReLU",Oa(mb);class bb extends xg{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ig(e);return So(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}bb.className="LeakyReLU",Oa(bb);class xb extends xg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=rg(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=gb(e.alphaRegularizer),this.alphaConstraint=Lg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Cp(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=og(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new pg({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=ig(e),eu(e,this.alpha.read())}getConfig(){const e={alphaInitializer:ng(this.alphaInitializer),alphaRegularizer:pb(this.alphaRegularizer),alphaConstraint:Og(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}xb.className="PReLU",Oa(xb);class yb extends xg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Np(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ig(e);return po(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}yb.className="ELU",Oa(yb);class vb extends xg{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=ig(e);return Ca(n,va(ko(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}vb.className="ThresholdedReLU",Oa(vb);class wb extends xg{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new tb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Ls((()=>{let n=ig(e);const r=t.mask;if(null!=r){const e=Ca(Wa(Jo(n.shape),va(r,n.dtype)),Ra(-1e9));n=ka(n,e)}return this.axis instanceof Array?this.axis.length>1?mo(Wa(n,zo(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function kb(e,t,n){if("number"==typeof e)return Ep(e,t);if(e.length!==t)throw new Cp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new Cp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function Ib(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function Sb(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+mf([n-t,0]);else{if("same"!==r)throw new Cp(`Unsupport padding mode: ${r}.`);e*=t}return e}function Cb(e,t){return Ls((()=>(sf(t),"channelsFirst"===t?Au(e,[0,2,3,1]):e)))}function Nb(e,t){return Ls((()=>(sf(t),"channelsFirst"===t?Au(e,[0,2,3,4,1]):e)))}function $b(e,t,n,r=[1,1],s="valid",a,i,o=null){return Ls((()=>{if(null==a&&(a="channelsLast"),sf(a),3!==e.rank&&4!==e.rank)throw new Cp(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Cp(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Cb(e,a);if("causal"===s)throw new Np("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Gu({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=Au(u,[0,3,1,2])),u}))}wb.className="Softmax",Oa(wb);class Tb extends xg{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Tb.verifyArgs(t),this.rank=e,Hp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Np(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=kb(t.kernelSize,e,"kernelSize"),this.strides=kb(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,af(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,sf(this.dataFormat),this.activation=lb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=rg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Lg(t.biasConstraint),this.biasRegularizer=gb(t.biasRegularizer),this.activityRegularizer=gb(t.activityRegularizer),this.dilationRate=kb(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Cp(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Cp(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Cp(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Rp("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Gp(e.kernelSize,"number",1,3))throw new Cp(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ob(this.activation),useBias:this.useBias,biasInitializer:ng(this.biasInitializer),biasRegularizer:pb(this.biasRegularizer),activityRegularizer:pb(this.activityRegularizer),biasConstraint:Og(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Eb extends Tb{constructor(e,t){super(e,t),this.kernel=null,Eb.verifyArgs(t),this.filters=t.filters,Hp(this.filters,"filters"),this.kernelInitializer=rg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Lg(t.kernelConstraint),this.kernelRegularizer=gb(t.kernelRegularizer)}build(e){e=og(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Cp(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Ls((()=>{let t;e=ig(e);const n=null==this.bias?null:this.bias.read(),r=Kp(this.activation.getClassName());if(null!=r&&2===this.rank)t=$b(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return Ls((()=>{if(null==a&&(a="channelsLast"),sf(a),3!==e.shape.length)throw new Cp(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Cp(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Cp(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===a&&(e=Au(e,[0,2,1])),"causal"===s)throw new Np("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=so(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=_f(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=$b(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Np("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return Ls((()=>{if(null==a&&(a="channelsLast"),sf(a),4!==e.rank&&5!==e.rank)throw new Cp(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Cp(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Nb(e,a);if("causal"===s)throw new Np("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=oo(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=_f(o,n)),"channelsFirst"===a&&(o=Au(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=og(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Ib(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:ng(this.kernelInitializer),kernelRegularizer:pb(this.kernelRegularizer),kernelConstraint:Og(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Cp(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Rb extends Eb{constructor(e){super(2,e),Rb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Gp(e.kernelSize,"number",1,2))throw new Cp(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Rb.className="Conv2D",Oa(Rb);class Ab extends Eb{constructor(e){super(3,e),Ab.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Cp(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Ab.className="Conv3D",Oa(Ab);class Fb extends Rb{constructor(e){if(super(e),this.inputSpec=[new pg({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Cp(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=og(e)).length)throw new Cp("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Cp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new pg({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Ls((()=>{let t=ig(e);if(4!==t.shape.length)throw new Cp(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,Sb(i,c,u,this.padding),Sb(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Au(t,[0,2,3,1]));let p=io(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Au(p,[0,3,1,2])),null!=this.bias&&(p=_f(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=og(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Sb(t[r],o,a,this.padding),t[s]=Sb(t[s],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Fb.className="Conv2DTranspose",Oa(Fb);class _b extends Ab{constructor(e){if(super(e),this.inputSpec=[new pg({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Cp(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=og(e)).length)throw new Cp("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Cp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new pg({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Ls((()=>{let t=ig(e);if(5!==t.shape.length)throw new Cp(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],u=n[s],l=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=[r,Sb(o,p,c,this.padding),Sb(u,f,h,this.padding),Sb(l,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Au(t,[0,2,3,4,1]));let b=lo(t,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=Au(b,[0,4,1,2,3])),null!==this.bias&&(b=_f(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=og(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Sb(t[r],l,i,this.padding),t[s]=Sb(t[s],c,o,this.padding),t[a]=Sb(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}_b.className="Conv3DTranspose",Oa(_b);class Db extends Eb{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Cp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Cp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Cp(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=rg(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=gb(t.depthwiseRegularizer),this.depthwiseConstraint=Lg(t.depthwiseConstraint),this.pointwiseInitializer=rg(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=gb(t.pointwiseRegularizer),this.pointwiseConstraint=Lg(t.pointwiseConstraint)}build(e){if((e=og(e)).length<this.rank+2)throw new Cp(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Cp(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new pg({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Ls((()=>{let t;if(e=ig(e),1===this.rank)throw new Np("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Au(e,[0,2,3,1])),t=cu(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=_f(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Au(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=ng(this.depthwiseInitializer),e.pointwiseInitializer=ng(this.pointwiseInitializer),e.depthwiseRegularizer=pb(this.depthwiseRegularizer),e.pointwiseRegularizer=pb(this.pointwiseRegularizer),e.depthwiseConstraint=Og(this.depthwiseConstraint),e.pointwiseConstraint=Og(this.pointwiseConstraint),e}}Db.className="SeparableConv";class Ob extends Db{constructor(e){super(2,e)}}Ob.className="SeparableConv2D",Oa(Ob);class Mb extends Eb{constructor(e){super(1,e),Mb.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Gp(e.kernelSize,"number",1,1))throw new Cp(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Mb.className="Conv1D",Oa(Mb);class Lb extends xg{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Ls((()=>{if(e=ig(e),"channelsLast"===this.dataFormat){const t=Sf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Sf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Sf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Sf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Lb.className="Cropping2D",Oa(Lb);class zb extends xg{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sf(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Vp(Qp,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Ls((()=>{let t=ig(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Au(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?El.resizeNearestNeighbor(t,[e,r]):El.resizeBilinear(t,[e,r]);return Au(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?El.resizeNearestNeighbor(t,[e,r]):El.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}zb.className="UpSampling2D",Oa(zb);class Pb extends Tb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=rg(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Lg(e.depthwiseConstraint),this.depthwiseRegularizer=gb(e.depthwiseRegularizer)}build(e){if((e=og(e)).length<4)throw new Cp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Cp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ls((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return Ls((()=>{null==s&&(s="channelsLast"),sf(s);let i=Cb(e,s);if(4!==e.rank)throw new Cp(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Cp(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=ho(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Au(i,[0,3,1,2])),i}))}(e=ig(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=_f(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=og(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Ib(t,this.kernelSize[0],this.padding,this.strides[0]),a=Ib(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=ng(this.depthwiseInitializer),e.depthwiseRegularizer=pb(this.depthwiseRegularizer),e.depthwiseConstraint=Og(this.depthwiseRegularizer),e}}function Bb(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Cp("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Wb(e,t,n,r=!1,s,a,i=!1,o=!1){return Ls((()=>{const u=t.shape.length;if(u<3)throw new Cp(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(bf(2,u));if(t=Au(t,l),null!=a)throw new Np("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=va(va(s,"bool"),"float32")).rank===u-1&&(s=bo(s,-1)),s=Au(s,l)),r&&(t=uu(t,0),null!=s&&(s=uu(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=Nu(t);let g,m;null!=s&&(g=Nu(s));for(let t=0;t<p;++t){const n=f[t],r=Ls((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=Ls((()=>{const e=g[t],n=Wa(Zo(e),e);return{output:ka(Ca(r[0],e),Ca(d[0],n)),newStates:d.map(((t,s)=>ka(Ca(r[1][s],e),Ca(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(m=wu(c,1)),[h,m,d]}))}Pb.className="DepthwiseConv2D",Oa(Pb);class Ub extends xg{constructor(e){let t;if(super(e),null==e.cell)throw new Cp("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Yb({cells:e.cell}):e.cell,null==t.stateSize)throw new Cp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new pg({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?bf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){sg(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Ls((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Np("Constants support is not implemented in RNN yet.");sg(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new pg({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!x(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Cp(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new pg({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Ls((()=>{if(!this.stateful)throw new Ip("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Cp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Yo([n,e]))):this.states_=[Yo([n,this.cell.stateSize])];else if(null==e)zs(this.states_),null!=this.keptStates&&(zs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Yo([n,e]))):this.states_[0]=Yo([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Cp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):zs(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!x(r.shape,a))throw new Cp(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Ps(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Bb(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new pg({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof fg){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Ls((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=ig(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Cp(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Wb(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Ls((()=>{let t=Yo(e.shape);return t=To(t,[1,2]),t=wf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?$f(t,[1,e]):t)):this.cell.stateSize>1?[$f(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ub.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=Xg(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Ub.className="RNN",Oa(Ub);class Vb extends xg{}class Gb extends Vb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Hp(this.units,"units"),this.activation=lb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=rg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=rg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=rg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gb(e.kernelRegularizer),this.recurrentRegularizer=gb(e.recurrentRegularizer),this.biasRegularizer=gb(e.biasRegularizer),this.kernelConstraint=Lg(e.kernelConstraint),this.recurrentConstraint=Lg(e.recurrentConstraint),this.biasConstraint=Lg(e.biasConstraint),this.dropout=gf([1,mf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=gf([1,mf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=og(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ls((()=>{if(2!==e.length)throw new Cp(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jb({ones:()=>Zo(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jb({ones:()=>Zo(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Ef(null!=a?Ca(e,a):e,this.kernel.read()),null!=this.bias&&(s=_f(s,this.bias.read())),null!=i&&(n=Ca(n,i));let o=ka(s,Ef(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ob(this.activation),useBias:this.useBias,kernelInitializer:ng(this.kernelInitializer),recurrentInitializer:ng(this.recurrentInitializer),biasInitializer:ng(this.biasInitializer),kernelRegularizer:pb(this.kernelRegularizer),recurrentRegularizer:pb(this.recurrentRegularizer),biasRegularizer:pb(this.biasRegularizer),activityRegularizer:pb(this.activityRegularizer),kernelConstraint:Og(this.kernelConstraint),recurrentConstraint:Og(this.recurrentConstraint),biasConstraint:Og(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Gb.className="SimpleRNNCell",Oa(Gb);class Hb extends Ub{constructor(e){e.cell=new Gb(e),super(e)}call(e,t){return Ls((()=>{null!=this.cell.dropoutMask&&(zs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Hb.className="SimpleRNN",Oa(Hb);class jb extends Vb{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Cp("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Hp(this.units,"units"),this.activation=lb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=lb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=rg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=rg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=rg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gb(e.kernelRegularizer),this.recurrentRegularizer=gb(e.recurrentRegularizer),this.biasRegularizer=gb(e.biasRegularizer),this.kernelConstraint=Lg(e.kernelConstraint),this.recurrentConstraint=Lg(e.recurrentConstraint),this.biasConstraint=Lg(e.biasConstraint),this.dropout=gf([1,mf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=gf([1,mf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=og(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ls((()=>{if(2!==e.length)throw new Cp(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jb({ones:()=>Zo(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jb({ones:()=>Zo(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=Ca(e,s[0]));let l=Ef(e,this.kernel.read());this.useBias&&(l=_f(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ca(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=yu(c,[2*this.units,this.units],c.rank-1),p=Ef(r,h),[f,g,m]=yu(l,3,l.rank-1),[b,x]=yu(p,2,p.rank-1);i=this.recurrentActivation.apply(ka(f,b)),o=this.recurrentActivation.apply(ka(g,x));const y=Ef(Ca(o,r),d);u=this.activation.apply(ka(m,y));const v=ka(Ca(i,r),Ca(ka(1,Ko(i)),u));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ob(this.activation),recurrentActivation:ob(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ng(this.kernelInitializer),recurrentInitializer:ng(this.recurrentInitializer),biasInitializer:ng(this.biasInitializer),kernelRegularizer:pb(this.kernelRegularizer),recurrentRegularizer:pb(this.recurrentRegularizer),biasRegularizer:pb(this.biasRegularizer),activityRegularizer:pb(this.activityRegularizer),kernelConstraint:Og(this.kernelConstraint),recurrentConstraint:Og(this.recurrentConstraint),biasConstraint:Og(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}jb.className="GRUCell",Oa(jb);class Kb extends Ub{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new jb(e),super(e)}call(e,t){return Ls((()=>{null!=this.cell.dropoutMask&&(zs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Kb.className="GRU",Oa(Kb);class qb extends Vb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Hp(this.units,"units"),this.activation=lb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=lb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=rg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=rg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=rg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=gb(e.kernelRegularizer),this.recurrentRegularizer=gb(e.recurrentRegularizer),this.biasRegularizer=gb(e.biasRegularizer),this.kernelConstraint=Lg(e.kernelConstraint),this.recurrentConstraint=Lg(e.recurrentConstraint),this.biasConstraint=Lg(e.biasConstraint),this.dropout=gf([1,mf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=gf([1,mf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=og(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends zf{apply(t,r){const s=e.apply([n]),a=(new Bf).apply([n]),i=e.apply([2*n]);return Nf(Nf(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Ls((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Cp(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jb({ones:()=>Zo(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jb({ones:()=>Zo(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=Ca(e,a[0]));let h=Ef(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ca(r,i[0])),h=ka(h,Ef(r,this.recurrentKernel.read())),this.useBias&&(h=_f(h,this.bias.read()));const[d,p,f,g]=yu(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=ka(Ca(u,s),Ca(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=Ca(c,this.activation.apply(l));return[m,m,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ob(this.activation),recurrentActivation:ob(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ng(this.kernelInitializer),recurrentInitializer:ng(this.recurrentInitializer),biasInitializer:ng(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:pb(this.kernelRegularizer),recurrentRegularizer:pb(this.recurrentRegularizer),biasRegularizer:pb(this.biasRegularizer),activityRegularizer:pb(this.activityRegularizer),kernelConstraint:Og(this.kernelConstraint),recurrentConstraint:Og(this.recurrentConstraint),biasConstraint:Og(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}qb.className="LSTMCell",Oa(qb);class Xb extends Ub{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new qb(e),super(e)}call(e,t){return Ls((()=>{null!=this.cell.dropoutMask&&(zs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Xb.className="LSTM",Oa(Xb);class Yb extends Vb{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Ls((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;sg(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{lf(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Xg(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return hg(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}dg(t)}}function Jb(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):Df(t(),n),o=()=>Of(i,t,r);return!s||s<=1?Ps(o().clone()):Array(s).fill(void 0).map(o).map((e=>Ps(e.clone())))}Yb.className="StackedRNNCells",Oa(Yb);class Zb extends Ub{constructor(e){if(e.unroll)throw new Np("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Np("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new pg({ndim:5})]}call(e,t){return Ls((()=>{if(null!=this.cell.dropoutMask&&(zs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Cp("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Ls((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Yo([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Ls((()=>{if(!this.stateful)throw new Ip("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Cp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Yo(s))):this.states_=[Yo(s)];else if(null==e)zs(this.states_),null!=this.keptStates&&(zs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Yo(s))):this.states_[0]=Yo(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Cp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):zs(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!x(n.shape,r))throw new Cp(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Ps(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Ib(u,r[0],s,a[0],i[0]),h=Ib(l,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Zb.className="ConvRNN2D";class Qb extends qb{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Hp(this.filters,"filters"),this.kernelSize=kb(n,2,"kernelSize"),this.kernelSize.forEach((e=>Hp(e,"kernelSize"))),this.strides=kb(r||1,2,"strides"),this.strides.forEach((e=>Hp(e,"strides"))),this.padding=s||"valid",af(this.padding),this.dataFormat=a||"channelsLast",sf(this.dataFormat),this.dilationRate=kb(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Hp(e,"dilationRate")))}build(e){var t;e=og(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Cp(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends zf{apply(e,t){return Cf([n.apply([r]),Jo([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Ls((()=>{if(3!==e.length)throw new Cp(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jb({ones:()=>Zo(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Ca(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jb({ones:()=>Zo(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),g=o(s,d,2),m=o(s,d,3);const[b,x,y,v]=yu(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?yu(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,b,w,this.padding),l=this.inputConv(l,x,k,this.padding),c=this.inputConv(c,y,I,this.padding),h=this.inputConv(h,v,S,this.padding);const[C,N,$,T]=yu(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,N),g=this.recurrentConv(g,$),m=this.recurrentConv(m,T);const E=this.recurrentActivation.apply(ka(u,p)),R=this.recurrentActivation.apply(ka(l,f)),A=ka(Ca(R,a),Ca(E,this.activation.apply(ka(c,g)))),F=Ca(this.recurrentActivation.apply(ka(h,m)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=ro(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?_f(s,n,this.dataFormat):s}recurrentConv(e,t){return ro(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Qb.className="ConvLSTM2DCell",Oa(Qb);class ex extends Zb{constructor(e){const t=new Qb(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}ex.className="ConvLSTM2D",Oa(ex);class tx extends xg{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Ls((()=>{this.invokeCallHook(e,t);const n=ig(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Of((()=>Df(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}tx.className="Dropout",Oa(tx);class nx extends tx{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}nx.className="SpatialDropout1D",Oa(nx);class rx extends xg{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Hp(this.units,"units"),this.activation=lb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=rg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=rg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Lg(e.kernelConstraint),this.biasConstraint=Lg(e.biasConstraint),this.kernelRegularizer=gb(e.kernelRegularizer),this.biasRegularizer=gb(e.biasRegularizer),this.activityRegularizer=gb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=og(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=og(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Ls((()=>{this.invokeCallHook(e,t);const n=ig(e),r=Kp(this.activation.getClassName());let s;return null!=r?s=Ef(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Ef(n,this.kernel.read()),null!=this.bias&&(s=_f(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:ob(this.activation),useBias:this.useBias,kernelInitializer:ng(this.kernelInitializer),biasInitializer:ng(this.biasInitializer),kernelRegularizer:pb(this.kernelRegularizer),biasRegularizer:pb(this.biasRegularizer),activityRegularizer:pb(this.activityRegularizer),kernelConstraint:Og(this.kernelConstraint),biasConstraint:Og(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}rx.className="Dense",Oa(rx);class sx extends xg{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=og(e);for(const t of e.slice(1))if(null==t)throw new Cp(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ff(e,1)]}call(e,t){return Ls((()=>{this.invokeCallHook(e,t);let n=ig(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Au(n,e)}return function(e){if(e.rank<=1)throw new Cp(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],ff(e.shape,1)];return Vi(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}sx.className="Flatten",Oa(sx);class ax extends xg{constructor(e){super(e),this.supportsMasking=!0,this.activation=lb(e.activation)}call(e,t){return Ls((()=>{this.invokeCallHook(e,t);const n=ig(e);return this.activation.apply(n)}))}getConfig(){const e={activation:ob(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}ax.className="Activation",Oa(ax);class ix extends xg{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Ls((()=>{return e=ig(e),t=e,n=this.n,Ls((()=>{if(2!==t.shape.length)throw new Cp(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return $f(wf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ix.className="RepeatVector",Oa(ix);class ox extends xg{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new Cp("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=ff(e);if(null!==a){if(0===s||i%s!==0)throw new Cp(n);r[a]=i/s}else if(i!==s)throw new Cp(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Ls((()=>{this.invokeCallHook(e,t);const n=ig(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Vi(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}ox.className="Reshape",Oa(ox);class ux extends xg{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=bf(1,e.dims.length+1);if(!x(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new pg({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=og(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Au(ig(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ux.className="Permute",Oa(ux);class lx extends xg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=ig(e);return Ni(qo(n,this.maskValue),-1)}call(e,t){return Ls((()=>{this.invokeCallHook(e,t);const n=ig(e),r=Ni(qo(n,this.maskValue),-1,!0);return Ca(n,va(r,n.dtype))}))}}lx.className="Masking",Oa(lx);class cx extends xg{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(_p(e.inputLength))}this.inputDim=e.inputDim,Hp(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Hp(this.outputDim,"outputDim"),this.embeddingsInitializer=rg(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=gb(e.embeddingsRegularizer),this.activityRegularizer=gb(e.activityRegularizer),this.embeddingsConstraint=Lg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Ls((()=>this.maskZero?(e=ig(e),qo(e,Ta(e))):null))}computeOutputShape(e){if(e=og(e),null==this.inputLength)return[...e,this.outputDim];const t=_p(this.inputLength);if(t.length!==e.length-1)throw new Cp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new Cp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Ls((()=>{this.invokeCallHook(e,t);let n=ig(e);"int32"!==n.dtype&&(n=vf(n,"int32"));const r=Rf(this.embeddings.read(),Vi(n,[n.size]));return Vi(r,og(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ng(this.embeddingsInitializer),embeddingsRegularizer:pb(this.embeddingsRegularizer),activityRegularizer:pb(this.activityRegularizer),embeddingsConstraint:Og(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}cx.className="Embedding",Oa(cx);class hx extends xg{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Np}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Cp("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[og(e)]),e.length<2)throw new Cp(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Wp(t),t.length>1)throw new Cp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Wp(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Ls((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=mf(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=wf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=Vi(r,[s].concat(ff(e.slice(1))));i=Au(i,[1,0]),i=Vi(i,a),t.push(i),n=!0}else if(e>1){const s=bf(1,e).concat([0]);t.push(Au(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Vi(Au(Vi(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(bf(0,s-1));r=Au(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Wp(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Ls((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Cp("`mask` should be an Array");if(!Array.isArray(e))throw new Cp("`inputs` should be an Array");if(t.length!==e.length)throw new Cp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:bo(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Po(n,t[e]);return n}))}}class dx extends hx{constructor(e){super(e)}mergeFunction(e){return Ls((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ka(t,e[n]);return t}))}}dx.className="Add",Oa(dx);class px extends hx{constructor(e){super(e)}mergeFunction(e){return Ls((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ca(t,e[n]);return t}))}}px.className="Multiply",Oa(px);class fx extends hx{constructor(e){super(e)}mergeFunction(e){return Ls((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ka(t,e[n]);return Ca(1/e.length,t)}))}}fx.className="Average",Oa(fx);class gx extends hx{constructor(e){super(e)}mergeFunction(e){return Ls((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ka(t,e[n]);return t}))}}gx.className="Maximum",Oa(gx);class mx extends hx{constructor(e){super(e)}mergeFunction(e){return Ls((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ho(t,e[n]);return t}))}}mx.className="Minimum",Oa(mx);class bx extends hx{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Cp("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(x(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Cp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Ls((()=>Cf(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Cp("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Cp("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Cp("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Cp(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Ls((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(va(Zo(e[n]),"bool")):t[n].rank<e[n].rank?r.push(bo(t[n],-1)):r.push(t[n]);const s=Zi(r,this.axis);return Ci(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function xx(e,t){for(;e<0;)e+=t;return e}bx.className="Concatenate",Oa(bx);class yx extends hx{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){f(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Np("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Cp(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Cp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>xx(t,e[n].shape.length))):[xx(this.axes,n.shape.length),xx(this.axes,r.shape.length)],this.normalize&&(n=Yg(n,t[0]),r=Yg(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Np("batchDot is not implemented for tensors of 4D or higher rank yet");if(f(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),f(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Np("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Ls((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=Vi(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Vi(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?To(Ca(e,t),a[0]):To(Ca(Au(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=Bo(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=vu(i,t)}return 1===i.shape.length&&(i=bo(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[xx(this.axes,e.length),xx(this.axes,t.length)],n}computeOutputShape(e){f(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Np("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}yx.className="Dot",Oa(yx);class vx extends xg{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Ls((()=>{this.invokeCallHook(e,t);const n=ig(e);return Of((()=>ka(Tf(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}vx.className="GaussianNoise",Oa(vx);class wx extends xg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ls((()=>{this.invokeCallHook(e,t);const n=ig(e);return this.rate>0&&this.rate<1?Of((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Ca(n,Tf(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}wx.className="GaussianDropout",Oa(wx);class kx extends xg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||ig(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ls((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Of((()=>{const t=ig(e),r=-1.7580993408473766;let s=Io(au(n),this.rate);s=vf(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=ka(Ca(t,s),Ca(ka(s,-1),r));return ka(Ca(o,a),i)}),(()=>ig(e)),t.training||!1)}return e}))}}function Ix(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=Ki(e,t,n,r,s,a);else if(3===e.rank)i=qi(e,t,n,r,s,a);else{if(4!==e.rank)throw new Np(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Xi(e,t,n,r,s,a)}return i}kx.className="AlphaDropout",Oa(kx);class Sx extends xg{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=rg(e.betaInitializer||"zeros"),this.gammaInitializer=rg(e.gammaInitializer||"ones"),this.movingMeanInitializer=rg(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=rg(e.movingVarianceInitializer||"ones"),this.betaConstraint=Lg(e.betaConstraint),this.gammaConstraint=Lg(e.gammaConstraint),this.betaRegularizer=gb(e.betaRegularizer),this.gammaRegularizer=gb(e.gammaRegularizer)}build(e){e=og(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Cp(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new pg({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Ls((()=>{const n=null!=t.training&&t.training,r=ig(e),s=r.shape,a=s.length,i=bf(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=Ep(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!x(l,bf(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=Vi(this.movingMean.read(),u),t=Vi(this.movingVariance.read(),u),n=this.center?Vi(this.beta.read(),u):null,s=this.scale?Vi(this.gamma.read(),u):null;return Ix(r,e,t,n,s,this.epsilon)}return Ix(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return x(r.slice().sort(),bf(0,e.rank-1))?function(e,t,n,r,s=.001){return Ls((()=>{const a=jo(e,r),i=a.mean,o=a.variance;return[Ix(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return Ls((()=>{const a=jo(e,r),i=a.mean,o=a.variance,u=[];for(const t of bf(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=Vi(i,u),c=Vi(o,u),h=null==t?null:Vi(t,u),d=null==n?null:Vi(n,u);return[Ix(e,l,c,d,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Ls((()=>{const r=1-n,s=e.read(),a=Ca(Wa(s,t),r);e.write(Wa(s,a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ng(this.betaInitializer),gammaInitializer:ng(this.gammaInitializer),movingMeanInitializer:ng(this.movingMeanInitializer),movingVarianceInitializer:ng(this.movingVarianceInitializer),betaRegularizer:pb(this.betaRegularizer),gammaRegularizer:pb(this.gammaRegularizer),betaConstraint:Og(this.betaConstraint),gammaConstraint:Og(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Sx.className="BatchNormalization",Oa(Sx);class Cx extends xg{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=rg(e.betaInitializer||"zeros"),this.gammaInitializer=rg(e.gammaInitializer||"ones"),this.betaRegularizer=gb(e.betaRegularizer),this.gammaRegularizer=gb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=og(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Wp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=ig(e),r=n.shape,s=r.length;return Ls((()=>{let{mean:e,variance:t}=jo(n,this.axis,!0);const a=Ep(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s?Vi(e,a):e;let o=this.scale?i(this.gamma.read()):null,u=this.center?i(this.beta.read()):null;const l=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=xo(e,l),t=xo(t,l),null!=o&&(o=xo(o,c)),null!=u&&(u=xo(u,c)),Ix(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ng(this.betaInitializer),gammaInitializer:ng(this.gammaInitializer),betaRegularizer:pb(this.betaRegularizer),gammaRegularizer:pb(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Cx.className="LayerNormalization",Oa(Cx);class Nx extends xg{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Cp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Cp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Cp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new pg({ndim:4})]}computeOutputShape(e){let t,n;return e=og(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Ls((()=>{return t=ig(e),n=this.padding,r=this.dataFormat,Ls((()=>{if(4!==t.rank)throw new Cp(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Cp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Cp(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Qo(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function $x(e,t,n,r,s,a){return Ls((()=>{let i;sf(s),of(a),af(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Cb(e,s);const o="same"===r?"same":"valid";return i="max"===a?Wo(e,t,n,o):Gi(e,t,n,o),"channelsFirst"===s&&(i=Au(i,[0,3,1,2])),i}))}function Tx(e,t,n,r,s,a){return Ls((()=>{let i;sf(s),of(a),af(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Nb(e,s);const o="same"===r?"same":"valid";return i="max"===a?Uo(e,t,n,o):Hi(e,t,n,o),"channelsFirst"===s&&(i=Au(i,[0,4,1,2,3])),i}))}Nx.className="ZeroPadding2D",Oa(Nx);class Ex extends xg{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Cp(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Hp(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Cp(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Hp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,af(this.padding),this.inputSpec=[new pg({ndim:3})]}computeOutputShape(e){const t=Ib((e=og(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Ls((()=>{this.invokeCallHook(e,t),e=wf(ig(e),2);const n=this.poolingFunction(ig(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return vu(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Rx extends Ex{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return sf(s),af(r),$x(e,t,n,r,s,"max")}}Rx.className="MaxPooling1D",Oa(Rx);class Ax extends Ex{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return sf(s),af(r),$x(e,t,n,r,s,"avg")}}Ax.className="AveragePooling1D",Oa(Ax);class Fx extends xg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Cp(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Hp(this.poolSize,"poolSize"),Hp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sf(this.dataFormat),af(this.padding),this.inputSpec=[new pg({ndim:4})]}computeOutputShape(e){e=og(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Ib(t,this.poolSize[0],this.padding,this.strides[0]),n=Ib(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Ls((()=>(this.invokeCallHook(e,t),this.poolingFunction(ig(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class _x extends Fx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return sf(s),af(r),$x(e,t,n,r,s,"max")}}_x.className="MaxPooling2D",Oa(_x);class Dx extends Fx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return sf(s),af(r),$x(e,t,n,r,s,"avg")}}Dx.className="AveragePooling2D",Oa(Dx);class Ox extends xg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Cp(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Hp(this.poolSize,"poolSize"),Hp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sf(this.dataFormat),af(this.padding),this.inputSpec=[new pg({ndim:5})]}computeOutputShape(e){e=og(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Ib(t,this.poolSize[0],this.padding,this.strides[0]),n=Ib(n,this.poolSize[1],this.padding,this.strides[1]),r=Ib(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Ls((()=>(this.invokeCallHook(e,t),this.poolingFunction(ig(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Mx extends Ox{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return sf(s),af(r),Tx(e,t,n,r,s,"max")}}Mx.className="MaxPooling3D",Oa(Mx);class Lx extends Ox{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return sf(s),af(r),Tx(e,t,n,r,s,"avg")}}Lx.className="AveragePooling3D",Oa(Lx);class zx extends xg{constructor(e){super(e),this.inputSpec=[new pg({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Np}}class Px extends zx{constructor(e){super(e||{})}call(e,t){return Ls((()=>{const t=ig(e);return Vo(t,1)}))}}Px.className="GlobalAveragePooling1D",Oa(Px);class Bx extends zx{constructor(e){super(e||{})}call(e,t){return Ls((()=>{const t=ig(e);return $o(t,1)}))}}Bx.className="GlobalMaxPooling1D",Oa(Bx);class Wx extends xg{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sf(this.dataFormat),this.inputSpec=[new pg({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Np}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ux extends Wx{call(e,t){return Ls((()=>{const t=ig(e);return"channelsLast"===this.dataFormat?Vo(t,[1,2]):Vo(t,[2,3])}))}}Ux.className="GlobalAveragePooling2D",Oa(Ux);class Vx extends Wx{call(e,t){return Ls((()=>{const t=ig(e);return"channelsLast"===this.dataFormat?$o(t,[1,2]):$o(t,[2,3])}))}}Vx.className="GlobalMaxPooling2D",Oa(Vx);class Gx extends xg{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Xg(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Hx extends Gx{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=og(e)).length<3)throw new Cp(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=og(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Ls((()=>Wb(((e,n)=>[ig(this.layer.call(e,t)),[]]),e=ig(e),[],!1,null,null,!1,!0)[1]))}}Hx.className="TimeDistributed",Oa(Hx);class jx extends Gx{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Xg(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Xg(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Vp(nf,"BidirectionalMergeMode",s),e.weights)throw new Np("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Fp(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Bb(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Cp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new pg({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Np("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof fg;for(const e of a)if(e instanceof fg!==o)throw new Cp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Ls((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=uu(s,1)),"concat"===this.mergeMode?i=Cf([r,s]):"sum"===this.mergeMode?i=ka(r,s):"ave"===this.mergeMode?i=Ca(.5,ka(r,s)):"mul"===this.mergeMode?i=Ca(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){lf(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),lf(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Xg(t.layer);if(delete t.layer,null!=t.numConstants)throw new Np("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}jx.className="Bidirectional",Oa(jx);class Kx extends xg{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Ls((()=>("float32"!==(e=ig(e)).dtype&&(e=vf(e,"float32")),ka(Ca(e,this.scale),this.offset))))}}Kx.className="Rescaling",Oa(Kx);const{resizeBilinear:qx,cropAndResize:Xx}=El;class Yx extends xg{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,i,o){return Ls((()=>{let u,l=!1;const c=[t/a,n/i,(r+t)/a,(s+n)/i],h=[];3===e.rank?(l=!0,u=wu([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(c);const d=_s(h,[h.length,4]),p=iu(0,h.length,1,"int32"),f=Xx(u,d,p,[r,s],"nearest");return vf(l?ig(Nu(f)):f,o)}))}upsize(e,t,n,r){return Ls((()=>vf(qx(e,[t,n]),r)))}call(e,t){return Ls((()=>{const t=ig(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=og(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Yx.className="CenterCrop",Oa(Yx);class Jx extends xg{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=og(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Ls((()=>{let n;if("int32"!==(e=ig(e)).dtype&&(e=vf(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new Cp(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=ig(t.countWeights)}const r=$o(e),s=Go(e),a=ko(this.numTokens,r).bufferSync().get(0),i=Io(s,0).bufferSync().get(0);if(!a||!i)throw new Cp(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=ig(e);if("int32"!==s.dtype&&(s=vf(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=bo(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=bo(s,-1)),s.rank>2)throw new Cp(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t);let o;if(o=co(s,void 0!==r&&"count"===t?r:[],n,i),"tfIdf"!==t)return o;if(r)return Ca(o,r);throw new Cp("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Jx.className="CategoryEncoding",Oa(Jx);const Zx=new Set(["bilinear","nearest"]);class Qx extends xg{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Zx.has(e.interpolation))throw new Cp(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=og(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Ls((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return El.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return El.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Zx]} are supported`)}))}}Qx.className="Resizing",Oa(Qx);class ey{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}ey.className="RandomSeed";class ty extends xg{constructor(e){super(e),this.randomGenerator=new ey(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}ty.className="BaseRandomLayer";const ny=new Set(["bilinear","nearest"]);class ry extends ty{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Cp(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Cp(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new Cp(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!ny.has(n))throw new Cp(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=og(e))[2];return[this.imgHeight,-1,t]}call(e,t){return Ls((()=>{const t=ig(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=au([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return El.resizeBilinear(e,s);case"nearest":return El.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...ny]} are supported`)}}))}}var sy,ay,iy,oy;function uy(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(dy(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=uy(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function ly(e,t=hy){return cy(e,t)}function cy(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(dy(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=cy(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function hy(e){return null===e?null:dy(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function dy(e){let t=!1;if(q().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(1715);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Qr)&&!(e instanceof Promise)&&!t)}function py(e){return uy(e,fy)}function fy(e){return e instanceof Qr?{value:e.clone(),recurse:!1}:dy(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}ry.className="RandomWidth",Oa(ry),q().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(sy||(sy={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(ay||(ay={})),Error,new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);class gy{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class my extends gy{constructor(){super(my.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}my.INITIAL_CAPACITY=32;class by{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Ny(this,e)}filter(e){return new Sy(this,e)}map(e){return new Cy(this,e)}mapAsync(e){return new $y(this,e)}serialMapAsync(e){return new $y(this,e).serial()}flatmap(e){return new Ey(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Iy(this,e,t)}columnMajorBatch(e,t=!0,n=hy){return this.rowMajorBatch(e,t).map((e=>ly(e,n)))}concatenate(e,t){return new Ry(new xy([this,e]),t)}take(e){return e<0||null==e?this:new ky(this,e)}skip(e){return e<0||null==e?this:new wy(this,e)}prefetch(e){return new Ay(this,e)}shuffle(e,t){return new Fy(this,e,t)}serial(){return new vy(this)}}class xy extends by{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:py(e),done:!1}}}class yy extends by{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class vy extends by{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class wy extends by{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;zs(e.value)}return this.upstream.next()}}class ky extends by{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Iy extends by{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Sy extends by{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;zs(e.value)}}}class Cy extends by{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=fs(e.value),n=this.transform(e.value),r=fs(n);for(const e of t)ps(e,r)||e.dispose();return{value:n,done:!1}}}class Ny extends by{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class $y extends by{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=fs(e.value),n=await this.transform(e.value),r=fs(n);for(const e of t)ps(e,r)||e.dispose();return{value:n,done:!1}}}class Ty extends by{constructor(){super(),this.outputQueue=new my,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Ey extends Ty{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=fs(e.value),n=this.transform(e.value),r=fs(n);this.outputQueue.pushAll(n);for(const e of t)ps(e,r)||e.dispose();return!0}}class Ry extends by{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(oy=iy||(iy={}))[oy.FAIL=0]="FAIL",oy[oy.SHORTEST=1]="SHORTEST",oy[oy.LONGEST=2]="LONGEST";class Ay extends by{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new gy(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Fy extends Ay{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=tu.alea(n||Mr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class _y{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return f(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Dy((async()=>(await n.iterator()).columnMajorBatch(e,t,Oy)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Dy((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Dy((async()=>(await t.iterator()).filter((t=>Ls((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Dy((async()=>(await t.iterator()).map((t=>Ls((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Dy((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Dy((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Dy((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new yy(s)).take(e),new Ry(n,r);var n,r,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Dy((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=tu.alea(t||Mr().toString());return Dy((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Dy((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Dy(e,t=null){return new class extends _y{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Oy(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Qr||Pr(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Qr?wu(e):_s(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function My(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&f("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}_y.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Ly=Vc;class zy extends u{nextDataId(){return zy.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new o(this,Os())}write(e,t,n){this.firstUse&&(this.firstUse=!1,q().get("IS_NODE")&&lr("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&R(n[0])){const s=n.map((e=>Lr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?oc(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>zr(e)));return ya(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ya(e.shape,e.dtype,t)}makeOutput(e,t,n){return Os().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Mr();return e(),{kernelMs:Mr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){My([e],"where");const t=this.readSync(e.dataId);return Ly(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Py(e){return(t,n,r)=>{const s=$(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function By(e,t,n){return Wy(e,Py(t),n)}function Wy(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;My(i,e);const o=a,u=o.data.get(i.dataId).values;let l;if("string"===i.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=Wc(u)}else l=u;const c=n||i.dtype,h=t(l,c,s);return o.makeTensorInfo(i.shape,c,h)}}zy.nextDataId=0,Bs("cpu",(()=>new zy),1);const Uy=By(Ye,(e=>e>=0?e:Math.exp(e)-1)),Vy={kernelName:Ye,backendName:"cpu",kernelFunc:Uy};function Gy(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Hy={kernelName:pt,backendName:"cpu",kernelFunc:Gy};function jy(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;My([s],"leakyRelu");const i=b(s.shape),o=n.data.get(s.dataId).values,u=N("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",u)}const Ky={kernelName:yt,backendName:"cpu",kernelFunc:jy};function qy(e){return(t,n,r,s,a)=>{const i=ja(t,n),o=i.length,u=O(i),l=N(a,b(i)),c=t.length,h=n.length,d=O(t),p=O(n),f=Ga(t,i),g=Ga(n,i);if(f.length+g.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<l.length;++t){const n=V(t,o,u),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=U(a,c,d),m=n.slice(-h);g.forEach((e=>m[e]=0));const b=U(m,h,p);l[t]=e(r[i],s[b])}return[l,i]}}const Xy=qy(((e,t)=>e<0?t*e:e));function Yy(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;My([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=Xy(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}const Jy={kernelName:en,backendName:"cpu",kernelFunc:Yy},Zy=By(ln,(e=>Math.max(0,e))),Qy={kernelName:ln,backendName:"cpu",kernelFunc:Zy},ev=By(gn,(e=>Math.min(Math.max(0,e),6))),tv={kernelName:gn,backendName:"cpu",kernelFunc:ev},nv=Py((e=>1/(1+Math.exp(-e)))),rv=By(Tn,(e=>1/(1+Math.exp(-e)))),sv={kernelName:Tn,backendName:"cpu",kernelFunc:rv};function av(e,t,n,r,s){if("linear"===n)return Gy({inputs:{x:t},backend:e});if("relu"===n)return Zy({inputs:{x:t},backend:e});if("elu"===n)return Uy({inputs:{x:t},backend:e});if("relu6"===n)return ev({inputs:{x:t},backend:e});if("prelu"===n)return Yy({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return jy({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return rv({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function iv(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const ov={kernelName:Ce,backendName:"cpu",kernelFunc:iv};function uv(e,t,n="float32"){if("complex64"===n)return iv({inputs:{real:uv(e,t,"float32"),imag:uv(e,t,"float32")},backend:e});const r=P(b(t),n);return e.makeTensorInfo(t,n,r)}function lv(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const cv={kernelName:on,backendName:"cpu",kernelFunc:lv};function hv(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=Or([0],n),[s,a]=qy(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function dv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return Gy({inputs:{x:s},backend:n});const e=uv(n,s.shape,s.dtype),t=dv({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=iv({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=lv({inputs:{input:s},backend:n}),t=dv({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!T(s.dtype,a)){const e=Gy({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(s.dataId).values,[o,u,l]=hv(i,s.shape,s.dtype,a);return n.makeTensorInfo(o,u,l)}const pv={kernelName:ke,backendName:"cpu",kernelFunc:dv};function fv(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;My([a,i],e);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c="string"===a.dtype?Wc(u):u,h="string"===a.dtype?Wc(l):l,d=r||a.dtype,[p,f]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=dv({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=dv({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,x]=n(a.shape,i.shape,u,l,f,g),y=o.makeTensorInfo(x,"float32",m),v=o.makeTensorInfo(x,"float32",b),w=iv({inputs:{real:y,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(l,s,u)}}}function gv(e){return(t,n,r,s,a,i)=>{const o=ja(t,n),u=b(o),l=o.length,c=O(o),h=N("float32",u),d=N("float32",u),p=Ga(t,o),f=Ga(n,o),g=oc(r,s),m=oc(a,i),x=t.length,y=O(t),v=n.length,w=O(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,r=t%m.length,s=e(g[2*n],g[2*n+1],m[2*r],m[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=V(t,l,c),r=n.slice(-x);p.forEach((e=>r[e]=0));const s=U(r,x,y),a=n.slice(-v);f.forEach((e=>a[e]=0));const i=U(a,v,w),o=e(g[2*s],g[2*s+1],m[2*i],m[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const mv=qy(((e,t)=>e+t)),bv=gv(((e,t,n,r)=>({real:e+n,imag:t+r}))),xv=fv(ne,mv,bv),yv={kernelName:ne,backendName:"cpu",kernelFunc:xv};function vv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=b(s.shape),o=I(a,i),u=b(o);f(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const wv={kernelName:cn,backendName:"cpu",kernelFunc:vv};function kv(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;My([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=i?s.shape[u-2]:s.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],d=i?s.shape[u-1]:s.shape[u-2],p=o?a.shape[l-2]:a.shape[l-1],g=s.shape.slice(0,-2),m=a.shape.slice(0,-2),x=b(g),y=b(m),v=ja(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);f(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[y,p,h]:[y,h,p],k=vv({inputs:{x:s},backend:n,attrs:{shape:i?[x,c,d]:[x,d,c]}}),I=vv({inputs:{x:a},backend:n,attrs:{shape:w}}),S=i?k.shape[1]:k.shape[2],C=i?k.shape[2]:k.shape[1],N=o?I.shape[1]:I.shape[2],$=Math.max(x,y),T=n.data.get(k.dataId).values,E=n.data.get(I.dataId).values,R=O(k.shape),A=O(I.shape),[F,_,D]=i?[R[0],1,R[1]]:[R[0],R[1],1],[M,L,z]=o?[1,A[1],A[0]]:[A[1],1,A[0]],P=C*N,B=ya([$,C,N],k.dtype),W=B.values,U=n.blockSize;for(let e=0;e<$;e++){const t=e%x,n=e%y;for(let r=0;r<C;r+=U){const s=Math.min(r+U,C);for(let a=0;a<N;a+=U){const i=Math.min(a+U,N);for(let o=0;o<S;o+=U){const u=Math.min(o+U,S);for(let l=r;l<s;l++)for(let r=a;r<i;r++){let s=0;for(let e=o;e<u;e++)s+=T[t*F+l*_+e*D]*E[e*M+r*L+n*z];W[e*P+(l*N+r)]+=s}}}}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(v,B.dtype,B.values)}const Iv={kernelName:be,backendName:"cpu",kernelFunc:kv},Sv={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const g=[];d=kv({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=xv({inputs:{a:d,b:i},backend:n}),g.push(d),d=p),c&&(f=av(n,d,c,o,h),g.push(d),d=f);for(const e of g)n.disposeIntermediateTensorInfo(e);return d}};function Cv(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Nv={kernelName:Q,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;My(t,"abs");let r=new Float32Array(b(t.shape));return r=Cv(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},$v=By(ee,(e=>Math.acos(e))),Tv={kernelName:ee,backendName:"cpu",kernelFunc:$v},Ev=By(te,(e=>Math.acosh(e))),Rv={kernelName:te,backendName:"cpu",kernelFunc:Ev},Av={kernelName:re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;My(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=ya(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function Fv(e,t,n,r,s){const a=t.length,i=b(t),o=O(t),u=O(s),l=N(n,b(s));for(let t=0;t<i;++t){const n=V(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[U(s,a,u)]=e[t]}return l}function _v(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;My(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const u=Fv(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const Dv={kernelName:Qn,backendName:"cpu",kernelFunc:_v},Ov={kernelName:se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;My(s,"all");const o=S(a,s.shape);let u=o;const l=Oo(u,s.shape.length);let c=s;null!=l&&(c=_v({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Lo(u.length,s.shape.length)),Do("all",u,c.shape.length);const[h,d]=Fo(c.shape,u),p=b(d),f=P(b(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=vv({inputs:{x:m},backend:n,attrs:{shape:_o(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},Mv={kernelName:ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;My(s,"any");const o=S(a,s.shape);let u=o;const l=Oo(u,s.shape.length);let c=s;null!=l&&(c=_v({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Lo(u.length,s.shape.length)),Do("any",u,c.shape.length);const[h,d]=Fo(c.shape,u),p=b(d),f=P(b(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=vv({inputs:{x:m},backend:n,attrs:{shape:_o(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},Lv={kernelName:ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;My(s,"argMax");let i=S(a,s.shape);const o=Oo(i,s.shape.length);let u=s;const l=[];null!=o&&(u=_v({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=Lo(i.length,u.shape.length)),i=[i[0]],Do("argMax",i,u.shape.length);const[c,h]=Fo(u.shape,i),d=P(b(c),"int32"),p=b(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},zv={kernelName:oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;My(s,"argMin");let i=S(a,s.shape);const o=Oo(i,s.shape.length);let u=s;const l=[];null!=o&&(u=_v({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=Lo(i.length,u.shape.length)),i=[i[0]],Do("argMin",i,u.shape.length);const[c,h]=Fo(u.shape,i),d=P(b(c),"int32"),p=b(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Pv=By(ue,(e=>Math.asin(e))),Bv={kernelName:ue,backendName:"cpu",kernelFunc:Pv},Wv=By(le,(e=>Math.asinh(e))),Uv={kernelName:le,backendName:"cpu",kernelFunc:Wv},Vv=By(ce,(e=>Math.atan(e))),Gv={kernelName:ce,backendName:"cpu",kernelFunc:Vv},Hv=qy(((e,t)=>Math.atan2(e,t))),jv=fv(de,Hv),Kv={kernelName:de,backendName:"cpu",kernelFunc:jv},qv=By(he,(e=>Math.atanh(e))),Xv={kernelName:he,backendName:"cpu",kernelFunc:qv};function Yv(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=ya(s.outShape,n),m=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],y=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,g=t*r[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const v=b*i-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=n+b*x;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let b=f,x=0,v=0;for(let n=w;n<k;n+=u){const s=g+n*r[1];for(let n=c;n<d;n+=l){const i=e[s+n*r[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(x+=i,v++)}if(isNaN(b))break}m[I+n*y+t]="avg"===a?x/v:b}}}return g}function Jv(e,t,n,r,s=!1,a=!1){const i=ya(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=ya(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const m=n*o-p;let b=m;for(;b<0;)b+=l;const x=Math.min(r.inHeight,h+m);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const y=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=b;n<x;n+=l){const i=n-m;for(let o=p;o<y;o+=c){const u=o-h,l=g.get(e,n,o,t);l>v&&(v=l,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+u)}}i.set(w,e,n,o,t)}}return i}function Zv(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,g=s.padInfo.front,m=s.padInfo.top,b=s.padInfo.left,x="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ya(s.outShape,n),v=y.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,y=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const C=w*i-g;let N=C;for(;N<0;)N+=l;const $=Math.min(s.inDepth,d+C),T=n+w*k;for(let n=0;n<s.outHeight;++n){const i=n*o-m;let d=i;for(;d<0;)d+=c;const g=Math.min(s.inHeight,p+i),w=T+n*I;for(let n=0;n<s.outWidth;++n){const i=n*u-b;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),m=w+n*S;let k=x,I=0,C=0;for(let n=N;n<$;n+=l){const s=y+n*r[1];for(let n=d;n<g;n+=c){const i=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[m+t]="avg"===a?I/Math.max(C,1):k}}}}return y}const Qv={kernelName:pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;My(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;f(Pi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ei(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&x(l.inShape,l.outShape))c=Gy({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=O(s.shape),r=Yv(e,s.shape,s.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},ew={kernelName:ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;My(s,"avgPool3d");const c=Ri(s.shape,a,i,1,o,u,l),h=Zv(n.data.get(s.dataId).values,s.shape,s.dtype,O(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},tw={kernelName:me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;My([s,a],"avgPool3DGrad");const c=Ri(a.shape,i,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,S=k-1-c.padInfo.left,C=w-1-c.padInfo.top,N=ya(a.shape,"float32"),$=1/(f*g*m),T=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-I,i=r-C,o=s-S;let u=0;for(let n=0;n<v;n+=b){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=x){const s=(i+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=y){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(u+=T.get(e,r,s,a,t))}}}N.set(u*$,e,n,r,s,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},nw={kernelName:fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;My([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Ei(i.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,y=x-1-c.padInfo.left,v=b-1-c.padInfo.top,w=ya(i.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,S=ya(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-y;let i=0;for(let n=0;n<b;n+=g){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=m){const s=(a+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=S.get(e,r,s,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},rw={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:u}=t;f(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),My([s,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),g=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),b=g.length,x=p.length,y=d.length,v=h.length;let w=0,k=0,I=0,S=0;for(let e=0;e<c.length;++e)m[e]=g[w++]+(c[e]-h[k++])*p[I++]/Math.sqrt(d[S++]+l),w>=b&&(w=0),k>=v&&(k=0),I>=x&&(I=0),S>=y&&(S=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function sw(e,t,n,r,s){const a=vi(r,t,n),i=b(n),o=O(r);if(a){const n=wi(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const u=ya(r,s,"string"===s?Wc(e):e),l=ya(n,s);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===s?Uc(l.values):l.values}function aw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;My(s,"slice");const[o,u]=ki(s,a,i);ui(s,o,u);const l=sw(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const iw={kernelName:Sn,backendName:"cpu",kernelFunc:aw},ow={kernelName:xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;My([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),u=Gl(s.shape,a,o),l=Hl(u.length,a.length),c=jl(s.shape,a,o),h=Kl(i,a.length),d=ql(c,i,a.length),p=vv({inputs:{x:s},backend:n,attrs:{shape:u}}),f=_v({inputs:{x:p},backend:n,attrs:{perm:l}}),g=vv({inputs:{x:f},backend:n,attrs:{shape:c}}),m=aw({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};function uw(e,t,n,r,s){const a=b(r),i=P(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function lw(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=ya([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const cw={kernelName:ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=uw(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},hw=qy(((e,t)=>e&t)),dw={kernelName:ve,backendName:"cpu",kernelFunc:fv(ve,hw)},pw={kernelName:we,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=ja(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},fw=Py((e=>Math.ceil(e))),gw=Wy(Ie,fw),mw={kernelName:Ie,backendName:"cpu",kernelFunc:gw},bw=By(Se,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),xw={kernelName:Se,backendName:"cpu",kernelFunc:bw},yw={kernelName:Ne,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(b(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function vw(e,t,n,r){const s=$(n,b(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=b(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?Wc(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function ww(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const kw={kernelName:gt,backendName:"cpu",kernelFunc:ww};function Iw(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=S(s,t[0].shape)[0];Dl(t.map((e=>e.shape)),a);let i=Ol(t.map((e=>e.shape)),a);if(0===b(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>b(e.shape)>0));if(1===o.length)return Gy({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>lv({inputs:{input:e},backend:n}))),t=o.map((e=>ww({inputs:{input:e},backend:n}))),r=Iw({inputs:e,backend:n,attrs:{axis:a}}),s=Iw({inputs:t,backend:n,attrs:{axis:a}}),i=iv({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const u=o.map((e=>{const t=b(e.shape.slice(a));return vv({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Ol(u.map((e=>e.shape)),1);const c=1===u[0].shape[0],h=vw(l,i,t[0].dtype,c),d=Ol(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const Sw={kernelName:$e,backendName:"cpu",kernelFunc:Iw};function Cw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;My([s,a],"conv2d");const h=Wi(u),d=Ai(s.shape,a.shape,i,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,v=new Xr(d.outShape,s.dtype),w=O(s.shape),k=O(a.shape),I=w[0],S=y?w[1]:w[2],C=y?w[2]:1,N=y?1:w[1],$=v.strides[0],T=y?v.strides[1]:v.strides[2],E=y?v.strides[2]:1,R=y?1:v.strides[1],A=n.data.get(s.dataId).values,F=n.data.get(a.dataId).values,_=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*$;for(let e=0;e<d.outHeight;++e){const r=n+e*T,s=e*d.strideHeight-x;for(let e=0;e<p;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){const t=r+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const r=n+e*m;if(r<0||r>=d.inWidth)continue;const s=i+r*C;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[s+e*N];for(let e=0;e<d.outChannels;++e)_[t+e*R]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,_)}const Nw={kernelName:Te,backendName:"cpu",kernelFunc:Cw},$w={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;My([s,a],"conv2dBackpropFilter");const h=Wi(u),d=Ai(s.shape,c,i,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,x=new Xr(d.filterShape,"float32"),y=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new Xr(s.shape,s.dtype,w),S=new Xr(a.shape,a.dtype,k);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/f)),a=Math.min(d.outWidth,(d.inWidth+y-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=s;e<a;++e){const n=r+e*f-y;u+=b?I.get(l,t,n,i)*S.get(l,c,e,o):I.get(l,i,t,n)*S.get(l,o,c,e)}}x.set(u,e,r,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Tw={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;My([s,a],"conv2dBackpropInput");const h=O(a.shape),d=O(s.shape);let p=Wi(l);const f=Ai(i,a.shape,o,1,u,c,!1,p),g=new Xr(f.inShape,"float32"),m=g.values,b=n.data.get(s.dataId).values,x=n.data.get(a.dataId).values,[y,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:C,inHeight:N,inWidth:$,outChannels:T,outHeight:E,outWidth:R,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const _=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===p,L=g.strides[0],z=M?g.strides[1]:g.strides[2],P=M?g.strides[2]:1,B=M?1:g.strides[1],W=d[0],U=M?d[1]:d[2],V=M?d[2]:1,G=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<C;++t)for(let n=0;n<N;++n){const r=n-_,s=Math.max(0,Math.ceil(r/A)),a=Math.min(E,(I+r)/A);for(let i=0;i<$;++i){const o=i-D,u=Math.max(0,Math.ceil(o/F)),l=Math.min(R,(S+o)/F);let c=0;for(let n=s;n<a;++n){const s=n*A-r;for(let r=u;r<l;++r){const a=W*e+U*n+V*r,i=y*(I-1-s)+v*(S-1-(r*F-o))+w*t;for(let e=0;e<T;++e)c+=b[a+G*e]*x[i+e]}}m[L*e+z*n+P*i+B*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Ew={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r;My([s,a],"conv3d");const l=Fi(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=l,b=m.front,x=m.left,y=m.top,v=new Xr(l.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=v.values,S=O(s.shape),C=O(a.shape);for(let e=0;e<l.batchSize;++e){const t=e*S[0],n=e*v.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*v.strides[1],s=e*l.strideDepth-b;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=l.inDepth)continue;const a=e*C[0],i=t+n*S[1];for(let e=0;e<l.outHeight;++e){const t=r+e*v.strides[2],n=e*l.strideHeight-y;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=a+e*C[1],o=i+r*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-x;for(let e=0;e<d;++e){const t=r+e*g;if(t<0||t>=l.inWidth)continue;const a=s+e*C[2],i=o+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=w[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Rw={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r;My([s,a],"conv3dBackpropFilterV2");const l=O(s.shape),c=O(a.shape),h=Fi(s.shape,u,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,x=new Xr(h.filterShape,"float32"),y=x.values,[v,w,k,I]=x.strides,S=n.data.get(a.dataId).values,[C,N,$,T]=c,E=n.data.get(s.dataId).values,[R,A,F,_]=l,D=h.padInfo.front,M=h.padInfo.left,L=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(h.outDepth,(h.inDepth+D-e)/d),r=e*v;for(let s=0;s<m;++s){const a=Math.max(0,Math.ceil((L-s)/p)),i=Math.min(h.outHeight,(h.inHeight+L-s)/p),o=s*w+r;for(let r=0;r<b;++r){const u=Math.max(0,Math.ceil((M-r)/f)),l=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const g=o*I+c;for(let c=0;c<h.outChannels;++c){let m=0;for(let g=0;g<h.batchSize;++g){const h=g*R,b=g*C;for(let g=t;g<n;++g){const t=(e+g*d-D)*A+h,n=g*N+b;for(let e=a;e<i;++e){const a=(s+e*p-L)*F+t,i=e*$+n;for(let e=u;e<l;++e){const t=e*T+i;m+=E[(r+e*f-M)*_+a+o]*S[t+c]}}}}y[g+c]=m}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Aw={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r;My([s],"conv3dBackpropInputV2");const l=O(s.shape),c=O(a.shape),h=Fi(u,a.shape,o,1,i),d=new Xr(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,x=n.data.get(s.dataId).values,[y,v,w,k]=l,I=n.data.get(a.dataId).values,[S,C,N,$]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:F,inDepth:_,inHeight:D,inWidth:M,outChannels:L,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=E-1-h.padInfo.front,H=R-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<F;++t)for(let n=0;n<_;++n){const r=n-G,s=Math.max(0,Math.ceil(r/W)),a=Math.min(z,(E+r)/W);for(let i=0;i<D;++i){const o=i-H,u=Math.max(0,Math.ceil(o/U)),l=Math.min(P,(R+o)/U);for(let c=0;c<M;++c){const h=c-j,d=Math.max(0,Math.ceil(h/V)),T=Math.min(B,(A+h)/V);let F=0;for(let n=s;n<a;++n){const s=n*W-r;for(let r=u;r<l;++r){const a=r*U-o;for(let i=d;i<T;++i){const o=y*e+v*n+w*r+k*i,u=S*(E-1-s)+C*(R-1-a)+N*(A-1-(i*V-h))+$*t;for(let e=0;e<L;++e)F+=x[o+e]*I[u+e]}}}p[f*e+g*n+m*i+b*c+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Fw=By(De,(e=>Math.cos(e))),_w={kernelName:De,backendName:"cpu",kernelFunc:Fw},Dw=By(Oe,(e=>Math.cosh(e))),Ow={kernelName:Oe,backendName:"cpu",kernelFunc:Dw},Mw={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=s.shape,f=a.shape[0],[g,m]=o,b=ya([f,g,m,p],"float32"),x=n.data.get(a.dataId).values,y=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=O(s.shape),k=O(b.shape);for(let e=0;e<f;e++){const t=4*e,n=x[t],r=x[t+1],s=x[t+2],a=x[t+3],i=y[e];if(i>=c)continue;const o=g>1?(s-n)*(h-1)/(g-1):0,f=m>1?(a-r)*(d-1)/(m-1):0;for(let t=0;t<g;t++){const c=g>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<m;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=l}else if("bilinear"===u){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let u=0;u<m;u++){const c=m>1?r*(d-1)+u*f:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];b.values[r]=l}continue}const h=Math.floor(c),g=Math.ceil(c),x=c-h;for(let r=0;r<p;r++){let a=r+h*w[2]+n*w[1]+i*w[0];const l=v[a];a=r+g*w[2]+n*w[1]+i*w[0];const c=v[a];a=r+h*w[2]+s*w[1]+i*w[0];const d=v[a];a=r+g*w[2]+s*w[1]+i*w[0];const p=l+(c-l)*x,f=d+(v[a]-d)*x;a=r+u*k[2]+t*k[1]+e*k[0],b.values[a]=p+(f-p)*o}}}else for(let n=0;n<m;++n){const s=m>1?r*(d-1)+n*f:.5*(r+a)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=l}continue}const o=Math.round(s),u=Math.round(c);for(let r=0;r<p;r++){const s=r+o*w[2]+u*w[1]+i*w[0],a=r+n*k[2]+t*k[1]+e*k[0];b.values[a]=v[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Lw={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;My(s,"cumprod");const u=Oo([a],s.shape.length);let l=s;null!=u&&(l=_v({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=Lo(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=us(l.dtype,"int32"),d=z(b(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=i?1:p[n];else{const r=g(e,t-1);d[n]=i?p[r]*d[r]:p[n]*d[r]}}const m=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=_v({inputs:{x:m},backend:n,attrs:{perm:Mo(u)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(l),e}return m}},zw={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;My(s,"cumsum");const u=Oo([a],s.shape.length);let l=s;null!=u&&(l=_v({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=Lo(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=us(l.dtype,"int32"),d=P(b(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=i?0:p[n];else{const r=g(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const m=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=_v({inputs:{x:m},backend:n,attrs:{perm:Mo(u)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(l),e}return m}},Pw={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=uw(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=lw(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},Bw={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;f("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*a,d=l*a,p=c/(a*a),g=n.data.get(s.dataId).values,m=new Float32Array(o*h*d*p);let b=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<d;++t){const s=Math.floor(t/a),i=(r*a+t%a)*p;for(let t=0;t<p;++t){const r=t+i+c*(s+l*(n+u*e));m[b++]=g[r]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,m)}};function Ww(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;My([s,a],"depthwiseConv2DNative");const c=O(s.shape),h=O(a.shape);let d=u;null==d&&(d=[1,1]),f(Pi(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=Ai(s.shape,a.shape,i,d,o,l,!0),{filterHeight:g,filterWidth:m,dilationHeight:b,dilationWidth:x,padInfo:y}=p,v=y.left,w=y.top,k=p.outChannels/p.inChannels,I=new Xr(p.outShape,s.dtype),S=n.data.get(s.dataId).values,C=n.data.get(a.dataId).values,N=I.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*I.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*I.strides[1],s=e*p.strideHeight-w;for(let e=0;e<g;++e){const n=s+e*b;if(n<0||n>=p.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*I.strides[2],n=e*p.strideWidth-v;for(let e=0;e<m;++e){const r=n+e*x;if(r<0||r>=p.inWidth)continue;const s=a+e*h[1],o=i+r*p.inChannels;let u=t,l=s;for(let e=0;e<p.inChannels;++e){const t=S[o+e];for(let e=0;e<k;++e)N[u+e]+=t*C[l+e];u+=k,l+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Uw={kernelName:We,backendName:"cpu",kernelFunc:Ww},Vw={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;My([s,a],"depthwiseConv2dNativeBackpropFilter");const h=Ai(s.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new Xr(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,y=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new Xr(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,I=new Xr(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((x-e)/d)),n=Math.min(h.outHeight,(h.inHeight+x-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((b-r)/p)),a=Math.min(h.outWidth,(h.inWidth+b-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/y),u=i%y;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-x;for(let e=s;e<a;++e){const n=r+e*p-b;l+=w.get(u,t,n,o)*I.get(u,c,e,i)}}m.set(l,e,r,o,u)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Gw={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;My([s,a],"depthwiseConv2DNativeBackpropInput");const h=O(s.shape),d=O(a.shape),p=Ai(c,a.shape,i,o,u,l,!0),f=new Xr(p.inShape,"float32"),g=f.values,[m,b,x]=f.strides,y=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[S,C,N]=d,{batchSize:$,filterHeight:T,filterWidth:E,inChannels:R,inHeight:A,inWidth:F,outChannels:_,outHeight:D,outWidth:M,strideHeight:L,strideWidth:z}=p,P=T-1-p.padInfo.top,B=E-1-p.padInfo.left,W=_/R;for(let e=0;e<$;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const r=n-P,s=Math.max(0,Math.ceil(r/L)),a=Math.min(D,(T+r)/L);for(let i=0;i<F;++i){const o=i-B,u=Math.max(0,Math.ceil(o/z)),l=Math.min(M,(E+o)/z);let c=0;for(let n=s;n<a;++n){const s=n*L-r;for(let r=u;r<l;++r){const a=v*e+w*n+k*r,i=S*(T-1-s)+C*(E-1-(r*z-o))+N*t;for(let e=0;e<W;++e)c+=y[a+(t*W+e)]*I[i+e]}}g[m*e+b*n+x*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Hw={kernelName:Ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=b(r.shape),a=n.data.get(r.dataId).values,i=ya([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},jw={kernelName:He,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:x,outWidth:y,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:C,dilationWidth:N,outShape:T}=Ti(r.shape,s.shape,a,i,"NHWC",o),E=b(T),R=T.length,A=$(r.dtype,E);for(let e=0;e<p;++e)for(let t=0;t<x;++t){const n=t*w-v.top;for(let a=0;a<y;++a){const i=a*k-v.left;for(let o=0;o<m;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const a=n+t*C;if(a>=0&&a<f)for(let n=0;n<S;++n){const p=i+n*N;if(p>=0&&p<g){const i=U([e,a,p,o],c,O(r.shape)),f=U([t,n,o],d,O(s.shape)),g=l[i]+h[f];g>u&&(u=g)}}}A[U([e,t,a,o],R,O(T))]=u}}}return{dataId:u.write(Or(A,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},Kw={kernelName:Ke,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=L(r.shape,l.data.get(r.dataId).values),h=L(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:g,inChannels:m,outHeight:b,outWidth:x,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:N}=Ti(r.shape,s.shape,i,o,"NHWC",u);f(a.rank===N.length,(()=>`Error in ${Ke}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const $=L(N,l.data.get(a.dataId).values),T=B(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<b;++t){const n=t*v-y.top;for(let r=0;r<x;++r){const s=r*w-y.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<k;++t){const r=n+t*S;if(r>=0&&r<p)for(let n=0;n<I;++n){const l=s+n*C;if(l>=0&&l<g){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=t,u=n)}}}T[o][u][a]+=$[e][t][r][a]}}}return{dataId:l.write(Or(T,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},qw={kernelName:je,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=L(r.shape,l.data.get(r.dataId).values),h=L(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:g,inChannels:m,outHeight:b,outWidth:x,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:N}=Ti(r.shape,s.shape,i,o,"NHWC",u);f(a.rank===N.length,(()=>`Error in ${je}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const $=L(N,l.data.get(a.dataId).values),T=B(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<b;++t){const n=t*v-y.top;for(let r=0;r<x;++r){const s=r*w-y.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let t=0;t<k;++t){const r=n+t*S;if(r>=0&&r<p)for(let n=0;n<I;++n){const l=s+n*C;if(l>=0&&l<g){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=r,u=l)}}}T[e][o][u][a]+=$[e][t][r][a]}}}return{dataId:l.write(Or(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Xw={kernelName:"Draw",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:i}=r,{contextOptions:o,imageOptions:u}=i||{},l=(null==u?void 0:u.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],g=n.data.get(s.dataId).values,m="float32"===s.dtype?255:1,b=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*l];for(let n=0;n<f;n++){const r=g[e*f+n];if("float32"===s.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===s.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*m,t[1]=r*m,t[2]=r*m):t[n]=r*m}const n=4*e;b[n+0]=Math.round(t[0]),b[n+1]=Math.round(t[1]),b[n+2]=Math.round(t[2]),b[n+3]=Math.round(t[3])}a.width=p,a.height=d;const x=new ImageData(b,p,d);return h.putImageData(x,0,0),s}},Yw=qy(((e,t)=>e*t)),Jw=gv(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Zw=fv(Vt,Yw,Jw),Qw={kernelName:Vt,backendName:"cpu",kernelFunc:Zw};function ek(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;My(s,"sum"),o="bool"===s.dtype?dv({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Gy({inputs:{x:s},backend:n});const u=o.shape.length,l=S(a,o.shape),c=Oo(l,u);let h=l,d=o;null!=c&&(d=_v({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Lo(h.length,u)),Do("sum",h,d.shape.length);const[p,f]=Fo(d.shape,h);let g=uv(n,p,us(d.dtype,"int32"));const m=b(f),x=n.data.get(g.dataId).values,y=n.data.get(d.dataId).values;for(let e=0;e<x.length;++e){const t=e*m;let n=0;for(let e=0;e<m;++e)n+=y[t+e];x[e]=n}if(i){const e=g;g=vv({inputs:{x:g},backend:n,attrs:{shape:_o(g.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),g}const tk={kernelName:An,backendName:"cpu",kernelFunc:ek},nk={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=yc(s,a.length);wc(i.length,u,a);const{path:l,steps:c}=kc(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=vc(p,u[t]);let s;Ic(e)?s=a[t]:(s=_v({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);x(s.shape,i)||(s=vv({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=Zw({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=ek({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},rk={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;My([r,s],"eluGrad");const a=new Float32Array(b(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},sk=qy(((e,t)=>e===t?1:0)),ak=fv(Qe,sk,null,"bool"),ik={kernelName:Qe,backendName:"cpu",kernelFunc:ak},ok=tc,uk=nc,lk=rc,ck=sc,hk=ac,dk=ic,pk=By(Ze,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+ok*n);return t*(1-((((dk*r+hk)*r+ck)*r+lk)*r+uk)*r*Math.exp(-n*n))})),fk={kernelName:Ze,backendName:"cpu",kernelFunc:pk},gk=Py((e=>Math.exp(e))),mk=Wy(et,gk,"float32"),bk={kernelName:et,backendName:"cpu",kernelFunc:mk};function xk(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(f(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),vv({inputs:{x:s},backend:n,attrs:{shape:o}})}const yk={kernelName:tt,backendName:"cpu",kernelFunc:xk},vk=Py((e=>Math.expm1(e))),wk=Wy(nt,vk),kk={kernelName:nt,backendName:"cpu",kernelFunc:wk},Ik=qy(((e,t)=>e/t)),Sk=fv(qe,Ik),Ck={kernelName:qe,backendName:"cpu",kernelFunc:Sk},Nk=qy(((e,t)=>e-t)),$k=gv(((e,t,n,r)=>({real:e-n,imag:t-r}))),Tk=fv(Kn,Nk,$k),Ek={kernelName:Kn,backendName:"cpu",kernelFunc:Tk};function Rk(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=b(l),h=N("float32",c),d=N("float32",c);for(let e=0;e<s;e++){const r=aw({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=aw({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=iv({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=Ak(i,t,n),p=oc(l,c);for(let t=0;t<a;t++){const n=hc(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),g=iv({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function Ak(e,t,n){const r=b(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if((o=r)&o-1){const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=fc(s*r,t,n),u=hc(e,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),dc(r,a,i,s)}return r}(oc(a,i),r,t);return uc(e)}{const s=Fk(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",Dr(r,"float32")),i=Gy({inputs:{x:a},backend:n}),u=Ck.kernelFunc({inputs:{a:e,b:a},backend:n}),l=Ck.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}var o}function Fk(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=oc(e,t),i=n/2,o=lc(a),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),d=s.makeTensorInfo(c,"float32",l),p=iv({inputs:{real:h,imag:d},backend:s}),f=cc(a),g=f.real,m=f.imag,b=[g.length],x=s.makeTensorInfo(b,"float32",g),y=s.makeTensorInfo(b,"float32",m),v=iv({inputs:{real:x,imag:y},backend:s}),w=Fk(u,l,i,r,s),k=w.real,I=w.imag,S=[k.length],C=s.makeTensorInfo(S,"float32",k),N=s.makeTensorInfo(S,"float32",I),$=iv({inputs:{real:C,imag:N},backend:s}),T=Fk(g,m,i,r,s),E=T.real,R=T.imag,A=[E.length],F=s.makeTensorInfo(A,"float32",E),_=s.makeTensorInfo(A,"float32",R),D=iv({inputs:{real:F,imag:_},backend:s}),O=pc(n,r),M=[O.real.length],L=s.makeTensorInfo(M,"float32",O.real),z=s.makeTensorInfo(M,"float32",O.imag),P=iv({inputs:{real:L,imag:z},backend:s}),B=Zw({inputs:{a:P,b:D},backend:s}),W=xv({inputs:{a:$,b:B},backend:s}),U=Tk({inputs:{a:$,b:B},backend:s}),V=lv({inputs:{input:W},backend:s}),G=lv({inputs:{input:U},backend:s}),H=ww({inputs:{input:W},backend:s}),j=ww({inputs:{input:U},backend:s}),K=Iw({inputs:[V,G],backend:s,attrs:{axis:0}}),q=Iw({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(K.dataId).values,Y=s.data.get(q.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),{real:X,imag:Y}}const _k={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=b(r.shape),a=r.shape[r.shape.length-1],i=vv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Rk(i,!1,n),u=vv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function Dk(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||F(s),o=$(i,b(r));return function(e,t){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const Ok={kernelName:st,backendName:"cpu",kernelFunc:Dk},Mk={kernelName:at,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=N(r.dtype,b(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let s=0;s<l;s++){const i=Math.round(u-e-1),o=t+n+r+s;let h=c[o];i>=0&&i<u&&(h=c[t+n+i*l+s]),a[o]=h}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Lk=Py((e=>Math.floor(e))),zk=Wy(it,Lk),Pk={kernelName:it,backendName:"cpu",kernelFunc:zk},Bk=qy(((e,t)=>Math.floor(e/t))),Wk=fv(ot,Bk,null,"int32"),Uk={kernelName:ot,backendName:"cpu",kernelFunc:Wk},Vk={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=Cw({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=vv({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});g=xv({inputs:{a:g,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else g=xv({inputs:{a:g,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=g;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=vv({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});g=av(n,g,p,e,f),n.disposeIntermediateTensorInfo(e)}else g=av(n,g,p,o,f);n.disposeIntermediateTensorInfo(e)}return g}},Gk={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=Ww({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;g=xv({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=av(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}};function Hk(e,t,n,r,s,a,i,o,u){const l=ya([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=u/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)l.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return l}const jk={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=b(r.shape),i=s.shape,o=i[i.length-1],[u,l,c,h]=Xl(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=Hk(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,a);return n.makeTensorInfo(u,r.dtype,d.values)}};function Kk(e,t,n){const r=ya(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}const qk={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;My([s,a],"gatherV2");const u=S(i,s.shape)[0],l=n.data.get(a.dataId).values,c=s.shape[u];for(let e=0;e<l.length;++e){const t=l[e];f(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=b(a.shape),p=Bc(s,a,u,h),g=vv({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=vv({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),x=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),v=Kk(n.bufferSync(g),y,x);return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,v.dtype,v.values)}},Xk=qy(((e,t)=>e>t?1:0)),Yk=fv(ht,Xk,null,"bool"),Jk={kernelName:ht,backendName:"cpu",kernelFunc:Yk},Zk=qy(((e,t)=>e>=t?1:0)),Qk=fv(dt,Zk,null,"bool"),eI={kernelName:dt,backendName:"cpu",kernelFunc:Qk},tI={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=b(r.shape),a=r.shape[r.shape.length-1],i=vv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Rk(i,!0,n),u=vv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},nI=By(mt,(e=>Number.isFinite(e)?1:0),"bool"),rI={kernelName:mt,backendName:"cpu",kernelFunc:nI},sI=By(bt,(e=>Math.abs(e)===1/0?1:0),"bool"),aI={kernelName:bt,backendName:"cpu",kernelFunc:sI},iI=By(xt,(e=>Number.isNaN(e)?1:0),"bool"),oI={kernelName:xt,backendName:"cpu",kernelFunc:iI},uI=qy(((e,t)=>e<t?1:0)),lI=fv(vt,uI,null,"bool"),cI={kernelName:vt,backendName:"cpu",kernelFunc:lI},hI=qy(((e,t)=>e<=t?1:0)),dI=fv(wt,hI,null,"bool"),pI={kernelName:wt,backendName:"cpu",kernelFunc:dI};function fI(e,t,n){const r=(t-e)/(n-1),s=P(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const gI={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=fI(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},mI=Py((e=>Math.log(e))),bI=Wy(It,mI),xI={kernelName:It,backendName:"cpu",kernelFunc:bI},yI=By(St,(e=>Math.log1p(e))),vI={kernelName:St,backendName:"cpu",kernelFunc:yI},wI=qy(((e,t)=>e&&t)),kI=fv(Ct,wI,null,"bool"),II={kernelName:Ct,backendName:"cpu",kernelFunc:kI},SI=By(Nt,(e=>e?0:1),"bool"),CI={kernelName:Nt,backendName:"cpu",kernelFunc:SI},NI=qy(((e,t)=>e||t)),$I=fv($t,NI,null,"bool"),TI={kernelName:$t,backendName:"cpu",kernelFunc:$I},EI={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r;My(s,"LRN");const l=s.shape[3],c=l-1,h=n.data.get(s.dataId).values,d=b(s.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},RI={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;My(i,"LRNGrad");const h=b(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,g=n.data.get(a.dataId).values,m=new Float32Array(h),x=h;for(let e=0;e<x;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=l*s+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*g[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],m[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,m)}};function AI(e,t,n,r){const s=N(r,b(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}function FI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let u=s.shape;const l=u.length,c=S(a,u);let h=c;const d=Oo(h,l);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=Fv(p,u,s.dtype,d,e),h=Lo(h.length,l),u=e}My(s,"max"),Do("max",h,l);const[f,g]=Fo(u,h),m=AI(p,b(g),f,s.dtype),x=o.write(m,f,s.dtype);let y=f;return i&&(y=_o(f,c)),{dataId:x,shape:y,dtype:s.dtype}}const _I={kernelName:Rt,backendName:"cpu",kernelFunc:FI},DI=qy(((e,t)=>Math.max(e,t))),OI=fv(At,DI),MI={kernelName:At,backendName:"cpu",kernelFunc:OI},LI={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;My(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;f(Pi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ei(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&x(l.inShape,l.outShape))c=Gy({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=O(s.shape),r=Yv(e,s.shape,s.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},zI={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;My(s,"maxPool3d");const c=Ri(s.shape,a,i,1,o,u,l),h=Zv(n.data.get(s.dataId).values,s.shape,s.dtype,O(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},PI={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;My([s,a],"maxPool3DGrad");const c=Ri(a.shape,i,o,1,u,l),h=function(e,t){const n=ya(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const x=b*r-d;let y=x;for(;y<0;)y+=i;const v=Math.min(t.inDepth,l+x);for(let r=0;r<t.outHeight;++r){const l=r*s-p;let d=l;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,C=-1;for(let t=y;t<v;t+=i){const n=t-x;for(let r=d;r<w;r+=o){const s=r-l;for(let a=k;a<I;a+=u){const i=a-p,o=e.get(g,t,r,a,m);o>=S&&(S=o,C=n*c*h+s*c+i)}}}n.set(C,g,b,r,s,m)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,g=c.dilationDepth,m=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,y=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=x-1-c.padInfo.front,k=v-1-c.padInfo.left,I=y-1-c.padInfo.top,S=ya(a.shape,"float32"),C=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-w,i=r-I,o=s-k;let u=0;for(let n=0;n<x;n+=g){const r=(a+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<y;s+=m){const a=(i+s)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=b){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=x*y*v-1-h.get(e,r,a,l,t)===n*y*v+s*v+i?1:0;0!==d&&(u+=C.get(e,r,a,l,t)*d)}}}S.set(u,e,n,r,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},BI={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;My([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Ei(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=ya(d.outShape,o.dtype,Jv(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=y-1-d.padInfo.top,I=ya(o.shape,"float32"),S=n.data.get(s.dataId).values,C=ya(s.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,a=r-w;let i=0;for(let n=0;n<y;n+=b){const r=(s+n)/g;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=x){const o=(a+s)/m;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=y*v-1-f.get(e,r,o,t)===n*v+s?1:0;0!==u&&(i+=C.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},WI={kernelName:Mt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;My(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Ei(r.shape,s,a,[1,1],i),[h,d]=function(e,t,n,r,s){const a=Yv(e,0,n,O(t),s,"max"),i=Jv(e,t,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),p=u.write(h,c.outShape,r.dtype),f=u.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},UI={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=S(a,s.shape),u=b(Fo(s.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=dv({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=Sk({inputs:{a:h,b:c},backend:n});l.push(d);const p=ek({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},VI={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;My(s,"min");const o=S(a,s.shape);let u=o;const l=Oo(u,s.shape.length);let c=s;null!=l&&(c=_v({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Lo(u.length,s.shape.length)),Do("min",u,c.shape.length);const[h,d]=Fo(c.shape,u),p=b(d),f=P(b(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=vv({inputs:{x:m},backend:n,attrs:{shape:_o(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},GI=qy(((e,t)=>Math.min(e,t))),HI=fv(Pt,GI),jI={kernelName:Pt,backendName:"cpu",kernelFunc:HI},KI={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;My(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=O(s.shape),f=b(o),g=o.length,m=O(o),x=N(s.dtype,f);for(let e=0;e<f;e++){let t=V(e,g,m);for(let e=0;e<g;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=U(t,d,p);x[e]=h[n]}return{dataId:n.write(x,o,s.dtype),shape:o,dtype:s.dtype}}},qI=qy(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),XI=fv(Wt,qI),YI={kernelName:Wt,backendName:"cpu",kernelFunc:XI};function JI(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=S([o],s.shape),l=FI({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=_o(l.shape,u),h=vv({inputs:{x:l},backend:n,attrs:{shape:c}}),d=Tk({inputs:{a:s,b:h},backend:n}),p=mk({inputs:{x:d},backend:n}),f=ek({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),g=vv({inputs:{x:f},backend:n,attrs:{shape:c}}),m=Sk({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const ZI={kernelName:Dn,backendName:"cpu",kernelFunc:JI},QI={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;My(s,"multinomial");const u=o?s:JI({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,a],p=P(b(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=tu.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}};function eS(e,t,n){const r=Dr(-1,n);return Yw([],t,r,e,n)}const tS={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;My(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=eS(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},nS=sl,rS={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;My(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=nS(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},sS=al,aS={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;My(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=sS(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},iS=il,oS={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;My(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=u,g=l,{selectedIndices:m,selectedScores:b}=iS(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},uS=qy(((e,t)=>e!==t?1:0)),lS=fv(Ht,uS,null,"bool"),cS={kernelName:Ht,backendName:"cpu",kernelFunc:lS},hS={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:u}=r;My(s,"oneHot");const l=b(s.shape),c=new Float32Array(l*i);c.fill(u);const h=n.data.get(s.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...s.shape,i],a,c)}};function dS(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=lv({inputs:{input:r},backend:n}),t=dS({inputs:{x:e},backend:n}),s=ww({inputs:{input:r},backend:n}),a=dS({inputs:{x:s},backend:n}),i=iv({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return Dk({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const pS={kernelName:rr,backendName:"cpu",kernelFunc:dS},fS={kernelName:Xt,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=lv({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=ww({inputs:{input:s},backend:r}),i=dS({inputs:{x:a},backend:r}),o=iv({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return Dk({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function gS(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return xk({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{g(a,e.shape,"All tensors passed to stack must have matching shapes"),f(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=Iw({inputs:t.map((e=>{const t=xk({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const mS={kernelName:Jt,backendName:"cpu",kernelFunc:gS},bS={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;My(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(s.dataId).values,c=b(s.shape),h=s.shape.length,d=O(s.shape),p=b(o),f=o.length,g=O(o),m=N(s.dtype,p);0!==i&&m.fill(i);for(let e=0;e<c;e++)m[U(V(e,h,d).map(((e,t)=>e+u[t])),f,g)]=l[e];return{dataId:n.write(m,o,s.dtype),shape:o,dtype:s.dtype}}},xS=qy(((e,t)=>Math.pow(e,t))),yS=fv(Qt,xS),vS={kernelName:Qt,backendName:"cpu",kernelFunc:yS};function wS(e,t,n,r){const[s,a]=Fo(e,r),i=us(t,"int32"),o=P(b(s),i),u=b(a);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const kS={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;My(s,"prod");const o=s.shape.length,u=S(a,s.shape),l=Oo(u,o);let c=u,h=s;const d=[];null!=l&&(h=_v({inputs:{x:s},backend:n,attrs:{perm:l}}),d.push(h),c=Lo(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=wS(h.shape,h.dtype,p,c);let b=g;return i&&(b=_o(g,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}};function IS(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function SS(e,t,n,r,s,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=V(r,t.length,O(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:h}=function(e,t,n,r){const s=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let i=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[i];for(let e=i;e<u;++e)o[s].push(r[e+1]+t)}i=r[i],u=r[u]}u!==i&&(s.push([i,u]),a+=u-i)}return{outSplits:o,valueSlices:s,numValues:a}}(a,i,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=$("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(l),p=function(e,t,n,r,s){const a=t.slice();a[0]=s;const i=$(n,b(a)),o=e.length;return function(e,t,n,r,s,a){const i=IS(t,2)[1],o=IS(a,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[u*o+t]=e[n*i+t];++u}}(e,t,r,0===o?0:o/t[0],i,a),[i,a]}(n,r,s,c,h);return[d,p[0],p[1]]}const CS={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,u=s.map((e=>n.data.get(e.dataId).values)),l=s.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[d,p,f]=SS(u,l,c,a.shape,a.dtype,h,i.shape),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,a.dtype,p);return g.concat([m])}},NS=2147483647;function $S(e,t,n,r,s,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,u=0===s.length,l=0===i.length,c=[];o||c.push(t[0]),u||c.push(s[0]),l||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=$("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],s=u?r[0]:r[t],i=l?a[0]:a[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&s<n||i<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/i)),c>NS)throw new Error(`Requires ((limit - start) / delta) <= ${NS}`);d[t+1]=d[t]+c}const p=$(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=o?e[0]:e[t];const s=l?a[0]:a[t];for(let e=0;e<n;++e)p[f++]=r,r+=s}return[d,p]}const TS={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=$S(i,r.shape,r.dtype,o,s.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};var ES=Ml;class RS{constructor(e,t,n,r,s,a,i,o,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=zl(l),this.raggedRank=Pl(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===ES.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===ES.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case ES.VALUE_ROWIDS:return RS.getMaxWidthValueRowID(t);case ES.ROW_SPLITS:return RS.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${ES[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return FS(e,n)}calculateOutputSize(e){const t=this.valuesShape;Bl(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Ll(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return f(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),u=t[i];-1===u&&(o=0);for(let e=0;e<o;++e)a.push(u),u+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];a.push(u);for(let l=1;l<s;++l){const s=e[l];if(s===o)u>=0&&(++i,i<r?u+=n:u=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);u=t[s]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case ES.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case ES.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${ES[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case ES.FIRST_DIM_SIZE:return e[0];case ES.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case ES.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${ES[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=FS(t,!1),s=$(this.valuesDType,b(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let i=r.slice();i=i.slice(e+1);const o=b(i),u=t.length;let l=this.defaultValue;if(l.length!==o&&1!==l.length){const e=this.defaultValueShape;Ls((()=>{const t=Vi(l,e),n=Yi(t,i);l=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=u;++e){let r=e<u?t[e]:-1;if(r!==d){if(h<d){const e=s.subarray(c*o);AS(a.subarray(h*o),e,(d-h)*o)}if(e>=u){const e=n.length;r=Math.floor(e/o)}if(r>d)if(1===this.defaultValue.length)a.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;)AS(a.slice(d*o),l,o),++d;r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function AS(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function FS(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function _S(e,t,n,r,s,a,i,o,u,l){return new RS(e,t,n,r,s,a,i,o,u,l).compute()}const DS={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,g]=_S(l,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,u);return n.makeTensorInfo(f,a.dtype,g)}};function OS(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return P(0,r);const s=P(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const MS={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=OS(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},LS=By(un,(e=>1/e)),zS={kernelName:un,backendName:"cpu",kernelFunc:LS},PS={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;My(s,"resizeBilinear");const u=O(s.shape),[l,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(b([h,l,c,f])),x=[a&&l>1?d-1:d,a&&c>1?p-1:p],y=[a&&l>1?l-1:l,a&&c>1?c-1:c];let v=0;const w=x[0]/y[0],k=x[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+a*u[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+a*u[2],b=l+a*u[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],a=t+(g[d+e]-t)*r,i=a+(n+(g[b+e]-n)*r-a)*s;m[v++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",m)}},BS={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;My([a,s],"resizeBilinearGrad");const o=O(s.shape),[u,l,c,h]=s.shape,[,d,p]=a.shape,f=new Float32Array(u*l*c*h),g=[i&&d>1?l-1:l,i&&p>1?c-1:c],m=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=g[0]/m[0],x=g[1]/m[1],y=n.data.get(a.dataId).values;let v=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),a=t+r*o[1],i=t+s*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,p=a+n*o[2],g=a+r*o[2],m=i+n*o[2],b=i+r*o[2],w=d*l,k=d*s,I=u*l,S=u*s;for(let e=0;e<h;e++){const t=y[v++];f[p+e]+=t*w,f[g+e]+=t*k,f[m+e]+=t*I,f[b+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},WS={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;My(s,"resizeNearestNeighbor");const u=O(s.shape),[l,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(h*l*c*f),b=[a&&l>1?d-1:d,a&&c>1?p-1:p],x=[a&&l>1?l-1:l,a&&c>1?c-1:c],y=b[0]/x[0],v=b[1]/x[1];let w=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?y*(e+.5):y*e;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*u[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=g[r+e];m[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],s.dtype,m)}},US={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;My([a,s],"resizeNearestNeighborGrad");const o=O(s.shape),u=O(a.shape),[l,c,h,d]=s.shape,[,p,f]=a.shape,g=new Float32Array(l*c*h*d),m=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],x=[i&&p>1?p-1:p,i&&f>1?f-1:f],y=b[0]/x[0],v=b[1]/x[1],w=1/y,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*o[2],l=Math.floor(r*k),b=Math.floor(l-S/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const l=a+s;if(l<0||l>=p)continue;const d=t+l*u[1],g=l*y;if(e===Math.min(c-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<S;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*u[2],a=t*v;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=m[s+n])}}g[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}},VS={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;My(s,"reverse");const i=s.shape.length,o=S(a,s.shape);if(0===i)return Gy({inputs:{x:s},backend:n});const u=new Xr(s.shape,s.dtype),l=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},GS={kernelName:ar,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=N(r.dtype,b(r.shape)),[l,c,h,d]=r.shape,[p,f]=Vl(i,c,h),g=Math.sin(s),m=Math.cos(s),x=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[l,e,r,i],b=o[2],y=o[1];let v=(b-p)*m-(y-f)*g,w=(b-p)*g+(y-f)*m;v=Math.round(v+p),w=Math.round(w+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(k=x[t+w*(h*d)+v*d+i]),u[t+n+s+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},HS=By(bn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),jS={kernelName:bn,backendName:"cpu",kernelFunc:HS},KS=Py((e=>1/Math.sqrt(e))),qS=Wy(xn,KS),XS={kernelName:xn,backendName:"cpu",kernelFunc:qS};function YS(e,t,n,r,s,a,i,o,u,l){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return ya(n,t.dtype);const p=u instanceof Xr?u:ya(c,t.dtype);"string"==typeof u||"number"==typeof u?p.values.fill(u):"boolean"==typeof u&&p.values.fill(+u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),u+=n*o[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?p.values[u*s+n]+=d[e*s+n]:p.values[u*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const JS={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Zl(0,s,i),d=YS(n.bufferSync(s),n.bufferSync(a),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function ZS(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function QS(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const eC={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(e,t,n,r,s,a){const i=$("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),u=o*s;for(let e=0;e<s;++e)i[u+e]="left"===a?ZS(n,t[e+u]):QS(n,t[e+u])}return i}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},tC={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;My([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=us(s.dtype,a.dtype),h=P(b(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:b(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(s.shape,c,h)}},nC=Ql,rC=ec,sC=By(In,(e=>e>=0?rC*e:nC*(Math.exp(e)-1))),aC={kernelName:In,backendName:"cpu",kernelFunc:sC},iC=By($n,(e=>e<0?-1:e>0?1:0)),oC={kernelName:$n,backendName:"cpu",kernelFunc:iC},uC=By(Cn,(e=>Math.sin(e))),lC={kernelName:Cn,backendName:"cpu",kernelFunc:uC},cC=By(Nn,(e=>Math.sinh(e))),hC={kernelName:Nn,backendName:"cpu",kernelFunc:cC},dC=Math.log(1.1920928955078125e-7)+2,pC=By(En,(e=>{const t=e>-dC,n=e<dC,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),fC={kernelName:En,backendName:"cpu",kernelFunc:pC},gC={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;My([s],"spaceToBatchND");const o=b(a),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=bS.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Gl(l.shape,a,o,!1),h=Hl(c.length,a.length,!1),d=jl(l.shape,a,o,!1),p=vv({inputs:{x:l},backend:n,attrs:{shape:c}}),f=_v({inputs:{x:p},backend:n,attrs:{perm:h}}),g=vv({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}};function mC(e,t,n,r,s,a,i){const o=t[0],u=a[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(Nc(o));return[$(n,0),[0,h],$(s,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error($c(t,n));if(n>=u)throw new Error(Tc(t,n,u));++f[n],d=d&&n>=p,p=n}let g=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,g=g&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(g&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],a=$(n,t*h),d=$(s,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],i=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=r[t],c[t]=i}for(let e=0;e<u;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[t,h],d,l,c]}}const bC={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,g]=mC(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}};function xC(e,t,n,r,s){const a=b(r),i=t[0],o=s.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(Ec(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(Rc(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/l);if(l*e!==a)throw new Error(Fc(r,u));u[c]=e}if(b(u)!==a)throw new Error(_c(r,u));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=$(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],u]}const yC={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=xC(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function vC(e,t,n,r,s,a=!1,i=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=$(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,g=0,m=s[p];for(;;){let t=0;if(f<o){if(t=s[f],m===t){++f;continue}if(m>=t)throw new Error("segment ids are not increasing")}if(m<0||m>=c)throw new Error(Mc(m,c));m>g&&d.fill(i,g*l,m*l);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(Lc(t,r[t],u[0]));for(let t=0;t<l;t++)d[m*l+t]+=e[n*l+t]}if(a)for(let e=0;e<l;e++)d[m*l+e]/=f-p;if(p=f,++f,g=m+1,m=t,f>o)break}return g<c&&d.fill(i,g*l,c*l),[d,h]}const wC={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=vC(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},kC={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=vC(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},IC={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Zl(0,s,o),p=!1,f=n.bufferSync(s);let g;switch(a.dtype){case"bool":g=YS(f,n.bufferSync(a),o,d,c,l,u,h,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":case"int32":g=YS(f,n.bufferSync(a),o,d,c,l,u,h,n.data.get(i.dataId).values[0],p);break;case"string":g=YS(f,n.bufferSync(a),o,d,c,l,u,h,zr(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,g.dtype,g.values)}},SC={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=S(i,s.shape)[0],u=Cc(s,a,o),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=aw({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},CC=Py((e=>Math.sqrt(e))),NC=By(Rn,(e=>Math.sqrt(e))),$C={kernelName:Rn,backendName:"cpu",kernelFunc:NC},TC={kernelName:Wn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;My(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},EC=qy(((e,t)=>{const n=e-t;return n*n})),RC=fv(Bn,EC),AC={kernelName:Bn,backendName:"cpu",kernelFunc:RC},FC=Py(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),_C={kernelName:Un,backendName:"cpu",kernelFunc:Wy(Un,FC)},DC=By(sr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),OC={kernelName:sr,backendName:"cpu",kernelFunc:DC};function MC(e,t,n,r){const s=ya(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const LC={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;My(s,"stridedSlice");const{finalShapeSparse:p,finalShape:g,isIdentity:m,sliceDim0:b,isSimpleSlice:x,begin:y,end:v,strides:w}=Ii(s.shape,a,i,o,u,l,c,h,d);let k;if(m)k=vv({inputs:{x:s},backend:n,attrs:{shape:g}});else if(b||x){f(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=ci(y,v,w),t=aw({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});k=vv({inputs:{x:t},backend:n,attrs:{shape:g}}),n.disposeIntermediateTensorInfo(t)}else{const e=MC(p,n.bufferSync(s),w,y);k=n.makeTensorInfo(g,e.dtype,e.values)}return k}};class zC{constructor(e,t,n,r,s,a){this.separator=Lr(e),this.nGramWidths=t,this.leftPad=Lr(n),this.rightPad=Lr(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(s-(i+1))),c=a-(u+l),h=t+(u>0?0:i-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const g=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)g(this.leftPad),g(this.separator);for(let t=0;t<c-1;++t)g(e[h+t]),g(this.separator);if(c>0){g(e[h+c-1]);for(let e=0;e<l;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<l-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=$("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,u,a),s+=u})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,u=1;this.createNGrams(e,r,i,s,u,o)}}return[i,a]}}function PC(e,t,n,r,s,a,i,o){return new zC(n,r,s,a,i,o).compute(e,t)}const BC={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,g]=PC(d,p,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};function WC(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function UC(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=s.length;WC(e[u],t,n,s);const l=s.length-r;o[u]=l,a+=l,i=Math.max(i,l)}const u=$("int32",2*a),l=new Array(a),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=s[h],++h;return[u,l,c]}const VC={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=UC(o,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function GC(e,t){const n=$("int32",e.length);for(let r=0;r<e.length;++r)n[r]=_r(e[r]).modulo(t).getLowBitsUnsigned();return n}const HC={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=GC(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},jC=By(qn,(e=>Math.tan(e))),KC={kernelName:qn,backendName:"cpu",kernelFunc:jC},qC=By(Xn,(e=>Math.tanh(e))),XC={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:u,strides:l,outputSize:c}=Zl(0,s,r.shape),h=n.bufferSync(s),d=n.bufferSync(a),p=n.bufferSync(r),f=YS(h,d,r.shape,c,u,o,i,l,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};function YC(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=ya(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const JC={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;My(s,"tile");const i=YC(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},ZC=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function QC(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);QC(e,t,Math.max(n,Math.floor(t-a*o/s+u)),Math.min(r,Math.floor(t+(s-a)*o/s+u)))}const s=e[t];let a=n,i=r;for(p(e,n,t),ZC(e[r],s)>0&&p(e,n,r);a<i;){for(p(e,a,i),a++,i--;ZC(e[a],s)<0;)a+=1;for(;ZC(e[i],s)>0;)i-=1}0===ZC(e[n],s)?p(e,n,i):(i+=1,p(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function eN(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],u=N(n,i*r),l=N("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(QC(i,r),i=i.slice(0,r)),s&&i.sort(ZC);const c=t*r,h=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[ya(c,n,u),ya(c,"int32",l)]}const tN={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;My(s,"topk");const o=n.data.get(s.dataId).values,[u,l]=eN(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},nN={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=s.shape,[f,g]=null!=l?l:[h,d],m=[c,f,g,p],x=O(s.shape),y=x[0],v=x[1],w=x[2],k=O(m),I=k[0],S=k[1],C=k[2],$=N(s.dtype,b(m));$.fill(u);const T=r.data.get(s.dataId).values,E=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?E:E.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<g;++r)for(let s=0;s<p;++s){let a;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,p=(t[3]*r+t[4]*n+t[5])/l,f=rN(c,d,o),g=rN(p,h,o);switch(i){case"nearest":a=aN(T,h,d,y,v,w,e,g,f,s,u);break;case"bilinear":a=iN(T,h,d,y,v,w,e,g,f,s,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}$[e*I+n*S+r*C+s]=a}return r.makeTensorInfo(m,s.dtype,$)}return{dataId:r.write($,m,s.dtype),shape:s.shape,dtype:s.dtype}}};function rN(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return h(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return h(0,n,t-1)}(e,t);case"nearest":return function(e,t){return h(0,e,t-1)}(e,t);default:return e}}function sN(e,t,n,r,s,a,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*s+u*a+l]:c}function aN(e,t,n,r,s,a,i,o,u,l,c){return sN(e,t,n,r,s,a,i,Math.round(o),Math.round(u),l,c)}function iN(e,t,n,r,s,a,i,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*sN(e,t,n,r,s,a,i,h,d,l,c)+(u-d)*sN(e,t,n,r,s,a,i,h,f,l,c))+(o-h)*((f-u)*sN(e,t,n,r,s,a,i,p,d,l,c)+(u-d)*sN(e,t,n,r,s,a,i,p,f,l,c))}function oN(e,t,n,r){const s=S(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i=new Map,o=new Int32Array(n[s]),u=new Xr(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}const r=i.get(n);if(null!=r)o[t]=r;else{const e=i.size;i.set(n,e),o[t]=e,l.push(t)}}const h=a.slice();h[1]=i.size;const d=new Xr(h,r);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const uN={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;My(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=oN(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},lN={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==a&&(u[l++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=aw({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=vv({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}},cN={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;My(s,"unsortedSegmentSum");const o=[],u=[],l=s.shape.length-a.shape.length;let c=a;for(let e=0;e<l;++e){const t=xk({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=Dr(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=ak({inputs:{a:r,b:c},backend:n}),i=dv({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=Zw({inputs:{a:i,b:s},backend:n}),h=ek({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(a),u.push(i),u.push(l),u.push(h)}const h=gS({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},hN=[Sv,Nv,Tv,Rv,yv,Av,Ov,Mv,Lv,zv,Bv,Uv,Gv,Kv,Xv,Qv,ew,tw,nw,Iv,rw,ow,cw,dw,pw,pv,mw,xw,ov,yw,Sw,Nw,$w,Tw,Ew,Rw,Aw,_w,Ow,Mw,Lw,zw,Pw,Bw,Uw,Vw,Gw,Hw,jw,Kw,qw,Xw,nk,Vy,rk,ik,fk,bk,yk,kk,_k,Ok,Mk,Pk,Uk,Vk,Gk,jk,qk,Jk,eI,Hy,tI,kw,rI,aI,oI,Ky,cI,pI,gI,xI,vI,II,CI,TI,EI,RI,_I,MI,LI,zI,PI,BI,WI,UI,VI,jI,KI,YI,QI,Qw,tS,rS,aS,oS,cS,hS,fS,mS,bS,vS,Jy,kS,CS,TS,DS,MS,cv,Ck,zS,Qy,tv,wv,PS,BS,WS,US,VS,GS,jS,XS,JS,eC,tC,aC,sv,oC,lC,hC,iw,ZI,fC,gC,bC,yC,wC,kC,IC,SC,$C,TC,AC,_C,OC,LC,BC,VC,HC,Ek,tk,KC,{kernelName:Xn,backendName:"cpu",kernelFunc:qC},XC,JC,tN,nN,Dv,uN,lN,cN,pS];for(const e of hN)mr(e);const dN={},pN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function fN(e,t){if(!(e in dN)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(q().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete dN[e]}),!1),q().getBool("SOFTWARE_WEBGL_ENABLED")&&(pN.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",pN)||n.getContext("experimental-webgl",pN):n.getContext("webgl2",pN)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;dN[e]=n}const n=dN[e];return null==n||n.isContextLost()?(delete dN[e],fN(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),dN[e])}var gN,mN,bN;function xN(e,t){return[t,e]}function yN(e){const t=b(e);return v(Math.ceil(t/4))}function vN(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function wN(e,t){const n=e;let r,s,a,i,o,u,l,c,h,d;return 2===q().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function kN(e,t){const n=t();return q().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function IN(e){return!!(q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function SN(e,t){return _N(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(gN||(gN={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(mN||(mN={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(bN||(bN={}));const CN=/ERROR: [0-9]+:([0-9]+):/g;function NN(e,t){const n=CN.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>w((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${w(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function $N(e,t){if(kN(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function TN(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(kN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),kN(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),kN(e,(()=>e.enableVertexAttribArray(o))),!0)}function EN(e,t,n,r){kN(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),kN(e,(()=>e.activeTexture(e.TEXTURE0+n))),kN(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),kN(e,(()=>e.uniform1i(n,r)))}function RN(e,t,n){kN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),kN(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function AN(e,t){kN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),kN(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function FN(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function _N(e,t,n){const r=kN(e,(()=>t()));if(null==r)throw new Error(n);return r}function DN(e,t=2){return b(e.slice(0,e.length-t))}function ON(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function MN(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[DN(e),...ON(e)]),t}function LN(e){return e%2==0}function zN(e,t){if(x(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(LN(n)&&LN(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&LN(e[0])&&LN(t[0])}let PN,BN;function WN(e,t){return null!=e.getExtension(t)}function UN(e){try{if(null!=fN(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function VN(e){const t=wN(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function GN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&f("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const HN=q();function jN(){let e,t,n,r,s,a,i,o,u,l;return 2===q().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o=q().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function KN(e,t,n="index"){const r=O(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function qN(e,t,n="index"){const r=O(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function XN(e){const t=O(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}HN.registerFlag("HAS_WEBGL",(()=>HN.getNumber("WEBGL_VERSION")>0)),HN.registerFlag("WEBGL_VERSION",(()=>UN(2)?2:UN(1)?1:0)),HN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),HN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===HN.get("WEBGL_VERSION"))),HN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),HN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),HN.registerFlag("WEBGL_PACK",(()=>HN.getBool("HAS_WEBGL"))),HN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>HN.getBool("WEBGL_PACK"))),HN.registerFlag("WEBGL_PACK_CLIP",(()=>HN.getBool("WEBGL_PACK"))),HN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>HN.getBool("WEBGL_PACK"))),HN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>HN.getBool("WEBGL_PACK"))),HN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>HN.getBool("WEBGL_PACK"))),HN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>HN.getBool("WEBGL_PACK"))),HN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>HN.getBool("WEBGL_PACK"))),HN.registerFlag("WEBGL_PACK_REDUCE",(()=>HN.getBool("WEBGL_PACK"))),HN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>HN.getBool("WEBGL_PACK"))),HN.registerFlag("WEBGL_CONV_IM2COL",(()=>HN.getBool("WEBGL_PACK"))),HN.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>HN.getBool("WEBGL_PACK"))),HN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==PN){const t=fN(e);PN=t.getParameter(t.MAX_TEXTURE_SIZE)}return PN}(HN.getNumber("WEBGL_VERSION")))),HN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==BN){const t=fN(e);BN=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,BN)}(HN.getNumber("WEBGL_VERSION")))),HN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=HN.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=fN(e);return t=WN(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:WN(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),HN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>HN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ks())),HN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=fN(e);if(1===e){if(!WN(t,"OES_texture_float"))return!1}else if(!WN(t,"EXT_color_buffer_float"))return!1;return VN(t)}(HN.getNumber("WEBGL_VERSION")))),HN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!HN.getBool("WEBGL_FORCE_F16_TEXTURES")&&HN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),HN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=fN(e);if(1!==e){if(WN(t,"EXT_color_buffer_float"))return VN(t);const e="EXT_color_buffer_half_float";if(WN(t,e)){const n=t.getExtension(e);return function(e,t){const n=wN(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!WN(t,"OES_texture_float")&&!!WN(t,"WEBGL_color_buffer_float")&&VN(t)}(HN.getNumber("WEBGL_VERSION")))),HN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=HN.getNumber("WEBGL_VERSION"))&&null!=fN(e).fenceSync;var e})),HN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>HN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),HN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),HN.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ks()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),HN.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),HN.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),HN.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),HN.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),HN.registerFlag("WEBGL_EXP_CONV",(()=>!1)),HN.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>HN.getBool("IS_TEST"))),HN.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),HN.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),HN.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),HN.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const YN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:JN}=a;function ZN(e,t,n){const r=[];if(e.forEach((e=>{const t=b(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=u$(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?e$(e,r):QN(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=JN(e.shapeInfo.logicalShape,t.logicalShape),u=o$(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=1===b(e.shapeInfo.logicalShape),g=1===b(t.logicalShape);if(1!==a||f||g){if(f&&!g)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&x(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=o$(u),c=JN(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=jN(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${t$}\n    ${n$}\n    ${r$}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(x(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return x(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${qN(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=KN(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${qN(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=KN(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=KN(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=KN(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=s$),[h,u,c,s,l,a,n.userCode].join("\n")}function QN(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=a$(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${i$(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=a$(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&x(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=C(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${QN(l$(e,u),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${c$(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${i$(e)}\n      }\n    `;const l=a[0],c=a[1],h=a$(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=C(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${QN(l$(e,l),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${c$(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${i$(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=a$(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:u,keptDims:l}=C(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${QN(l$(e,u),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${c$(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${i$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,m=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=a$(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=C(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${QN(l$(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${c$(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${i$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${a$(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=C(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${QN(l$(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${c$(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${i$(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${a$(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function e$(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${jN().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=jN();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],u=jN();if(null!=a&&x(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${e$(l$(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${c$(a,r)});\n        }\n      `}const o=jN();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=jN();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=a[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const t$="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",n$="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",r$="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",s$="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function a$(e){return`offset${e}`}function i$(e){const t=e.name,n=b(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function o$(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function u$(e,t,n){const{newShape:r,keptDims:s}=C(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,u=!e&&a>1&&!x(t,n)&&r.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:s}}function l$(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function c$(e,t){return t.map((t=>e[t])).join(", ")}function h$(e,t,n){const r=[],s=[];let a,i,o,u=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===q().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const s of t.variableNames){const a={name:s,uniform:e.getUniformLocation(n,s,c),offset:e.getUniformLocation(n,`offset${s}`,c)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${s}Shape`,c),a.texShape=e.getUniformLocation(n,`${s}TexShape`,c)),r.push(a)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:l,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}}function d$(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!x(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!x(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function p$(e){return q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class f${constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=gN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=jN();this.outputShape=e,this.enableShapeUniforms=p$(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?qN(["r","c","d"],e):KN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class g${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=gN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=jN();this.outputShape=e,this.enableShapeUniforms=p$(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?qN(["r","c","d"],e):KN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class m${constructor(e){this.variableNames=["A"],this.outTexUsage=mN.DOWNLOAD;const t=jN();this.outputShape=e,this.userCode=`\n      ${YN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class b${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=mN.DOWNLOAD;const t=jN();this.outputShape=e,this.userCode=`\n      ${YN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const x$={R:0,G:1,B:2,A:3};class y${constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=jN();this.outputShape=e,this.enableShapeUniforms=p$(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${x$[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":XN(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class v${constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=jN();this.outputShape=e,this.enableShapeUniforms=p$(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":XN(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function w$(e,t,n,r,s,a){!function(e,t){const n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return _N(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return kN(e,(()=>e.bindTexture(o,i))),kN(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),kN(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),kN(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),kN(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===q().getNumber("WEBGL_VERSION")?kN(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))):kN(e,(()=>e.texStorage2D(o,1,r,t,n))),kN(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function k$(e){return e.internalFormatFloat}function I$(e){return e.internalFormatHalfFloat}function S$(e){return e.downloadTextureFormat}function C$(e){return e.internalFormatPackedFloat}function N$(e){return e.internalFormatPackedHalfFloat}class $${constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=q().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){dN[e]=t}(t,e)):this.gl=fN(t),e=this.gl,2===q().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>kN(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>kN(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>kN(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>kN(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>kN(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>kN(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>kN(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>kN(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===q().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=SN(this.gl,e),WN(this.gl,t))this.textureHalfFloatExtension=SN(this.gl,t);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),WN(this.gl,r))this.colorBufferHalfFloatExtension=SN(this.gl,r);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",WN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!WN(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=_N(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return kN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),kN(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=_N(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return kN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),kN(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return _N(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=wN(this.gl,this.textureHalfFloatExtension)}get debug(){return q().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;kN(e,(()=>e.finish())),kN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),kN(e,(()=>e.deleteFramebuffer(this.framebuffer))),kN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),kN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),kN(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=xN(t,n);return w$(e,s,a,k$(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=xN(t,n);return w$(e,s,a,I$(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=xN(t,n);return w$(e,s,a,S$(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){kN(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===q().getNumber("WEBGL_VERSION")?kN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):kN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===q().getNumber("WEBGL_VERSION")?kN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):kN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),kN(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,u;kN(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(s),2===q().getNumber("WEBGL_VERSION")?kN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):kN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),kN(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=vN(t,n);return w$(e,s,a,N$(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=vN(t,n);return w$(e,s,a,C$(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(AN(this.gl,this.framebuffer),this.outputTexture=null),kN(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=xN(t,n),i=new Uint8Array(t*n*4);return kN(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i){const o=e,u=new Float32Array(function(e,t){const[n,r]=vN(e,t);return n*r*4}(a,i));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,u),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n){const r=e.createBuffer();kN(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return kN(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),kN(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),kN(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(q().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return kN(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=jN();return function(e,t){const n=_N(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(kN(e,(()=>e.shaderSource(n,t))),kN(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return _N(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);kN(t,(()=>t.attachShader(n,this.vertexShader))),kN(t,(()=>t.attachShader(n,e))),function(e,t){if(kN(e,(()=>e.linkProgram(t))),!q().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&$N(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;kN(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){kN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),TN(e,t,"clipSpacePos",n,3,20,0)&&TN(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(kN(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&$N(this.gl,this.program),kN(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return _N(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),kN(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),EN(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=vN(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&$N(this.gl,this.program),FN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}kN(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),kN(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=SN(this.gl,2===q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await k((()=>this.disposed||this.isQueryAvailable(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in q().platform&&(n=q().platform.setTimeoutCustom.bind(q().platform)),k((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),RN(this.gl,e,this.framebuffer),this.debug&&FN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(RN(this.gl,this.outputTexture,this.framebuffer),this.debug&&FN(this.gl)):AN(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;RN(r,e,this.framebuffer),this.debug&&FN(r),this.outputTexture=e,kN(r,(()=>r.viewport(0,0,t,n))),kN(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),kN(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:T$,XI:E$,Nk:R$,f6:A$,ct:F$,YG:_$,hH:D$,z3:O$,sG:M$,uM:L$,vS:z$,qB:P$,GG:B$,rq:W$,lg:U$,WR:V$,cu:G$,GE:H$,px:j$,jC:K$,He:q$,hE:X$,BF:Y$,Dk:J$,cl:Z$,_B:Q$,ub:eT,_f:tT,Ku:nT,qy:rT,Zy:sT,bu:aT,zv:iT,dH:oT,HS:uT,yH:lT,l3:cT,z9:hT,x6:dT,_m:pT,eW:fT,GK:gT,SP:mT,yr:bT,dl:xT,Dw:yT,xT:vT,_X:wT,wz:kT}=i;function IT(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function ST(e,t){return 1===t?[e]:IT(e,t)}class CT{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=p$(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=ST("rc",this.rank),t=o$(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class NT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=p$(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):KN(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":XN(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class $T{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=ET(t,n),s=RT(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=TT(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let i;return r===bN.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===bN.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===bN.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===bN.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===bN.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=ET(n,r),a=RT(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=TT(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=q().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u&&u.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function TT(e,t,n,r,s){const a=function(e,t){switch(e){case bN.PACKED_2X2_FLOAT32:return C$(t);case bN.PACKED_2X2_FLOAT16:return N$(t);case bN.UNPACKED_FLOAT32:return k$(t);case bN.UNPACKED_FLOAT16:return I$(t);case bN.PACKED_4X1_UNSIGNED_BYTE:return S$(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=vN(e[0],e[1]);i=t*n}else{const[t,n]=xN(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function ET(e,t){if(e===mN.UPLOAD)return bN.PACKED_2X2_FLOAT32;if(e===mN.RENDER||null==e)return function(e){return q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?bN.PACKED_2X2_FLOAT32:bN.UNPACKED_FLOAT32:e?bN.PACKED_2X2_FLOAT16:bN.UNPACKED_FLOAT16}(t);if(e===mN.DOWNLOAD||e===mN.PIXELS)return bN.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function RT(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class AT{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=p$(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const FT="if (isnan(x)) return x;",_T="return abs(x);",DT=FT+"\n  return (x < 0.0) ? 0.0 : x;\n",OT=FT+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",MT="return x;";class LT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=p$(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class zT{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=p$(this.outputShape.length);const t=e.length,n=ST("rc",t),r=o$(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const PT=Vc,BT={},WT=q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class UT extends u{nextDataId(){return UT.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof $$)t=e;else{const n=fN(q().getNumber("WEBGL_VERSION"),e);t=new $$(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=fN(q().getNumber("WEBGL_VERSION"));t=new $$(e),this.binaryCache=((n=q().getNumber("WEBGL_VERSION"))in BT||(BT[n]={}),BT[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new $T(this.gpgpu),this.numMBBeforeWarning=null==q().global.screen?1024:q().global.screen.height*q().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new o(this,Os())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const u=MN(t),l=new y$(u,!1,a),c=this.runWebGLProgram(l,[i],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||q().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:mN.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(q().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:mN.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new LT(i,MT):new AT(i,MT);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=Mr()),c="complex64"===r?oc(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=Mr()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new LT(r,MT):new AT(r,MT);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(q().getBool("DEBUG")&&!q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===q().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&q().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...yN(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=oc(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=b(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;kN(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Os().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new LT(s,MT):new AT(s,MT);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=Os().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>zr(e)));return ya(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ya(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!IN(n)){if(q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=b(t);if(q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...yN(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=q().getBool("WEBGL_PACK")&&!0===r,i=a?MN(t):t,o=a?new b$(i):new m$(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=Br(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=Br(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Mr(),endMs:null}}endTimer(e){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Mr(),e)}async getQueryTime(e){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=WT){return q().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&b(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){lr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return PT(e.shape,t)}packedUnaryOp(e,t,n){const r=new LT(e.shape,t),s=this.compileAndRun(r,[e],n);return Os().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=oT(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,_T,e.dtype);const t=new AT(e.shape,_T),n=this.compileAndRun(t,[e]);return Os().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&R(n[0])){const s=n.map((e=>Lr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Os().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new zT(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new CT(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[DN(e.shape),...ON(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[DN(t),...ON(t)],a=new NT(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;null!=t&&f(b(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=MN(s);let o;o=r?new g$(i):new f$(i);const u=[null!=t?t:yN(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===gN.DENSE){const t=null!=a?a:yN(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===b(i.shape))return o.values=N(i.dtype,0),i;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&b(t.shape)<=q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!zN(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=u$(e.packedInputs,t.shape,a);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=O(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&x(t.shape,a),f=1===b(t.shape),g=Ga(t.shape,n.shape),m=!e.packedInputs&&d===n.shape.length&&x(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${d}_${m}_${i?u:""}_${o.length}_${f}_${g}_${p}_${l}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${q().getNumber("WEBGL_VERSION")}`,a}(e,l,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=ZN(s,i,t),u=function(e,t){const n=_N(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(kN(e,(()=>e.shaderSource(n,t))),kN(e,(()=>e.compileShader(n))),q().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw NN(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),l=e.createProgram(u);return q().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i},h$(e,t,l)))}(this.gpgpu,e,l,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),q().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(d$(t.inShapeInfos,n),d$([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===q().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:a,offset:i,shape:o,texShape:u}=t.variablesLocations[r];if(o){const{uniformShape:n}=u$(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(u&&e.gl.uniform2i(u,s.texData.texShape[0],s.texData.texShape[1]),null!=a)if(s.isUniform)if(b(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=s.texData.slice&&null!=i&&e.gl.uniform1i(i,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,r)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=O(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],a=t.customUniformLocations[n],i=s[n];if("float"===r.type)e.gl.uniform1fv(a,i);else if("vec2"===r.type)e.gl.uniform2fv(a,i);else if("vec3"===r.type)e.gl.uniform3fv(a,i);else if("vec4"===r.type)e.gl.uniform4fv(a,i);else if("int"===r.type)e.gl.uniform1iv(a,i);else if("ivec2"===r.type)e.gl.uniform2iv(a,i);else if("ivec3"===r.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(a,i)}}e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const g=q().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=Mr();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!q().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ls((()=>{if(!q().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=q().getBool("DEBUG");q().set("DEBUG",!1);const t=this.abs(Ra(1e-8)).dataSync()[0];if(q().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=Mr());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=q().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&q().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?d(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=C(e);e=t.newShape}let s=b(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=DN(e);let n=2,r=2;e.length&&([n,r]=ON(e)),s=t*(n/2)*(r/2),a=v(s).map((e=>2*e))}else a=v(s);return a}(n,o),t.texShape=c),null!=s){const e=MN(n);let a,i=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([i,h]=vN(c[0],c[1])),a=o?new v$(e,d):new y$(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,r),g=this.texData.get(f.dataId);g.usage=d?mN.PIXELS:mN.UPLOAD,g.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,s);const m=[[h,i]],b=!0,x=this.runWebGLProgram(a,[f],r,m,b),y=this.texData.get(x.dataId);t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,q().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=y.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Mr()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*E(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await _l(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw NN(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=h$(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:i}=e,o=Os().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=o.writeTexture(r,t,n,s,a,i);return Os().makeTensorFromDataId(u,t,n,o)}}UT.nextDataId=0,Is()&&Bs("webgl",(()=>new UT),2);const VT="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class GT{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ja(t,n),this.enableShapeUniforms=p$(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const HT="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class jT{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ja(t,n);const s=this.outputShape.length;this.enableShapeUniforms=p$(s);let a="";if(r)if(0===s||1===b(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${o$(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=ST("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function KT(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const qT={kernelName:pt,backendName:"webgl",kernelFunc:KT};function XT(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=KT({inputs:{x:r},backend:n}),u=KT({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:u},a}const YT={kernelName:Ce,backendName:"webgl",kernelFunc:XT},JT="return (a < 0.) ? b * a : a;",ZT="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",QT={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",Dr(a,"float32")),o=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jT(ZT,s.shape,i.shape):new GT(JT,s.shape,i.shape),u=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},eE="return (a < 0.) ? b * a : a;",tE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",nE={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jT(tE,r.shape,s.shape):new GT(eE,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}},rE="if (isnan(x)) return x;";function sE({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new LT(i.shape,t):new AT(i.shape,e),o.runWebGLProgram(l,[i],u)}}function aE({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new GT(e,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],us(n.dtype,r.dtype))})),a=XT({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||us(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?Wc(e):e,r="string"===u.dtype?Wc(t):t,[a,i]=s(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let d;return d=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new jT(t,u.shape,l.shape,n):new GT(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function iE(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":DT;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":OT;if("prelu"===e)return t?tE:eE;if("leakyrelu"===e)return t?ZT:JT;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class oE{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=p$(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";i&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(y=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${x};\n        int batchB = ${y};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class uE{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ja(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const lE="return a * b;";function cE(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=us(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new uE("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new uE("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=XT({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=Y$(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jT(lE,r.shape,s.shape):new GT(lE,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const hE={kernelName:Vt,backendName:"webgl",kernelFunc:cE};function dE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=b(s.shape),u=I(a,o),l=b(u);f(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||zN(s.shape,u)||null!==c.texture&&zN(c.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[DN(e.shape),...ON(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[DN(t),...ON(t)],i=new NT(a,r),o=[r],u=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,u,i)}const pE={kernelName:cn,backendName:"webgl",kernelFunc:dE};class fE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${y(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class gE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function mE(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Ul(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new fE({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new fE({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new gE({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class bE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=o$(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class xE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=o$(this.rank),s=IT("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function yE(e,t,n){const r=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xE(e.shape,t):new bE(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function vE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=S(s,e.shape);let o=i;const u=Oo(o,a),l=null!=u;let c=e;l&&(c=yE(e,u,r),o=Lo(o.length,a)),Do("sum",o,a);const[h,d]=Fo(c.shape,o);let p=h;n&&(p=_o(h,i));const f=b(d),g=dE({inputs:{x:c},attrs:{shape:[b(e.shape)/f,f]},backend:r}),m=mE(g,ls(e.dtype),"sum",r),x=dE({inputs:{x:m},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(m),l&&r.disposeIntermediateTensorInfo(c),x}(s,a,i,n)}const wE={kernelName:An,backendName:"webgl",kernelFunc:vE};function kE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=s.shape[a[e]];let l;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=wT(e,s.shape,s.dtype,a,u);l=i.makeTensorInfo(u,s.dtype),i.texData.get(l.dataId).values=t}else l=yE(s,a,i);return l}const IE={kernelName:Qn,backendName:"webgl",kernelFunc:kE};function SE({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],g=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),x=t.shape.slice(0,-2),y=b(m),v=b(x),w=ja(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,g]);f(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[y,h,p]:[y,p,h],I=r?[v,g,d]:[v,d,g],S=dE({inputs:{x:e},backend:s,attrs:{shape:k}}),C=dE({inputs:{x:t},backend:s,attrs:{shape:I}}),N=[S,C],$=Math.max(y,v),T=n?S.shape[1]:S.shape[2],E=null!=a,R=null!=i,A="leakyrelu"===u,F=null!=u?iE(u,!0):null;let _;if((1===p||1===g)&&T>1e3&&!1===(E||R||A||null!=F)){let e=S,t=C;n&&(e=kE({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=kE({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const a=1===g;let i=e;1!==g&&(i=dE({inputs:{x:e},backend:s,attrs:{shape:[$,T,1]}}),N.push(i));const o=1===g?2:1;let u=t;a&&(u=dE({inputs:{x:t},backend:s,attrs:{shape:[$,1,T]}}),N.push(u));const l=cE({inputs:{a:i,b:u},backend:s});_=vE({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),N.push(l)}else{const u=us(e.dtype,t.dtype),l=new oE(k,I,[$,p,g],n,r,E,F,R,A),c=[S,C];if(null!=a&&c.push(a),R&&c.push(i),A){const e=s.makeTensorInfo([],"float32",Dr(o,"float32"));c.push(e),N.push(e)}_=s.runWebGLProgram(l,c,u)}const D=dE({inputs:{x:_},backend:s,attrs:{shape:w}});N.push(_);for(const e of N)s.disposeIntermediateTensorInfo(e);return D}const CE={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return SE({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},NE="return abs(x);",$E={kernelName:Q,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=oT(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new LT(r.shape,NE):new AT(r.shape,NE),n.runWebGLProgram(s,[r],r.dtype)}},TE=sE({opSnippet:FT+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),EE={kernelName:ee,backendName:"webgl",kernelFunc:TE},RE=sE({opSnippet:FT+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),AE={kernelName:te,backendName:"webgl",kernelFunc:RE},FE="return a + b;",_E=aE({opSnippet:FE,packedOpSnippet:FE,supportsComplex:!0,cpuKernelImpl:T$}),DE={kernelName:ne,backendName:"webgl",kernelFunc:_E};class OE{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class ME{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const LE={kernelName:re,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return KT({inputs:{x:s[0]},backend:r});if(s.length>q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>us(e,t))),i=s.map((e=>e.shape)),o=q().getBool("WEBGL_PACK")?new ME(s[0].shape,i):new OE(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},zE={kernelName:se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=S(a,s.shape);let l=u;const c=Oo(l,o);let h=s;null!=c&&(h=kE({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Lo(l.length,o)),Do("all",l,o);const[d,p]=Fo(h.shape,l),f=dE({inputs:{x:h},backend:n,attrs:{shape:[-1,b(p)]}}),g=mE(f,f.dtype,"all",n);let m;return m=dE(i?{inputs:{x:g},backend:n,attrs:{shape:_o(d,u)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},PE={kernelName:ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=S(a,s.shape);let l=u;const c=Oo(l,o);let h=s;null!=c&&(h=kE({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Lo(l.length,o)),Do("any",l,o);const[d,p]=Fo(h.shape,l),f=dE({inputs:{x:h},backend:n,attrs:{shape:[-1,b(p)]}}),g=mE(f,f.dtype,"any",n);let m;return m=dE(i?{inputs:{x:g},backend:n,attrs:{shape:_o(d,u)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}};class BE{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class WE{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,f(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=o$(o),l=ST("coords",o);let c,h;if(1===a){h=o+1;const e=o$(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],g=d.map((e=>"int "+e)),m=ST("sourceLocR",h-1).concat("inIdx.r"),b=ST("sourceLocG",h-1).concat("inIdx.g"),x=ST("sourceLocB",h-1).concat("inIdx.b"),y=ST("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${g.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${g.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function UE(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=Ul(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},u=new BE(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=UE(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function VE(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=Ul(s[s.length-1]),i=new WE(s,a,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(i,o,"int32");if(u.shape.length===t.shape.length){const r=VE(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function GE(e,t,n,r){const s=[n];if(Do("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!q().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=Fo(i.shape,s),l=b(u),c=dE({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=UE(e,c,r);n.push(h);const d=dE({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return VE(e,t,r)}const HE={kernelName:ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=S(a,s.shape);const o=Oo(i,s.shape.length);let u=s;const l=[];null!=o&&(u=kE({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=Lo(i.length,u.shape.length)),Do("argMax",[i[0]],u.shape.length);const c=GE(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},jE={kernelName:oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=S(a,s.shape);const o=Oo(i,s.shape.length);let u=s;const l=[];null!=o&&(u=kE({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=Lo(i.length,u.shape.length)),Do("argMin",[i[0]],u.shape.length);const c=GE(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},KE=sE({opSnippet:FT+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),qE={kernelName:ue,backendName:"webgl",kernelFunc:KE},XE=sE({opSnippet:FT+"return log(x + sqrt(x * x + 1.0));"}),YE={kernelName:le,backendName:"webgl",kernelFunc:XE},JE=sE({opSnippet:FT+"\n  return atan(x);\n"}),ZE={kernelName:ce,backendName:"webgl",kernelFunc:JE},QE=aE({opSnippet:VT+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+HT+"\n  return result;\n"}),eR={kernelName:de,backendName:"webgl",kernelFunc:QE},tR=sE({opSnippet:FT+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),nR={kernelName:he,backendName:"webgl",kernelFunc:tR};class rR{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const y=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class sR{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const aR={kernelName:pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;GN(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;f(Pi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ei(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&x(l.inShape,l.outShape))return KT({inputs:{x:s},backend:n});const c=new rR(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},iR={kernelName:ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=Ri(s.shape,a,i,[1,1,1],o,u,l),h=new sR(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class oR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class uR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const lR={kernelName:me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Ri(i.shape,o,u,[1,1,1],l,c),d=new uR(h);return n.runWebGLProgram(d,[s],i.dtype)}},cR={kernelName:fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;GN([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Ei(i.shape,o,u,1,l),h=new oR(c);return n.runWebGLProgram(h,[s],i.dtype)}},hR={kernelName:be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return SE({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class dR{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ja(e,t),ja(e,n);let i="0.0";null!=r&&(ja(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(ja(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class pR{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ja(e,t),ja(e,n);let i="vec4(0.0)";null!=r&&(ja(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(ja(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const fR={kernelName:ut,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;f(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const d=q().getBool("WEBGL_PACK_NORMALIZATION")?new pR(r.shape,s.shape,a.shape,c,h,u):new dR(r.shape,s.shape,a.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}};class gR{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=o$(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return mR.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${mR[t]} = start[${t}] + coords.${mR[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const mR=["x","y","z","w","u","v"];class bR{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=o$(this.rank),n=ST("coords",this.rank),r=ST("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function xR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,u]=ki(s,a,i);if(ui(s,o,u),0===b(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=uT(e.values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=vi(s.shape,o,u);if(l||!c){const e=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bR(u):new gR(u),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=wi(t,O(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),a}(s,o,u,n)}const yR={kernelName:Sn,backendName:"webgl",kernelFunc:xR},vR={kernelName:xe,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;f(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=Gl(s.shape,a,o),l=Hl(u.length,a.length),c=jl(s.shape,a,o),h=Kl(i,a.length),d=ql(c,i,a.length),p=[],g=dE({inputs:{x:s},backend:n,attrs:{shape:u}}),m=kE({inputs:{x:g},backend:n,attrs:{perm:l}}),b=dE({inputs:{x:m},backend:n,attrs:{shape:c}}),x=xR({inputs:{x:b},backend:n,attrs:{begin:h,size:d}});return p.push(g),p.push(m),p.push(b),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},wR={kernelName:ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),u=n.readSync(a.dataId),l=E$(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}},kR={kernelName:ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=q().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=q().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===i){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,i]=A$(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(i,r.dtype);return n.texData.get(o.dataId).values=a,o}let o;return o=a?new jT("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new GT("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(o,[r,s],r.dtype)}},IR={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=ja(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},SR=aE({opSnippet:"return float(a != b);",cpuKernelImpl:Z$,dtype:"bool"}),CR={kernelName:Ht,backendName:"webgl",kernelFunc:SR};function NR(e){const{inputs:t,backend:n}=e,{input:r}=t;return KT({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const $R={kernelName:on,backendName:"webgl",kernelFunc:NR},TR={kernelName:ke,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return KT({inputs:{x:a},backend:r});const t=Yo(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=XT({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=NR({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!T(a.dtype,i)){const e=KT({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=F$(e,a.shape,a.dtype,i);return r.makeTensorInfo(t,n,s)}if("int32"===i)return function(e,t){const n=new AT(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",N("bool",1)),t=SR({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},ER="return ceil(x);",RR=sE({opSnippet:ER,packedOpSnippet:ER,cpuKernelImpl:_$}),AR={kernelName:Ie,backendName:"webgl",kernelFunc:RR};class FR{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class _R{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const DR={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=q().getBool("WEBGL_PACK_CLIP")?new _R(s.shape):new FR(s.shape);const u=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,u)}};class OR{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function MR(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const LR={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new OR(r.shape),i=[MR(r,s.complexTensorInfos.real),MR(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class zR{constructor(e){this.outputShape=[],this.outputShape=Ol(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class PR{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ol(e,t);const n=this.outputShape,r=n.length,s=o$(r),a=ST("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${BR(i,u,t)}),\n            vec2(${BR(l,u,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${BR(i,u,p)}),\n          vec2(${BR(l,u,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function BR(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function WR(e){const{inputs:t,backend:n}=e,{input:r}=t;return KT({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const UR={kernelName:gt,backendName:"webgl",kernelFunc:WR};function VR(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>NR({inputs:{input:e},backend:n}))),s=e.map((e=>WR({inputs:{input:e},backend:n}))),a=VR(r,t,n),i=VR(s,t,n),o=XT({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=b(e.shape.slice(t));return dE({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Ol(s.map((e=>e.shape)),1),o=1===s[0].shape[0],u=D$(a,i,r,o),l=Ol(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>b(e.shape)>0)),i=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new AT(e[0].shape,MT):new LT(e[0].shape,MT);return n.runWebGLProgram(t,e,r)}const o=q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let r=0;r<a.length;r+=o){const s=a.slice(r,r+o);e.push(VR(s,t,n))}const r=VR(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new PR(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:u,outShape:l}=function(e,t,n){const r=Ol(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>dE({inputs:{x:e},attrs:{shape:[-1,b(e.shape.slice(t))]},backend:n}))),outShape:r}}(a,t,n),c=new zR(u.map((e=>e.shape))),h=n.runWebGLProgram(c,u,r);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=dE({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function GR(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=S(s,t[0].shape)[0];Dl(t.map((e=>e.shape)),a);const i=Ol(t.map((e=>e.shape)),a);if(0===b(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>b(e.shape)>0));return 1===o.length?KT({inputs:{x:o[0]},backend:n}):VR(o,a,n)}const HR={kernelName:$e,backendName:"webgl",kernelFunc:GR};class jR{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,x=g?3:1;let y="",v="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class KR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qR{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=p$(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<l;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<l&&(a%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<l)){const e=a%2==0?d(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<l&&(a%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<l&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<l&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<l&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<l&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${g}\n         ${f}\n         setOutput(result);\n       }\n     `}}class XR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=p$(this.outputShape.length);const{dataFormat:n}=t,r=jN(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function YR(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function JR({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p="channelsLast"===n.dataFormat,g=!1;let m;const b=[];if(null!=a){const e=YR(a.shape,p);null!=e&&(a=dE({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}if(null!=s){const e=YR(s.shape,p);null!=e&&(s=dE({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}if((1!==h&&1!==d||!(c>1e3))&&l.isPacked&&p&&null!=l.texture&&u[2]%2!=0&&x(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,f(zN(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const p=dE({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(p);const x=SE({a:h,b:p,backend:r,transposeA:!1,transposeB:g,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),y=r.texData.get(x.dataId);f(y.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,y.shape=n.outShape,m=KT({inputs:{x},backend:r}),m.shape=n.outShape,b.push(x)}else{const u=n.outHeight*n.outWidth,l=dE({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=dE({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=SE({a:p?l:c,b:p?c:l,transposeA:!p,transposeB:g,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});m=dE({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),b.push(l),b.push(c),b.push(h)}for(const e of b)r.disposeIntermediateTensorInfo(e);return m}function ZR({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=u*l*c,m=d*h,x=[n.batchSize,g,m],y=[];if(null!=a){const e=YR(a.shape,f);null!=e&&(a=dE({inputs:{x:a},backend:r,attrs:{shape:e}}),y.push(a))}if(null!=s){const e=YR(s.shape,f);null!=e&&(s=dE({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}const v=dE({inputs:{x:t},backend:r,attrs:{shape:[1,g,b(t.shape)/g]}});y.push(v);const w=new XR(x,n),k=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=r.runWebGLProgram(w,[e],"float32",k),S=dE({inputs:{x:I},backend:r,attrs:{shape:x}});y.push(I),y.push(S);const C=null!=s,N=null!=a,$="leakyrelu"===o,T=o?iE(o,!0):null,E=new oE(f?S.shape:v.shape,f?v.shape:S.shape,f?[n.batchSize,m,n.outChannels]:[n.batchSize,n.outChannels,m],!0,!1,C,T,N,$),R=f?[S,v]:[v,S];if(s&&R.push(s),N&&R.push(a),$){const e=r.makeTensorInfo([],"float32",Dr(i,"float32"));R.push(e),y.push(e)}const A=r.runWebGLProgram(E,R,"float32"),F=dE({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});y.push(A);for(const e of y)r.disposeIntermediateTensorInfo(e);return F}const QR={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=Wi(u),d=Ai(s.shape,a.shape,i,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&q().getBool("WEBGL_EXP_CONV")){const e=new qR(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,a],"float32",t)}else if(q().getBool("WEBGL_CONV_IM2COL"))p=ZR({x:s,filter:a,convInfo:d,backend:n});else{const e=new jR(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=JR({x:s,filter:a,convInfo:d,backend:n});const f=dE({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class eA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class nA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const sA={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=Wi(u),d=Ai(s.shape,c,i,1,o,l,!1,h),p=new eA(d);return n.runWebGLProgram(p,[s,a],"float32")}};class aA{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=p$(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const iA={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=Wi(l),d=Ai(i,a.shape,o,1,u,c,!1,h);if(q().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new aA(d);return n.runWebGLProgram(t,[s,a],"float32",e)}{const e=new tA(d);return n.runWebGLProgram(e,[s,a],"float32")}}},oA={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=Fi(s.shape,a.shape,i,u,o),c=new KR(l);return n.runWebGLProgram(c,[s,a],"float32")}},uA={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r,l=Fi(s.shape,u,i,1,o),c=new nA(l);return n.runWebGLProgram(c,[s,a],"float32")}},lA={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r,l=Fi(u,a.shape,o,1,i),c=new rA(l);return n.runWebGLProgram(c,[s,a],"float32")}},cA=sE({opSnippet:rE+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${HT}\n  return result;\n`}),hA={kernelName:De,backendName:"webgl",kernelFunc:cA},dA=sE({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),pA={kernelName:Oe,backendName:"webgl",kernelFunc:dA};class fA{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const gA={kernelName:ze,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new fA(s.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[s,a,i],"float32")}};var mA;!function(e){e.Prod="*",e.Sum="+"}(mA||(mA={}));class bA{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===mA.Prod?"1.0":"0.0",i=n?a:`getX(${xA(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(o-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${o$(s)} coords = getOutputCoords();\n        int end = ${yA(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${yA(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${xA(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function xA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function yA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function vA(e,t,n,r,s,a){const i=t.shape.length,o=Oo([r],i);let u=t;null!=o&&(u=kE({inputs:{x:t},backend:n,attrs:{perm:o}}));const l=Lo(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=KT({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new bA(e,u.shape,!1,a),s=[[t]],i=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(i)}if(s){const t=new bA(e,u.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=kE({inputs:{x:h},backend:n,attrs:{perm:Mo(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const wA={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return vA(mA.Prod,s,n,a,i,o)}},kA={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return vA(mA.Sum,s,n,a,i,o)}},IA={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=E$(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=R$(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class SA{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const CA={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],u=("NHWC"===i?s.shape[1]:s.shape[2])*a,l=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new SA("NHWC"===i?[o,u,l,c]:[o,c,u,l],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class NA{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=p$(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class $A{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=p$(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?d(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",g="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,g="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${g}\n        setOutput(result);\n      }\n    `}}const TA={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),f(Pi(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Ai(s.shape,a.shape,i,c,o,l,!0);let d;d=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new $A(h):new NA(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,a],"float32",p)}};class EA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const AA={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=Ai(s.shape,c,i,o,u,l,!0),d=new EA(h);return n.runWebGLProgram(d,[s,a],"float32")}},FA={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=Ai(c,a.shape,i,o,u,l,!0),d=new RA(h);return n.runWebGLProgram(d,[s,a],"float32")}};class _A{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const DA={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=b(r.shape),i=dE({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new _A(a),u=n.runWebGLProgram(o,[i],i.dtype),l=dE({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class OA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const MA={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=Ti(s.shape,a.shape,i,o,"NHWC",u);let c;const h=new OA(l);c=n.runWebGLProgram(h,[s,a],"float32");const d=dE({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},LA={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=yc(s,a.length);wc(i.length,u,a);const{path:l,steps:c}=kc(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=vc(p,u[t]);let s;Ic(e)?s=a[t]:(s=kE({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);x(s.shape,i)||(s=dE({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=cE({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=vE({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},zA=sE({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),PA={kernelName:Ye,backendName:"webgl",kernelFunc:zA},BA={kernelName:Je,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jT("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new GT("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},WA=aE({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:O$}),UA={kernelName:Qe,backendName:"webgl",kernelFunc:WA},VA=sE({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${tc};\n  float a1 = ${nc};\n  float a2 = ${rc};\n  float a3 = ${sc};\n  float a4 = ${ac};\n  float a5 = ${ic};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),GA={kernelName:Ze,backendName:"webgl",kernelFunc:VA},HA=sE({opSnippet:rE+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:M$,dtype:"float32"}),jA={kernelName:et,backendName:"webgl",kernelFunc:HA};function KA(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(f(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),dE({inputs:{x:a},backend:r,attrs:{shape:o}})}const qA={kernelName:tt,backendName:"webgl",kernelFunc:KA},XA="return exp(x) - 1.0;",YA=sE({opSnippet:XA,packedOpSnippet:XA,cpuKernelImpl:L$}),JA={kernelName:nt,backendName:"webgl",kernelFunc:YA};class ZA{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function QA(e,t,n){const r=n.texData.get(e.dataId),s=b(e.shape),a=e.shape[e.shape.length-1],i=dE({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,u=new ZA("real",o,t),l=new ZA("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=XT({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=dE({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const eF={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return QA(r,!1,n)}};class tF{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function nF(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||F(s),"string"===a){const e=$(a,b(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new tF(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const rF={kernelName:st,backendName:"webgl",kernelFunc:nF};class sF{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const aF={kernelName:at,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new sF(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},iF="return floor(x);",oF=sE({opSnippet:iF,packedOpSnippet:iF,cpuKernelImpl:z$}),uF={kernelName:it,backendName:"webgl",kernelFunc:oF},lF=aE({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),cF={kernelName:ot,backendName:"webgl",kernelFunc:lF};class hF{constructor(e){this.variableNames=["A"];const t=jN(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class dF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=jN(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const pF={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,a];if(o||i){const e=q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=fF&&e===gF||(gF=e,fF=document.createElement("canvas").getContext("2d",{willReadFrequently:gF})),fF.canvas.width=u,fF.canvas.height=l,fF.drawImage(s,0,0,u,l),s=fF.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=mN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=q().getBool("WEBGL_PACK")?new dF(h):new hF(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let fF,gF=q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const mF={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,g=Wi(c),m=Ai(s.shape,a.shape,u,h,l,d,!1,g);let b;const x=[],y=null!=i,v=null!=o,w="leakyrelu"===p,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=dE({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(y&&e.push(t(i,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Dr(f,"float32"));e.push(t),x.push(t)}return e};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&q().getBool("WEBGL_EXP_CONV")){const e=p?iE(p,!0):null,t=new qR(m,y,e,v,w),r=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],s=k();b=n.runWebGLProgram(t,s,"float32",r)}else if(q().getBool("WEBGL_CONV_IM2COL"))b=ZR({x:s,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?iE(p,!1):null,t=new jR(m,y,e,v,w),r=k();b=n.runWebGLProgram(t,r,"float32")}else b=JR({x:s,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=dE({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}},bF={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,g=[];let m=c;null==m&&(m=[1,1]),f(Pi(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const b=Ai(s.shape,a.shape,u,m,l,h,!0),x=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels===1,y=d?iE(d,x):null,v=[s,a],w=null!=i,k=null!=o,I="leakyrelu"===d;if(w&&v.push(i),k&&v.push(o),I){const e=n.makeTensorInfo([],"float32",Dr(p,"float32"));v.push(e),g.push(e)}let S;S=x?new $A(b,w,y,k,I):new NA(b,w,y,k,I);const C=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],N=n.runWebGLProgram(S,v,"float32",C);return g.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class xF{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=o$(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const yF={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=b(r.shape),[u,l,c,h]=Xl(r,s),d=dE({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),p=dE({inputs:{x:r},backend:n,attrs:{shape:[b(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=P$(e,t,r.dtype,l,i,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,a.values)}const f=new xF(i,h,[l,c],r.shape),g=n.runWebGLProgram(f,[p,d],p.dtype),m=dE({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(g),m}};class vF{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=o$(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function wF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,u=S(i,s.shape)[0];if(q().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];f(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=Bc(s,a,u,o),c=b(a.shape),h=[],d=dE({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=dE({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const g=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=B$(t,e,g);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new vF(d.shape,g),x=n.runWebGLProgram(m,[d,p],d.dtype);h.push(x);const y=dE({inputs:{x},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const kF={kernelName:lt,backendName:"webgl",kernelFunc:wF},IF=aE({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:W$,dtype:"bool"}),SF={kernelName:ht,backendName:"webgl",kernelFunc:IF},CF=aE({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:U$}),NF={kernelName:dt,backendName:"webgl",kernelFunc:CF},$F={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return QA(r,!0,n)}},TF=sE({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),EF={kernelName:mt,backendName:"webgl",kernelFunc:TF},RF=sE({opSnippet:"return float(isinf(x));",dtype:"bool"}),AF={kernelName:bt,backendName:"webgl",kernelFunc:RF},FF=sE({opSnippet:"return float(isnan(x));",dtype:"bool"}),_F={kernelName:xt,backendName:"webgl",kernelFunc:FF},DF=aE({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:V$,dtype:"bool"}),OF={kernelName:vt,backendName:"webgl",kernelFunc:DF},MF=aE({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:G$,dtype:"bool"}),LF={kernelName:wt,backendName:"webgl",kernelFunc:MF},zF={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=H$(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},PF=sE({opSnippet:rE+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:j$}),BF={kernelName:It,backendName:"webgl",kernelFunc:PF},WF=sE({opSnippet:rE+"\n  return log(1.0 + x);\n"}),UF={kernelName:St,backendName:"webgl",kernelFunc:WF},VF=aE({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),GF={kernelName:Ct,backendName:"webgl",kernelFunc:VF},HF=sE({opSnippet:"return float(!(x >= 1.0));"}),jF={kernelName:Nt,backendName:"webgl",kernelFunc:HF},KF=aE({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),qF={kernelName:$t,backendName:"webgl",kernelFunc:KF};class XF{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class YF{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const JF={kernelName:Tt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r,l=q().getBool("WEBGL_PACK_NORMALIZATION")?new YF(s.shape,a,i,o,u):new XF(s.shape,a,i,o,u);return n.runWebGLProgram(l,[s],s.dtype)}};class ZF{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const QF={kernelName:Et,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new ZF(s.shape,o,u,l,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function e_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,u=S(a,s.shape);let l=u;const c=Oo(l,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=wT(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=yE(s,c,n);l=Lo(l.length,o)}Do("max",l,o);const[f,g]=Fo(p.shape,l);let m,x=f;if(i&&(x=_o(f,u)),d){const e=n.texData.get(p.dataId).values,t=K$(e,b(g),x,s.dtype);m=n.makeTensorInfo(x,s.dtype),n.texData.get(m.dataId).values=t}else m=function(e,t,n,r){const s=b(t),a=dE({inputs:{x:e},attrs:{shape:[b(e.shape)/s,s]},backend:r}),i=mE(a,e.dtype,"max",r),o=dE({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,g,x,n);return h&&n.disposeIntermediateTensorInfo(p),m}const t_={kernelName:Rt,backendName:"webgl",kernelFunc:e_},n_=aE({opSnippet:VT+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+HT+"\n  return result;\n",cpuKernelImpl:q$}),r_={kernelName:At,backendName:"webgl",kernelFunc:n_},s_={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;GN(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;f(Pi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ei(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&x(l.inShape,l.outShape))return KT({inputs:{x:s},backend:n});const c=new rR(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},a_={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=Ri(s.shape,a,i,[1,1,1],o,l,u),h=new sR(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class i_{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class o_{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const u_={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Ri(i.shape,o,u,[1,1,1],l,c),d=new sR(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new o_(h),g=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),g}},l_={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;GN([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Ei(o.shape,u,l,1,c,h),p=new rR(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),g=new i_(d),m=n.runWebGLProgram(g,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}},c_={kernelName:Mt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;f(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];f(Pi(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=Ei(r.shape,s,a,l,i),[h,d]=function(e,t,n,r){let s=new rR(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new rR(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,u);return[h,d]}},h_={kernelName:Lt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,u=S(a,r.shape);let l=u;const c=Oo(l,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=wT(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=yE(r,c,i);p.push(f),l=Lo(l.length,o)}Do("sum",l,o);const[g,m]=Fo(f.shape,l);let x=g;s&&(x=_o(g,u));const y=function(e,t,n,r){const s=b(t),a=dE({inputs:{x:e},attrs:{shape:[b(e.shape)/s,s]},backend:r}),i=mE(a,"float32","mean",r),o=dE({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,m,x,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return y}},d_={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=S(a,s.shape);let l=u;const c=Oo(l,o);let h=s;null!=c&&(h=kE({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Lo(l.length,s.shape.length)),Do("min",l,o);const[d,p]=Fo(h.shape,l),f=dE({inputs:{x:h},backend:n,attrs:{shape:[-1,b(p)]}}),g=mE(f,f.dtype,"min",n);let m;return m=dE(i?{inputs:{x:g},backend:n,attrs:{shape:_o(d,u)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},p_=aE({opSnippet:VT+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+HT+"\n  return result;\n",cpuKernelImpl:X$}),f_={kernelName:Pt,backendName:"webgl",kernelFunc:p_};class g_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=o$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class m_{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=o$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=ST("rc",r),u=ST("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const b_={kernelName:Bt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new m_(r.shape,s,a):new g_(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},x_=aE({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+HT+"\n  return result;\n"}),y_={kernelName:Wt,backendName:"webgl",kernelFunc:x_};class v_{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const w_=aE({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),k_={kernelName:qe,backendName:"webgl",kernelFunc:w_},I_="return a - b;",S_=aE({opSnippet:I_,packedOpSnippet:I_,supportsComplex:!0,cpuKernelImpl:xT}),C_={kernelName:Kn,backendName:"webgl",kernelFunc:S_};function N_(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=S([a],s.shape),o=e_({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=_o(o.shape,i),l=dE({inputs:{x:o},backend:n,attrs:{shape:u}}),c=S_({inputs:{a:s,b:l},backend:n}),h=HA({inputs:{x:c},backend:n}),d=vE({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=dE({inputs:{x:d},backend:n,attrs:{shape:u}}),f=w_({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const $_={kernelName:Dn,backendName:"webgl",kernelFunc:N_},T_={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,u=o?s:N_({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new v_(l,c,a),d=[[i]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},E_=FT+"\n  return -x;\n",R_={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=J$(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new LT(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new AT(r.shape,E_),n.runWebGLProgram(s,[r],r.dtype)}},A_=sl,F_={kernelName:jt,backendName:"webgl",kernelFunc:function(e){lr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=A_(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},__=al,D_={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){lr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=__(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},O_=il,M_={kernelName:qt,backendName:"webgl",kernelFunc:function(e){lr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,f=u,g=l,{selectedIndices:m,selectedScores:b}=O_(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class L_{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const z_={kernelName:Yt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:u}=r,l=b(s.shape),c=new L_(l,i,o,u),h=dE({inputs:{x:s},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const p=dE({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function P_(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=NR({inputs:{input:r},backend:n}),t=P_({inputs:{x:e},backend:n}),s=WR({inputs:{input:r},backend:n}),a=P_({inputs:{x:s},backend:n}),i=XT({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return nF({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const B_={kernelName:rr,backendName:"webgl",kernelFunc:P_},W_={kernelName:Xt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=NR({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=WR({inputs:{input:s},backend:r}),i=P_({inputs:{x:a},backend:r}),o=XT({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return nF({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},U_={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return KA({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{g(a,e.shape,"All tensors passed to stack must have matching shapes"),f(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=GR({inputs:t.map((e=>{const t=KA({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class V_{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=o$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class G_{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=o$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=ST("rc",r),u=ST("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const H_=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===b(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return nF({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new G_(s.shape,a,i):new V_(s.shape,a,i),u=[[i]];return n.runWebGLProgram(o,[s],s.dtype,u)},j_={kernelName:Zt,backendName:"webgl",kernelFunc:H_},K_=aE({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+HT+"\n  return result;\n"}),q_={kernelName:Qt,backendName:"webgl",kernelFunc:K_},X_={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=[],l=S(a,s.shape);let c=l;const h=Oo(c,o);let d,p=s;if(null!=h&&(p=kE({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Lo(c.length,o),u.push(p)),Do("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=Q$(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=Fo(p.shape,c),r=b(t),a=dE({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=mE(a,ls(s.dtype),"prod",n);d=dE({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(a),u.push(i)}if(i){u.push(d);const e=_o(d.shape,l);d=dE({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Y_={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,u=s.map((e=>n.readSync(e.dataId))),l=s.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[d,p,f]=eT(u,l,c,a.shape,a.dtype,h,i.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,a.dtype,p);return g.concat([m])}},J_={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=tT(i,r.shape,r.dtype,o,s.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}},Z_={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,g]=nT(l,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,u);return n.makeTensorInfo(f,a.dtype,g)}},Q_=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=rT(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},eD={kernelName:an,backendName:"webgl",kernelFunc:Q_},tD=sE({opSnippet:"return 1.0 / x;"}),nD={kernelName:un,backendName:"webgl",kernelFunc:tD},rD=sE({opSnippet:FT+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),sD={kernelName:ln,backendName:"webgl",kernelFunc:rD},aD=sE({opSnippet:FT+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),iD={kernelName:gn,backendName:"webgl",kernelFunc:aD};class oD{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class uD{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const lD={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new uD(s.shape,u,l,a,i):new oD(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],"float32")}};class cD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const hD={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new cD(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class dD{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class pD{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const fD={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new pD(s.shape,u,l,a,i):new dD(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class gD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const mD={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new gD(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class bD{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=o$(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class xD{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=ST("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=o$(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const yD={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=S(a,s.shape);if(0===i)return KT({inputs:{x:s},backend:n});const u=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xD(s.shape,o):new bD(s.shape,o);return n.runWebGLProgram(u,[s],s.dtype)}};class vD{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const wD={kernelName:ar,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=new vD(r.shape,a),[l,c]=Vl(i,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},kD=sE({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),ID={kernelName:bn,backendName:"webgl",kernelFunc:kD},SD=sE({opSnippet:"return inversesqrt(x);",cpuKernelImpl:sT}),CD={kernelName:xn,backendName:"webgl",kernelFunc:SD};class ND{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=o$(s.length),l=o$(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const g=`getDefaultValue(${f})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${g}, sum, float(found)));\n        }\n      `}}class $D{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=o$(s.length),l=o$(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const g=`getDefaultValue(${f})`,m=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${b};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${g}, sum, found));\n        }\n      `}}const TD={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Zl(0,s,i),d=[h/l,l];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=dE({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),f=dE({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let m;m=q().getBool("WEBGL_PACK")?new $D(u,o,p.shape.length,f.shape.length,c,d):new ND(u,o,p.shape.length,f.shape.length,c,d);const b=n.runWebGLProgram(m,[f,p,g],f.dtype),x=dE({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class ED{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===q().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const RD={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new ED(s.shape[0],s.shape[1],a.shape[1],i),u=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",u)}};class AD{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=o$(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const FD={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new AD(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],us(s.dtype,a.dtype))}},_D=sE({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Ql};\n  float scale = ${ec};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),DD={kernelName:In,backendName:"webgl",kernelFunc:_D},OD=sE({opSnippet:rE+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:iT}),MD={kernelName:Tn,backendName:"webgl",kernelFunc:OD},LD=sE({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),zD={kernelName:$n,backendName:"webgl",kernelFunc:LD},PD=sE({opSnippet:rE+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${HT}\n  return result;\n`}),BD={kernelName:Cn,backendName:"webgl",kernelFunc:PD},WD=sE({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),UD={kernelName:Nn,backendName:"webgl",kernelFunc:WD},VD=sE({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),GD={kernelName:En,backendName:"webgl",kernelFunc:VD},HD={kernelName:Fn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;f(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=[],c=H_({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=Gl(c.shape,a,o,!1),d=Hl(h.length,a.length,!1),p=jl(c.shape,a,o,!1),g=dE({inputs:{x:c},backend:n,attrs:{shape:h}}),m=kE({inputs:{x:g},backend:n,attrs:{perm:d}}),b=dE({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(g),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},jD={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,g]=lT(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}},KD={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=cT(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},qD={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=hT(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},XD={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=hT(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},YD={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Zl(0,s,o),p=!1;if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=zr(n.readSync(i.dataId)[0]),f=aT(e,t,o,d,c,l,u,h,r,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new ND(l,u,s.shape.length,a.shape.length,h,[d,1],p),g=n.runWebGLProgram(f,[a,s,i],a.dtype),m=dE({inputs:{x:g},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(g),m}},JD={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=S(i,s.shape)[0],u=Cc(s,a,o),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=xR({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},ZD="return sqrt(x);",QD=sE({opSnippet:ZD,packedOpSnippet:ZD,cpuKernelImpl:dT}),eO={kernelName:Rn,backendName:"webgl",kernelFunc:QD},tO={kernelName:Wn,backendName:"webgl",kernelFunc:sE({opSnippet:"return x * x;"})},nO="return (a - b) * (a - b);",rO=aE({opSnippet:nO,packedOpSnippet:nO}),sO={kernelName:Bn,backendName:"webgl",kernelFunc:rO},aO={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const a=Wc(n.readSync(s.dataId)),i=pT(a,"string",r);return n.makeTensorInfo(s.shape,"string",i)}},iO={kernelName:sr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=FT+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new AT(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class oO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=o$(n.length),a=o$(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const uO={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:g,isIdentity:m,sliceDim0:b,isSimpleSlice:x,begin:y,end:v,strides:w}=Ii(s.shape,a,i,o,u,l,c,h,d);let k;if(m)k=dE({inputs:{x:s},backend:n,attrs:{shape:g}});else if(b||x){f(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=ci(y,v,w),t=xR({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});k=dE({inputs:{x:t},backend:n,attrs:{shape:g}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=ya(s.shape,s.dtype,e),r=fT(p,t,w,y);k=n.makeTensorInfo(g,s.dtype,r.values)}else{const e=new oO(y,w,p);k=n.runWebGLProgram(e,[s],s.dtype)}const I=dE({inputs:{x:k},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(k),I}},lO={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,g]=gT(d,p,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}},cO={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=mT(o,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},hO={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=bT(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},dO=sE({opSnippet:"return tan(x);"}),pO={kernelName:qn,backendName:"webgl",kernelFunc:dO},fO=sE({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),gO={kernelName:Xn,backendName:"webgl",kernelFunc:fO},mO={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:a,updates:i}=t,{}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Zl(0,a,s.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(s.shape,a.dtype);const p=dE({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=dE({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),g=dE({inputs:{x:s},backend:n,attrs:{shape:d}}),m=new ND(u,o,p.shape.length,f.shape.length,c,d,!1,!0),b=n.runWebGLProgram(m,[f,p,g],g.dtype),x=dE({inputs:{x:b},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),x}};class bO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=o$(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function xO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>zr(e))):e,r=ya(s.shape,s.dtype,t),i=yT(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new bO(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const yO={kernelName:Yn,backendName:"webgl",kernelFunc:xO};class vO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class wO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function kO(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function IO(e){let t=1;for(;t<e;)t*=2;return t}const SO={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>u){const e=n.readSync(s.dataId),[t,r]=vT(e,l,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,nF({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=b(l)/c,g=dE({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&kO(n,p);const m=IO(a),x=IO(c);let y=null;const v=()=>null===y?[g,g]:[g,y],w=(e,t,r)=>{const s=v(),a=new vO(r),i=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(a,s,"int32",i),kO(n,o)};for(let e=1;e<m;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,x])}for(let e=x;e>m;e/=2){const t=v(),r=new wO([f,e/2]),s=[[c],[null===y?1:0],[m]],a=y;y=n.runWebGLProgram(r,t,"int32",s),kO(n,a);const i=m/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,y.shape)}let k=y;y=xR({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,a]}}),kO(n,k);let I=wF({inputs:{x:g,indices:y},backend:n,attrs:{axis:1,batchDims:1}});kO(n,g);const S=l.slice(0,-1);S.push(a),k=y,y=dE({inputs:{x:y},attrs:{shape:S},backend:n}),kO(n,k);const C=I;return I=dE({inputs:{x:I},attrs:{shape:S},backend:n}),kO(n,C),[I,y]}};class CO{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const NO={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=s.shape,[f,g]=null!=l?l:[h,d],m=new CO(h,d,i,o,u,[c,f,g,p]);return n.runWebGLProgram(m,[s,a],"float32")}},$O={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;GN(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=kT(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},TO={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,u=s.shape[a],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(l[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[a]=e;const t=xR({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=dE({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class EO{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const RO={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,u=[];let l=0;const c=Oo([l],o);let h=s;null!=c&&(h=kE({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=Lo(1,o)[0]);const d=Pc(h.shape,l,i),p=b([h.shape[l]]),f=dE({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const g=ls(s.dtype),m=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],l=zc(o,a),c=new EO({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(u.push(h),h.shape[1]===a)return h;const d=Q_({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=xO({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});return u.push(d),u.push(p),m(h,t,p,s,a)},x=dE({inputs:{x:m(f,"unsortedSegmentSum",a,g,i)},backend:n,attrs:{shape:d}});let y=x;if(null!=c){u.push(x);const e=Mo(c);y=kE({inputs:{x:y},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},AO=[CE,$E,EE,AE,DE,LE,zE,PE,HE,jE,qE,YE,ZE,eR,nR,aR,iR,lR,cR,hR,fR,vR,wR,kR,IR,TR,AR,DR,YT,LR,HR,QR,sA,iA,oA,uA,lA,hA,pA,gA,wA,kA,IA,CA,TA,AA,FA,DA,MA,LA,PA,BA,UA,GA,jA,qA,JA,eF,rF,aF,uF,cF,pF,mF,bF,yF,kF,SF,NF,qT,$F,UR,EF,AF,_F,QT,OF,LF,zF,BF,UF,GF,jF,qF,JF,QF,t_,r_,s_,a_,u_,l_,c_,h_,d_,f_,b_,y_,T_,hE,R_,F_,D_,M_,CR,z_,W_,U_,j_,q_,nE,X_,Y_,J_,Z_,eD,$R,k_,nD,sD,iD,pE,lD,hD,fD,mD,yD,wD,ID,CD,TD,RD,FD,DD,MD,zD,BD,UD,yR,$_,GD,HD,jD,KD,qD,XD,YD,JD,eO,tO,sO,aO,iO,uO,lO,cO,hO,C_,wE,pO,gO,mO,yO,SO,NO,IE,$O,TO,RO,B_];for(const e of AO)mr(e)},4189:(e,t,n)=>{var r=n(2203),s=Math.PI/180;r(r.S,"Math",{radians:function(e){return e*s}})},4219:(e,t,n)=>{var r=n(2203),s=n(8279),a=n(296),i=(n(1226).Reflect||{}).apply,o=Function.apply;r(r.S+r.F*!n(1508)((function(){i((function(){}))})),"Reflect",{apply:function(e,t,n){var r=s(e),u=a(n);return i?i(r,t,u):o.call(r,t,u)}})},4247:(e,t,n)=>{"use strict";var r=n(2203),s=n(8279),a=n(5482),i=n(1508),o=[].sort,u=[1,2,3];r(r.P+r.F*(i((function(){u.sort(void 0)}))||!i((function(){u.sort(null)}))||!n(6688)(o)),"Array",{sort:function(e){return void 0===e?o.call(a(this)):o.call(a(this),s(e))}})},4348:(e,t,n)=>{"use strict";var r=n(2203),s=n(5482),a=n(7988),i=n(2263),o=n(8805).f;n(1711)&&r(r.P+n(1845),"Object",{__lookupSetter__:function(e){var t,n=s(this),r=a(e,!0);do{if(t=o(n,r))return t.set}while(n=i(n))}})},4384:(e,t,n)=>{var r=n(7238),s=n(9370)("iterator"),a=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||a[s]===e)}},4419:(e,t,n)=>{"use strict";var r=n(2203),s=n(4473),a=[].join;r(r.P+r.F*(n(2725)!=Object||!n(6688)(a)),"Array",{join:function(e){return a.call(s(this),void 0===e?",":e)}})},4422:(e,t,n)=>{"use strict";var r=n(1226),s=n(6435),a=n(1711),i=n(9370)("species");e.exports=function(e){var t=r[e];a&&t&&!t[i]&&s.f(t,i,{configurable:!0,get:function(){return this}})}},4424:function(e,t,n){!function(t){"use strict";var n,r=Object.prototype,s=r.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",u=a.toStringTag||"@@toStringTag",l=t.regeneratorRuntime;if(l)e.exports=l;else{(l=t.regeneratorRuntime=e.exports).wrap=y;var c="suspendedStart",h="suspendedYield",d="executing",p="completed",f={},g={};g[i]=function(){return this};var m=Object.getPrototypeOf,b=m&&m(m(R([])));b&&b!==r&&s.call(b,i)&&(g=b);var x=I.prototype=w.prototype=Object.create(g);k.prototype=x.constructor=I,I.constructor=k,I[u]=k.displayName="GeneratorFunction",l.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===k||"GeneratorFunction"===(t.displayName||t.name))},l.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,I):(e.__proto__=I,u in e||(e[u]="GeneratorFunction")),e.prototype=Object.create(x),e},l.awrap=function(e){return{__await:e}},S(C.prototype),C.prototype[o]=function(){return this},l.AsyncIterator=C,l.async=function(e,t,n,r){var s=new C(y(e,t,n,r));return l.isGeneratorFunction(t)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},S(x),x[u]="Generator",x[i]=function(){return this},x.toString=function(){return"[object Generator]"},l.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},l.values=R,E.prototype={constructor:E,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(T),!e)for(var t in this)"t"===t.charAt(0)&&s.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=n)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(r,s){return o.type="throw",o.arg=e,t.next=r,s&&(t.method="next",t.arg=n),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var u=s.call(i,"catchLoc"),l=s.call(i,"finallyLoc");if(u&&l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&s.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var a=r;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,f):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),f},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),f}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var s=r.arg;T(n)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:R(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=n),f}}}function y(e,t,n,r){var s=t&&t.prototype instanceof w?t:w,a=Object.create(s.prototype),i=new E(r||[]);return a._invoke=function(e,t,n){var r=c;return function(s,a){if(r===d)throw new Error("Generator is already running");if(r===p){if("throw"===s)throw a;return A()}for(n.method=s,n.arg=a;;){var i=n.delegate;if(i){var o=N(i,n);if(o){if(o===f)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===c)throw r=p,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=d;var u=v(e,t,n);if("normal"===u.type){if(r=n.done?p:h,u.arg===f)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r=p,n.method="throw",n.arg=u.arg)}}}(e,n,i),a}function v(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function w(){}function k(){}function I(){}function S(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function C(e){function n(t,r,a,i){var o=v(e[t],e,r);if("throw"!==o.type){var u=o.arg,l=u.value;return l&&"object"==typeof l&&s.call(l,"__await")?Promise.resolve(l.__await).then((function(e){n("next",e,a,i)}),(function(e){n("throw",e,a,i)})):Promise.resolve(l).then((function(e){u.value=e,a(u)}),i)}i(o.arg)}var r;"object"==typeof t.process&&t.process.domain&&(n=t.process.domain.bind(n)),this._invoke=function(e,t){function s(){return new Promise((function(r,s){n(e,t,r,s)}))}return r=r?r.then(s,s):s()}}function N(e,t){var r=e.iterator[t.method];if(r===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=n,N(e,t),"throw"===t.method))return f;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return f}var s=v(r,e.iterator,t.arg);if("throw"===s.type)return t.method="throw",t.arg=s.arg,t.delegate=null,f;var a=s.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=n),t.delegate=null,f):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,f)}function $(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function E(e){this.tryEntries=[{tryLoc:"root"}],e.forEach($,this),this.reset(!0)}function R(e){if(e){var t=e[i];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,a=function t(){for(;++r<e.length;)if(s.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=n,t.done=!0,t};return a.next=a}}return{next:A}}function A(){return{value:n,done:!0}}}("object"==typeof n.g?n.g:"object"==typeof window?window:"object"==typeof self?self:this)},4473:(e,t,n)=>{var r=n(2725),s=n(3116);e.exports=function(e){return r(s(e))}},4483:(e,t,n)=>{var r=n(2203);r(r.P+r.R,"Set",{toJSON:n(70)("Set")})},4535:(e,t,n)=>{var r=n(2203);r(r.S,"Array",{isArray:n(9721)})},4540:(e,t,n)=>{"use strict";var r,s,a=n(2506),i=RegExp.prototype.exec,o=String.prototype.replace,u=i,l="lastIndex",c=(r=/a/,s=/b*/g,i.call(r,"a"),i.call(s,"a"),0!==r[l]||0!==s[l]),h=void 0!==/()??/.exec("")[1];(c||h)&&(u=function(e){var t,n,r,s,u=this;return h&&(n=new RegExp("^"+u.source+"$(?!\\s)",a.call(u))),c&&(t=u[l]),r=i.call(u,e),c&&r&&(u[l]=u.global?r.index+r[0].length:t),h&&r&&r.length>1&&o.call(r[0],n,(function(){for(s=1;s<arguments.length-2;s++)void 0===arguments[s]&&(r[s]=void 0)})),r}),e.exports=u},4614:(e,t,n)=>{"use strict";n(6984)("small",(function(e){return function(){return e(this,"small","","")}}))},4620:(e,t,n)=>{var r=n(2203),s=n(2263),a=n(296);r(r.S,"Reflect",{getPrototypeOf:function(e){return s(a(e))}})},4622:(e,t,n)=>{var r=n(373),s=n(1226).document,a=r(s)&&r(s.createElement);e.exports=function(e){return a?s.createElement(e):{}}},4636:(e,t,n)=>{var r=n(373),s=n(1038).set;e.exports=function(e,t,n){var a,i=t.constructor;return i!==n&&"function"==typeof i&&(a=i.prototype)!==n.prototype&&r(a)&&s&&s(e,a),e}},4651:(e,t,n)=>{"use strict";var r=n(2203),s=n(3922),a=n(1226),i=n(5690),o=n(3113);r(r.P+r.R,"Promise",{finally:function(e){var t=i(this,s.Promise||a.Promise),n="function"==typeof e;return this.then(n?function(n){return o(t,e()).then((function(){return n}))}:e,n?function(n){return o(t,e()).then((function(){throw n}))}:e)}})},4673:e=>{e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},4689:(e,t,n)=>{"use strict";var r=n(1226),s=n(2203),a=n(8335),i=n(8461),o=n(9672),u=n(1250),l=n(2836),c=n(373),h=n(1508),d=n(127),p=n(256),f=n(4636);e.exports=function(e,t,n,g,m,b){var x=r[e],y=x,v=m?"set":"add",w=y&&y.prototype,k={},I=function(e){var t=w[e];a(w,e,"delete"==e||"has"==e?function(e){return!(b&&!c(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return b&&!c(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof y&&(b||w.forEach&&!h((function(){(new y).entries().next()})))){var S=new y,C=S[v](b?{}:-0,1)!=S,N=h((function(){S.has(1)})),$=d((function(e){new y(e)})),T=!b&&h((function(){for(var e=new y,t=5;t--;)e[v](t,t);return!e.has(-0)}));$||((y=t((function(t,n){l(t,y,e);var r=f(new x,t,y);return null!=n&&u(n,m,r[v],r),r}))).prototype=w,w.constructor=y),(N||T)&&(I("delete"),I("has"),m&&I("get")),(T||C)&&I(v),b&&w.clear&&delete w.clear}else y=g.getConstructor(t,e,m,v),i(y.prototype,n),o.NEED=!0;return p(y,e),k[e]=y,s(s.G+s.W+s.F*(y!=x),k),b||g.setStrong(y,e,m),y}},4775:(e,t,n)=>{var r=n(2203);r(r.S,"Number",{EPSILON:Math.pow(2,-52)})},4823:e=>{e.exports=function(e,t){var n=t===Object(t)?function(e){return t[e]}:t;return function(t){return String(t).replace(e,n)}}},4844:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},4860:(e,t,n)=>{var r=n(2203),s=n(8805).f,a=n(296);r(r.S,"Reflect",{deleteProperty:function(e,t){var n=s(a(e),t);return!(n&&!n.configurable)&&delete e[t]}})},4886:(e,t,n)=>{"use strict";var r=n(8436),s={};s[n(9370)("toStringTag")]="z",s+""!="[object z]"&&n(8335)(Object.prototype,"toString",(function(){return"[object "+r(this)+"]"}),!0)},4912:(e,t,n)=>{"use strict";var r=n(5482),s=n(777),a=n(5129);e.exports=function(e){for(var t=r(this),n=a(t.length),i=arguments.length,o=s(i>1?arguments[1]:void 0,n),u=i>2?arguments[2]:void 0,l=void 0===u?n:s(u,n);l>o;)t[o++]=e;return t}},4920:(e,t,n)=>{"use strict";n(1736);var r=n(8335),s=n(1073),a=n(1508),i=n(3116),o=n(9370),u=n(4540),l=o("species"),c=!a((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),h=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();e.exports=function(e,t,n){var d=o(e),p=!a((function(){var t={};return t[d]=function(){return 7},7!=""[e](t)})),f=p?!a((function(){var t=!1,n=/a/;return n.exec=function(){return t=!0,null},"split"===e&&(n.constructor={},n.constructor[l]=function(){return n}),n[d](""),!t})):void 0;if(!p||!f||"replace"===e&&!c||"split"===e&&!h){var g=/./[d],m=n(i,d,""[e],(function(e,t,n,r,s){return t.exec===u?p&&!s?{done:!0,value:g.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}})),b=m[0],x=m[1];r(String.prototype,e,b),s(RegExp.prototype,d,2==t?function(e,t){return x.call(e,this,t)}:function(e){return x.call(e,this)})}}},4991:(e,t,n)=>{var r=n(2203),s=n(2603);r(r.S+r.F*(s!=Math.expm1),"Math",{expm1:s})},5017:(e,t,n)=>{"use strict";var r=n(296),s=n(891),a=n(3091);n(4920)("search",1,(function(e,t,n,i){return[function(n){var r=e(this),s=null==n?void 0:n[t];return void 0!==s?s.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=i(n,e,this);if(t.done)return t.value;var o=r(e),u=String(this),l=o.lastIndex;s(l,0)||(o.lastIndex=0);var c=a(o,u);return s(o.lastIndex,l)||(o.lastIndex=l),null===c?-1:c.index}]}))},5053:(e,t,n)=>{var r=n(2203);r(r.S,"Number",{isNaN:function(e){return e!=e}})},5073:(e,t,n)=>{var r=n(2203),s=n(3116),a=n(1508),i=n(2119),o="["+i+"]",u=RegExp("^"+o+o+"*"),l=RegExp(o+o+"*$"),c=function(e,t,n){var s={},o=a((function(){return!!i[e]()||"​"!="​"[e]()})),u=s[e]=o?t(h):i[e];n&&(s[n]=u),r(r.P+r.F*o,"String",s)},h=c.trim=function(e,t){return e=String(s(e)),1&t&&(e=e.replace(u,"")),2&t&&(e=e.replace(l,"")),e};e.exports=c},5121:(e,t,n)=>{"use strict";var r=n(1226),s=n(6073),a=n(6861),i=n(4636),o=n(7988),u=n(1508),l=n(6971).f,c=n(8805).f,h=n(6435).f,d=n(5073).trim,p="Number",f=r[p],g=f,m=f.prototype,b=a(n(3747)(m))==p,x="trim"in String.prototype,y=function(e){var t=o(e,!1);if("string"==typeof t&&t.length>2){var n,r,s,a=(t=x?t.trim():d(t,3)).charCodeAt(0);if(43===a||45===a){if(88===(n=t.charCodeAt(2))||120===n)return NaN}else if(48===a){switch(t.charCodeAt(1)){case 66:case 98:r=2,s=49;break;case 79:case 111:r=8,s=55;break;default:return+t}for(var i,u=t.slice(2),l=0,c=u.length;l<c;l++)if((i=u.charCodeAt(l))<48||i>s)return NaN;return parseInt(u,r)}}return+t};if(!f(" 0o1")||!f("0b1")||f("+0x1")){f=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof f&&(b?u((function(){m.valueOf.call(n)})):a(n)!=p)?i(new g(y(t)),n,f):y(t)};for(var v,w=n(1711)?l(g):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),k=0;w.length>k;k++)s(g,v=w[k])&&!s(f,v)&&h(f,v,c(g,v));f.prototype=m,m.constructor=f,n(8335)(r,p,f)}},5129:(e,t,n)=>{var r=n(7299),s=Math.min;e.exports=function(e){return e>0?s(r(e),9007199254740991):0}},5135:(e,t,n)=>{var r=n(2203),s=n(296),a=Object.isExtensible;r(r.S,"Reflect",{isExtensible:function(e){return s(e),!a||a(e)}})},5167:(e,t,n)=>{"use strict";n(6984)("fixed",(function(e){return function(){return e(this,"tt","","")}}))},5220:(e,t,n)=>{"use strict";var r=n(2203),s=n(5129),a=n(762),i="endsWith",o=""[i];r(r.P+r.F*n(7735)(i),"String",{endsWith:function(e){var t=a(this,e,i),n=arguments.length>1?arguments[1]:void 0,r=s(t.length),u=void 0===n?r:Math.min(s(n),r),l=String(e);return o?o.call(t,l,u):t.slice(u-l.length,u)===l}})},5231:(e,t,n)=>{var r=n(2203),s=n(4473),a=n(5129);r(r.S,"String",{raw:function(e){for(var t=s(e.raw),n=a(t.length),r=arguments.length,i=[],o=0;n>o;)i.push(String(t[o++])),o<r&&i.push(String(arguments[o]));return i.join("")}})},5237:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},5239:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{signbit:function(e){return(e=+e)!=e?e:0==e?1/e==1/0:e>0}})},5292:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],o=0;o<e.length;o++){var u=e[o],l=r.base?u[0]+r.base:u[0],c=a[l]||0,h="".concat(l," ").concat(c);a[l]=c+1;var d=n(h),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var f=s(p,r);r.byIndex=o,t.splice(o,0,{identifier:h,updater:f,references:1})}i.push(h)}return i}function s(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,s){var a=r(e=e||[],s=s||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var o=n(a[i]);t[o].references--}for(var u=r(e,s),l=0;l<a.length;l++){var c=n(a[l]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}a=u}}},5350:(e,t,n)=>{var r=n(2203),s=n(8702);r(r.S+r.F*(Number.parseInt!=s),"Number",{parseInt:s})},5383:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},5420:(e,t,n)=>{var r=n(2203),s=Math.atanh;r(r.S+r.F*!(s&&1/s(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},5428:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},5434:(e,t,n)=>{var r=n(2203);r(r.P,"String",{repeat:n(9402)})},5470:(e,t,n)=>{n(8693)("Int32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},5482:(e,t,n)=>{var r=n(3116);e.exports=function(e){return Object(r(e))}},5507:(e,t,n)=>{var r=n(7101),s=n(1888);e.exports=Object.keys||function(e){return r(e,s)}},5512:(e,t,n)=>{var r=n(2203);r(r.G+r.W+r.F*!n(7361).ABV,{DataView:n(9748).DataView})},5539:(e,t,n)=>{"use strict";n(6984)("strike",(function(e){return function(){return e(this,"strike","","")}}))},5549:(e,t,n)=>{"use strict";n(6984)("sup",(function(e){return function(){return e(this,"sup","","")}}))},5585:(e,t,n)=>{"use strict";var r,s,a,i,o=n(9618),u=n(1226),l=n(9680),c=n(8436),h=n(2203),d=n(373),p=n(8279),f=n(2836),g=n(1250),m=n(5690),b=n(7544).set,x=n(1580)(),y=n(3126),v=n(8668),w=n(5806),k=n(3113),I="Promise",S=u.TypeError,C=u.process,N=C&&C.versions,$=N&&N.v8||"",T=u[I],E="process"==c(C),R=function(){},A=s=y.f,F=!!function(){try{var e=T.resolve(1),t=(e.constructor={})[n(9370)("species")]=function(e){e(R,R)};return(E||"function"==typeof PromiseRejectionEvent)&&e.then(R)instanceof t&&0!==$.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(e){}}(),_=function(e){var t;return!(!d(e)||"function"!=typeof(t=e.then))&&t},D=function(e,t){if(!e._n){e._n=!0;var n=e._c;x((function(){for(var r=e._v,s=1==e._s,a=0,i=function(t){var n,a,i,o=s?t.ok:t.fail,u=t.resolve,l=t.reject,c=t.domain;try{o?(s||(2==e._h&&L(e),e._h=1),!0===o?n=r:(c&&c.enter(),n=o(r),c&&(c.exit(),i=!0)),n===t.promise?l(S("Promise-chain cycle")):(a=_(n))?a.call(n,u,l):u(n)):l(r)}catch(e){c&&!i&&c.exit(),l(e)}};n.length>a;)i(n[a++]);e._c=[],e._n=!1,t&&!e._h&&O(e)}))}},O=function(e){b.call(u,(function(){var t,n,r,s=e._v,a=M(e);if(a&&(t=v((function(){E?C.emit("unhandledRejection",s,e):(n=u.onunhandledrejection)?n({promise:e,reason:s}):(r=u.console)&&r.error&&r.error("Unhandled promise rejection",s)})),e._h=E||M(e)?2:1),e._a=void 0,a&&t.e)throw t.v}))},M=function(e){return 1!==e._h&&0===(e._a||e._c).length},L=function(e){b.call(u,(function(){var t;E?C.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})}))},z=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),D(t,!0))},P=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw S("Promise can't be resolved itself");(t=_(e))?x((function(){var r={_w:n,_d:!1};try{t.call(e,l(P,r,1),l(z,r,1))}catch(e){z.call(r,e)}})):(n._v=e,n._s=1,D(n,!1))}catch(e){z.call({_w:n,_d:!1},e)}}};F||(T=function(e){f(this,T,I,"_h"),p(e),r.call(this);try{e(l(P,this,1),l(z,this,1))}catch(e){z.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(8461)(T.prototype,{then:function(e,t){var n=A(m(this,T));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=E?C.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&D(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),a=function(){var e=new r;this.promise=e,this.resolve=l(P,e,1),this.reject=l(z,e,1)},y.f=A=function(e){return e===T||e===i?new a(e):s(e)}),h(h.G+h.W+h.F*!F,{Promise:T}),n(256)(T,I),n(4422)(I),i=n(3922)[I],h(h.S+h.F*!F,I,{reject:function(e){var t=A(this);return(0,t.reject)(e),t.promise}}),h(h.S+h.F*(o||!F),I,{resolve:function(e){return k(o&&this===i?T:this,e)}}),h(h.S+h.F*!(F&&n(127)((function(e){T.all(e).catch(R)}))),I,{all:function(e){var t=this,n=A(t),r=n.resolve,s=n.reject,a=v((function(){var n=[],a=0,i=1;g(e,!1,(function(e){var o=a++,u=!1;n.push(void 0),i++,t.resolve(e).then((function(e){u||(u=!0,n[o]=e,--i||r(n))}),s)})),--i||r(n)}));return a.e&&s(a.v),n.promise},race:function(e){var t=this,n=A(t),r=n.reject,s=v((function(){g(e,!1,(function(e){t.resolve(e).then(n.resolve,r)}))}));return s.e&&r(s.v),n.promise}})},5633:(e,t,n)=>{"use strict";n(5073)("trim",(function(e){return function(){return e(this,3)}}))},5690:(e,t,n)=>{var r=n(296),s=n(8279),a=n(9370)("species");e.exports=function(e,t){var n,i=r(e).constructor;return void 0===i||null==(n=r(i)[a])?t:s(n)}},5725:(e,t,n)=>{n(2775)("Set")},5731:(e,t,n)=>{var r=n(2203);r(r.S,"Object",{create:n(3747)})},5782:(e,t,n)=>{var r=n(2203),s=180/Math.PI;r(r.S,"Math",{degrees:function(e){return e*s}})},5806:(e,t,n)=>{var r=n(1226).navigator;e.exports=r&&r.userAgent||""},5818:(e,t,n)=>{n(1711)&&"g"!=/./g.flags&&n(6435).f(RegExp.prototype,"flags",{configurable:!0,get:n(2506)})},5907:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{RAD_PER_DEG:180/Math.PI})},5931:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{DEG_PER_RAD:Math.PI/180})},5998:(e,t,n)=>{var r=n(2203);r(r.S,"Number",{isInteger:n(8054)})},6048:(e,t,n)=>{var r=n(2203);r(r.S,"Object",{setPrototypeOf:n(1038).set})},6073:e=>{var t={}.hasOwnProperty;e.exports=function(e,n){return t.call(e,n)}},6102:(e,t,n)=>{n(2775)("WeakSet")},6129:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},6203:(e,t,n)=>{"use strict";var r=n(2203),s=n(7299),a=n(6950),i=n(9402),o=1..toFixed,u=Math.floor,l=[0,0,0,0,0,0],c="Number.toFixed: incorrect invocation!",h="0",d=function(e,t){for(var n=-1,r=t;++n<6;)r+=e*l[n],l[n]=r%1e7,r=u(r/1e7)},p=function(e){for(var t=6,n=0;--t>=0;)n+=l[t],l[t]=u(n/e),n=n%e*1e7},f=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==l[e]){var n=String(l[e]);t=""===t?n:t+i.call(h,7-n.length)+n}return t},g=function(e,t,n){return 0===t?n:t%2==1?g(e,t-1,n*e):g(e*e,t/2,n)};r(r.P+r.F*(!!o&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!n(1508)((function(){o.call({})}))),"Number",{toFixed:function(e){var t,n,r,o,u=a(this,c),l=s(e),m="",b=h;if(l<0||l>20)throw RangeError(c);if(u!=u)return"NaN";if(u<=-1e21||u>=1e21)return String(u);if(u<0&&(m="-",u=-u),u>1e-21)if(t=function(e){for(var t=0,n=e;n>=4096;)t+=12,n/=4096;for(;n>=2;)t+=1,n/=2;return t}(u*g(2,69,1))-69,n=t<0?u*g(2,-t,1):u/g(2,t,1),n*=4503599627370496,(t=52-t)>0){for(d(0,n),r=l;r>=7;)d(1e7,0),r-=7;for(d(g(10,r,1),0),r=t-1;r>=23;)p(1<<23),r-=23;p(1<<r),d(1,1),p(2),b=f()}else d(0,n),d(1<<-t,0),b=f()+i.call(h,l);return l>0?m+((o=b.length)<=l?"0."+i.call(h,l-o)+b:b.slice(0,o-l)+"."+b.slice(o-l)):m+b}})},6291:(e,t,n)=>{var r=n(9370)("toPrimitive"),s=Date.prototype;r in s||n(1073)(s,r,n(7935))},6307:(e,t,n)=>{var r=n(8160),s=n(2169),a=n(1723),i=n(5383),o=n(5237),u=n(1065),l=n(8077);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},6389:(e,t,n)=>{"use strict";var r=n(296),s=n(5482),a=n(5129),i=n(7299),o=n(544),u=n(3091),l=Math.max,c=Math.min,h=Math.floor,d=/\$([$&`']|\d\d?|<[^>]*>)/g,p=/\$([$&`']|\d\d?)/g;n(4920)("replace",2,(function(e,t,n,f){return[function(r,s){var a=e(this),i=null==r?void 0:r[t];return void 0!==i?i.call(r,a,s):n.call(String(a),r,s)},function(e,t){var s=f(n,e,this,t);if(s.done)return s.value;var h=r(e),d=String(this),p="function"==typeof t;p||(t=String(t));var m=h.global;if(m){var b=h.unicode;h.lastIndex=0}for(var x=[];;){var y=u(h,d);if(null===y)break;if(x.push(y),!m)break;""===String(y[0])&&(h.lastIndex=o(d,a(h.lastIndex),b))}for(var v,w="",k=0,I=0;I<x.length;I++){y=x[I];for(var S=String(y[0]),C=l(c(i(y.index),d.length),0),N=[],$=1;$<y.length;$++)N.push(void 0===(v=y[$])?v:String(v));var T=y.groups;if(p){var E=[S].concat(N,C,d);void 0!==T&&E.push(T);var R=String(t.apply(void 0,E))}else R=g(S,d,C,N,T,t);C>=k&&(w+=d.slice(k,C)+R,k=C+S.length)}return w+d.slice(k)}];function g(e,t,r,a,i,o){var u=r+e.length,l=a.length,c=p;return void 0!==i&&(i=s(i),c=d),n.call(o,c,(function(n,s){var o;switch(s.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,r);case"'":return t.slice(u);case"<":o=i[s.slice(1,-1)];break;default:var c=+s;if(0===c)return n;if(c>l){var d=h(c/10);return 0===d?n:d<=l?void 0===a[d-1]?s.charAt(1):a[d-1]+s.charAt(1):n}o=a[c-1]}return void 0===o?"":o}))}}))},6394:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{umulh:function(e,t){var n=65535,r=+e,s=+t,a=r&n,i=s&n,o=r>>>16,u=s>>>16,l=(o*i>>>0)+(a*i>>>16);return o*u+(l>>>16)+((a*u>>>0)+(l&n)>>>16)}})},6435:(e,t,n)=>{var r=n(296),s=n(8696),a=n(7988),i=Object.defineProperty;t.f=n(1711)?Object.defineProperty:function(e,t,n){if(r(e),t=a(t,!0),r(n),s)try{return i(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},6465:(e,t,n)=>{var r=n(1226).parseFloat,s=n(5073).trim;e.exports=1/r(n(2119)+"-0")!=-1/0?function(e){var t=s(String(e),3),n=r(t);return 0===n&&"-"==t.charAt(0)?-0:n}:r},6485:(e,t,n)=>{n(8693)("Uint32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},6497:(e,t,n)=>{"use strict";var r,s=n(1226),a=n(1119)(0),i=n(8335),o=n(9672),u=n(1786),l=n(3142),c=n(373),h=n(9407),d=n(9407),p=!s.ActiveXObject&&"ActiveXObject"in s,f="WeakMap",g=o.getWeak,m=Object.isExtensible,b=l.ufstore,x=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},y={get:function(e){if(c(e)){var t=g(e);return!0===t?b(h(this,f)).get(e):t?t[this._i]:void 0}},set:function(e,t){return l.def(h(this,f),e,t)}},v=e.exports=n(4689)(f,x,y,l,!0,!0);d&&p&&(u((r=l.getConstructor(x,f)).prototype,y),o.NEED=!0,a(["delete","has","get","set"],(function(e){var t=v.prototype,n=t[e];i(t,e,(function(t,s){if(c(t)&&!m(t)){this._f||(this._f=new r);var a=this._f[e](t,s);return"set"==e?this:a}return n.call(this,t,s)}))})))},6548:(e,t,n)=>{"use strict";var r=n(2203),s=n(762),a="includes";r(r.P+r.F*n(7735)(a),"String",{includes:function(e){return!!~s(this,e,a).indexOf(e,arguments.length>1?arguments[1]:void 0)}})},6622:(e,t,n)=>{"use strict";var r=n(9721),s=n(373),a=n(5129),i=n(9680),o=n(9370)("isConcatSpreadable");e.exports=function e(t,n,u,l,c,h,d,p){for(var f,g,m=c,b=0,x=!!d&&i(d,p,3);b<l;){if(b in u){if(f=x?x(u[b],b,n):u[b],g=!1,s(f)&&(g=void 0!==(g=f[o])?!!g:r(f)),g&&h>0)m=e(t,n,f,a(f.length),m,h-1)-1;else{if(m>=9007199254740991)throw TypeError();t[m]=f}m++}b++}return m}},6650:(e,t,n)=>{var r=n(6971),s=n(2e3),a=n(296),i=n(1226).Reflect;e.exports=i&&i.ownKeys||function(e){var t=r.f(a(e)),n=s.f;return n?t.concat(n(e)):t}},6656:(e,t,n)=>{var r=n(1250);e.exports=function(e,t){var n=[];return r(e,!1,n.push,n,t),n}},6688:(e,t,n)=>{"use strict";var r=n(1508);e.exports=function(e,t){return!!e&&r((function(){t?e.call(null,(function(){}),1):e.call(null)}))}},6697:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{iaddh:function(e,t,n,r){var s=e>>>0,a=n>>>0;return(t>>>0)+(r>>>0)+((s&a|(s|a)&~(s+a>>>0))>>>31)|0}})},6734:(e,t,n)=>{"use strict";var r=n(2203),s=n(683);r(r.P+r.F*!n(6688)([].reduceRight,!0),"Array",{reduceRight:function(e){return s(this,e,arguments.length,arguments[1],!0)}})},6778:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{isubh:function(e,t,n,r){var s=e>>>0,a=n>>>0;return(t>>>0)-(r>>>0)-((~s&a|(s^~a)&s-a>>>0)>>>31)|0}})},6861:e=>{var t={}.toString;e.exports=function(e){return t.call(e).slice(8,-1)}},6867:(e,t,n)=>{n(1231)("getOwnPropertyNames",(function(){return n(4073).f}))},6875:(e,t,n)=>{"use strict";var r=n(2203),s=n(768)(!0),a=n(1508)((function(){return"𠮷"!=="𠮷".at(0)}));r(r.P+r.F*a,"String",{at:function(e){return s(this,e)}})},6884:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},6945:(e,t,n)=>{n(8693)("Float32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},6950:(e,t,n)=>{var r=n(6861);e.exports=function(e,t){if("number"!=typeof e&&"Number"!=r(e))throw TypeError(t);return+e}},6971:(e,t,n)=>{var r=n(7101),s=n(1888).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,s)}},6984:(e,t,n)=>{var r=n(2203),s=n(1508),a=n(3116),i=/"/g,o=function(e,t,n,r){var s=String(a(e)),o="<"+t;return""!==n&&(o+=" "+n+'="'+String(r).replace(i,"&quot;")+'"'),o+">"+s+"</"+t+">"};e.exports=function(e,t){var n={};n[e]=t(o),r(r.P+r.F*s((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",n)}},7025:(e,t,n)=>{var r=n(2203),s=n(1821);r(r.P+r.F*(Date.prototype.toISOString!==s),"Date",{toISOString:s})},7076:(e,t,n)=>{"use strict";n(6984)("anchor",(function(e){return function(t){return e(this,"a","name",t)}}))},7101:(e,t,n)=>{var r=n(6073),s=n(4473),a=n(3052)(!1),i=n(2450)("IE_PROTO");e.exports=function(e,t){var n,o=s(e),u=0,l=[];for(n in o)n!=i&&r(o,n)&&l.push(n);for(;t.length>u;)r(o,n=t[u++])&&(~a(l,n)||l.push(n));return l}},7127:(e,t,n)=>{var r=n(2203),s=Math.asinh;r(r.S+r.F*!(s&&1/s(0)>0),"Math",{asinh:function e(t){return isFinite(t=+t)&&0!=t?t<0?-e(-t):Math.log(t+Math.sqrt(t*t+1)):t}})},7131:e=>{var t=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++t+n).toString(36))}},7148:(e,t,n)=>{var r=n(5482),s=n(2263);n(1231)("getPrototypeOf",(function(){return function(e){return s(r(e))}}))},7149:(e,t,n)=>{n(4422)("Array")},7158:(e,t,n)=>{"use strict";var r=n(1226),s=n(6073),a=n(1711),i=n(2203),o=n(8335),u=n(9672).KEY,l=n(1508),c=n(3056),h=n(256),d=n(7131),p=n(9370),f=n(852),g=n(8428),m=n(2989),b=n(9721),x=n(296),y=n(373),v=n(5482),w=n(4473),k=n(7988),I=n(2360),S=n(3747),C=n(4073),N=n(8805),$=n(2e3),T=n(6435),E=n(5507),R=N.f,A=T.f,F=C.f,_=r.Symbol,D=r.JSON,O=D&&D.stringify,M="prototype",L=p("_hidden"),z=p("toPrimitive"),P={}.propertyIsEnumerable,B=c("symbol-registry"),W=c("symbols"),U=c("op-symbols"),V=Object[M],G="function"==typeof _&&!!$.f,H=r.QObject,j=!H||!H[M]||!H[M].findChild,K=a&&l((function(){return 7!=S(A({},"a",{get:function(){return A(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=R(V,t);r&&delete V[t],A(e,t,n),r&&e!==V&&A(V,t,r)}:A,q=function(e){var t=W[e]=S(_[M]);return t._k=e,t},X=G&&"symbol"==typeof _.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof _},Y=function(e,t,n){return e===V&&Y(U,t,n),x(e),t=k(t,!0),x(n),s(W,t)?(n.enumerable?(s(e,L)&&e[L][t]&&(e[L][t]=!1),n=S(n,{enumerable:I(0,!1)})):(s(e,L)||A(e,L,I(1,{})),e[L][t]=!0),K(e,t,n)):A(e,t,n)},J=function(e,t){x(e);for(var n,r=m(t=w(t)),s=0,a=r.length;a>s;)Y(e,n=r[s++],t[n]);return e},Z=function(e){var t=P.call(this,e=k(e,!0));return!(this===V&&s(W,e)&&!s(U,e))&&(!(t||!s(this,e)||!s(W,e)||s(this,L)&&this[L][e])||t)},Q=function(e,t){if(e=w(e),t=k(t,!0),e!==V||!s(W,t)||s(U,t)){var n=R(e,t);return!n||!s(W,t)||s(e,L)&&e[L][t]||(n.enumerable=!0),n}},ee=function(e){for(var t,n=F(w(e)),r=[],a=0;n.length>a;)s(W,t=n[a++])||t==L||t==u||r.push(t);return r},te=function(e){for(var t,n=e===V,r=F(n?U:w(e)),a=[],i=0;r.length>i;)!s(W,t=r[i++])||n&&!s(V,t)||a.push(W[t]);return a};G||(o((_=function(){if(this instanceof _)throw TypeError("Symbol is not a constructor!");var e=d(arguments.length>0?arguments[0]:void 0),t=function(n){this===V&&t.call(U,n),s(this,L)&&s(this[L],e)&&(this[L][e]=!1),K(this,e,I(1,n))};return a&&j&&K(V,e,{configurable:!0,set:t}),q(e)})[M],"toString",(function(){return this._k})),N.f=Q,T.f=Y,n(6971).f=C.f=ee,n(9661).f=Z,$.f=te,a&&!n(9618)&&o(V,"propertyIsEnumerable",Z,!0),f.f=function(e){return q(p(e))}),i(i.G+i.W+i.F*!G,{Symbol:_});for(var ne="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),re=0;ne.length>re;)p(ne[re++]);for(var se=E(p.store),ae=0;se.length>ae;)g(se[ae++]);i(i.S+i.F*!G,"Symbol",{for:function(e){return s(B,e+="")?B[e]:B[e]=_(e)},keyFor:function(e){if(!X(e))throw TypeError(e+" is not a symbol!");for(var t in B)if(B[t]===e)return t},useSetter:function(){j=!0},useSimple:function(){j=!1}}),i(i.S+i.F*!G,"Object",{create:function(e,t){return void 0===t?S(e):J(S(e),t)},defineProperty:Y,defineProperties:J,getOwnPropertyDescriptor:Q,getOwnPropertyNames:ee,getOwnPropertySymbols:te});var ie=l((function(){$.f(1)}));i(i.S+i.F*ie,"Object",{getOwnPropertySymbols:function(e){return $.f(v(e))}}),D&&i(i.S+i.F*(!G||l((function(){var e=_();return"[null]"!=O([e])||"{}"!=O({a:e})||"{}"!=O(Object(e))}))),"JSON",{stringify:function(e){for(var t,n,r=[e],s=1;arguments.length>s;)r.push(arguments[s++]);if(n=t=r[1],(y(t)||void 0!==e)&&!X(e))return b(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!X(t))return t}),r[1]=t,O.apply(D,r)}}),_[M][z]||n(1073)(_[M],z,_[M].valueOf),h(_,"Symbol"),h(Math,"Math",!0),h(r.JSON,"JSON",!0)},7163:(e,t,n)=>{"use strict";var r=n(2203),s=n(3116),a=n(5129),i=n(4047),o=n(2506),u=RegExp.prototype,l=function(e,t){this._r=e,this._s=t};n(9164)(l,"RegExp String",(function(){var e=this._r.exec(this._s);return{value:e,done:null===e}})),r(r.P,"String",{matchAll:function(e){if(s(this),!i(e))throw TypeError(e+" is not a regexp!");var t=String(this),n="flags"in u?String(e.flags):o.call(e),r=new RegExp(e.source,~n.indexOf("g")?n:"g"+n);return r.lastIndex=a(e.lastIndex),new l(r,t)}})},7231:(e,t,n)=>{var r=n(2203);r(r.S,"Reflect",{has:function(e,t){return t in e}})},7238:e=>{e.exports={}},7264:(e,t,n)=>{var r=n(2203),s=n(777),a=String.fromCharCode,i=String.fromCodePoint;r(r.S+r.F*(!!i&&1!=i.length),"String",{fromCodePoint:function(e){for(var t,n=[],r=arguments.length,i=0;r>i;){if(t=+arguments[i++],s(t,1114111)!==t)throw RangeError(t+" is not a valid code point");n.push(t<65536?a(t):a(55296+((t-=65536)>>10),t%1024+56320))}return n.join("")}})},7277:(e,t,n)=>{"use strict";var r=n(2203),s=n(683);r(r.P+r.F*!n(6688)([].reduce,!0),"Array",{reduce:function(e){return s(this,e,arguments.length,arguments[1],!1)}})},7299:e=>{var t=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:t)(e)}},7353:(e,t,n)=>{"use strict";var r=n(2203),s=n(1508),a=n(6950),i=1..toPrecision;r(r.P+r.F*(s((function(){return"1"!==i.call(1,void 0)}))||!s((function(){i.call({})}))),"Number",{toPrecision:function(e){var t=a(this,"Number#toPrecision: incorrect invocation!");return void 0===e?i.call(t):i.call(t,e)}})},7361:(e,t,n)=>{for(var r,s=n(1226),a=n(1073),i=n(7131),o=i("typed_array"),u=i("view"),l=!(!s.ArrayBuffer||!s.DataView),c=l,h=0,d="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");h<9;)(r=s[d[h++]])?(a(r.prototype,o,!0),a(r.prototype,u,!0)):c=!1;e.exports={ABV:l,CONSTR:c,TYPED:o,VIEW:u}},7446:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{imulh:function(e,t){var n=65535,r=+e,s=+t,a=r&n,i=s&n,o=r>>16,u=s>>16,l=(o*i>>>0)+(a*i>>>16);return o*u+(l>>16)+((a*u>>>0)+(l&n)>>16)}})},7544:(e,t,n)=>{var r,s,a,i=n(9680),o=n(4673),u=n(680),l=n(4622),c=n(1226),h=c.process,d=c.setImmediate,p=c.clearImmediate,f=c.MessageChannel,g=c.Dispatch,m=0,b={},x="onreadystatechange",y=function(){var e=+this;if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},v=function(e){y.call(e.data)};d&&p||(d=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return b[++m]=function(){o("function"==typeof e?e:Function(e),t)},r(m),m},p=function(e){delete b[e]},"process"==n(6861)(h)?r=function(e){h.nextTick(i(y,e,1))}:g&&g.now?r=function(e){g.now(i(y,e,1))}:f?(a=(s=new f).port2,s.port1.onmessage=v,r=i(a.postMessage,a,1)):c.addEventListener&&"function"==typeof postMessage&&!c.importScripts?(r=function(e){c.postMessage(e+"","*")},c.addEventListener("message",v,!1)):r=x in l("script")?function(e){u.appendChild(l("script"))[x]=function(){u.removeChild(this),y.call(e)}}:function(e){setTimeout(i(y,e,1),0)}),e.exports={set:d,clear:p}},7583:(e,t,n)=>{"use strict";var r=n(6435),s=n(2360);e.exports=function(e,t,n){t in e?r.f(e,t,s(0,n)):e[t]=n}},7608:(e,t,n)=>{var r=n(2203),s=n(6861);r(r.S,"Error",{isError:function(e){return"Error"===s(e)}})},7650:(e,t,n)=>{"use strict";n(6984)("bold",(function(e){return function(){return e(this,"b","","")}}))},7700:(e,t,n)=>{var r=n(432),s=n(296),a=n(2263),i=r.has,o=r.key,u=function(e,t,n){if(i(e,t,n))return!0;var r=a(t);return null!==r&&u(e,r,n)};r.exp({hasMetadata:function(e,t){return u(e,s(t),arguments.length<3?void 0:o(arguments[2]))}})},7731:(e,t,n)=>{var r=n(2203),s=Math.imul;r(r.S+r.F*n(1508)((function(){return-5!=s(4294967295,5)||2!=s.length})),"Math",{imul:function(e,t){var n=65535,r=+e,s=+t,a=n&r,i=n&s;return 0|a*i+((n&r>>>16)*i+a*(n&s>>>16)<<16>>>0)}})},7735:(e,t,n)=>{var r=n(9370)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,!"/./"[e](t)}catch(e){}}return!0}},7800:(e,t,n)=>{n(8428)("asyncIterator")},7814:(e,t,n)=>{n(3882)("Map")},7830:(e,t,n)=>{var r=n(2203),s=n(1580)(),a=n(1226).process,i="process"==n(6861)(a);r(r.G,{asap:function(e){var t=i&&a.domain;s(t?t.bind(e):e)}})},7834:(e,t,n)=>{var r=n(2203),s=n(6650),a=n(4473),i=n(8805),o=n(7583);r(r.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,n,r=a(e),u=i.f,l=s(r),c={},h=0;l.length>h;)void 0!==(n=u(r,t=l[h++]))&&o(c,t,n);return c}})},7839:(e,t,n)=>{"use strict";var r=n(2203),s=n(5482),a=n(8279),i=n(6435);n(1711)&&r(r.P+n(1845),"Object",{__defineGetter__:function(e,t){i.f(s(this),e,{get:a(t),enumerable:!0,configurable:!0})}})},7848:(e,t,n)=>{"use strict";var r=n(2203),s=n(5482),a=n(7988),i=n(2263),o=n(8805).f;n(1711)&&r(r.P+n(1845),"Object",{__lookupGetter__:function(e){var t,n=s(this),r=a(e,!0);do{if(t=o(n,r))return t.get}while(n=i(n))}})},7882:(e,t,n)=>{var r=n(373);n(1231)("isFrozen",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},7904:(e,t,n)=>{var r=n(373),s=n(9672).onFreeze;n(1231)("freeze",(function(e){return function(t){return e&&r(t)?e(s(t)):t}}))},7935:(e,t,n)=>{"use strict";var r=n(296),s=n(7988),a="number";e.exports=function(e){if("string"!==e&&e!==a&&"default"!==e)throw TypeError("Incorrect hint");return s(r(this),e!=a)}},7979:(e,t,n)=>{"use strict";n(6984)("blink",(function(e){return function(){return e(this,"blink","","")}}))},7988:(e,t,n)=>{var r=n(373);e.exports=function(e,t){if(!r(e))return e;var n,s;if(t&&"function"==typeof(n=e.toString)&&!r(s=n.call(e)))return s;if("function"==typeof(n=e.valueOf)&&!r(s=n.call(e)))return s;if(!t&&"function"==typeof(n=e.toString)&&!r(s=n.call(e)))return s;throw TypeError("Can't convert object to primitive value")}},7997:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},8054:(e,t,n)=>{var r=n(373),s=Math.floor;e.exports=function(e){return!r(e)&&isFinite(e)&&s(e)===e}},8077:function(e,t,n){var r;!function(s,a,i){var o,u=256,l=i.pow(u,6),c=i.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,x(a)]}}():e,3),r),p=new f(r),y=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(i.random=e,t):e})(y,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*u+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(u)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(b(i.random(),a),e.exports){e.exports=p;try{o=n(382)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},8078:(e,t,n)=>{"use strict";var r=n(2203),s=n(4473),a=n(7299),i=n(5129),o=[].lastIndexOf,u=!!o&&1/[1].lastIndexOf(1,-0)<0;r(r.P+r.F*(u||!n(6688)(o)),"Array",{lastIndexOf:function(e){if(u)return o.apply(this,arguments)||0;var t=s(this),n=i(t.length),r=n-1;for(arguments.length>1&&(r=Math.min(r,a(arguments[1]))),r<0&&(r=n+r);r>=0;r--)if(r in t&&t[r]===e)return r||0;return-1}})},8091:(e,t,n)=>{"use strict";var r=n(2203),s=n(5482),a=n(8279),i=n(6435);n(1711)&&r(r.P+n(1845),"Object",{__defineSetter__:function(e,t){i.f(s(this),e,{set:a(t),enumerable:!0,configurable:!0})}})},8096:(e,t,n)=>{n(2775)("WeakMap")},8100:(e,t,n)=>{var r=n(2203),s=n(8054),a=Math.abs;r(r.S,"Number",{isSafeInteger:function(e){return s(e)&&a(e)<=9007199254740991}})},8140:(e,t,n)=>{var r=n(296);e.exports=function(e,t,n,s){try{return s?t(r(n)[0],n[1]):t(n)}catch(t){var a=e.return;throw void 0!==a&&r(a.call(e)),t}}},8158:(e,t,n)=>{var r=n(2203),s=n(9106)(!1);r(r.S,"Object",{values:function(e){return s(e)}})},8160:function(e,t,n){var r;!function(e,s){function a(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},8279:e=>{e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},8335:(e,t,n)=>{var r=n(1226),s=n(1073),a=n(6073),i=n(7131)("src"),o=n(9249),u="toString",l=(""+o).split(u);n(3922).inspectSource=function(e){return o.call(e)},(e.exports=function(e,t,n,o){var u="function"==typeof n;u&&(a(n,"name")||s(n,"name",t)),e[t]!==n&&(u&&(a(n,i)||s(n,i,e[t]?""+e[t]:l.join(String(t)))),e===r?e[t]=n:o?e[t]?e[t]=n:s(e,t,n):(delete e[t],s(e,t,n)))})(Function.prototype,u,(function(){return"function"==typeof this&&this[i]||o.call(this)}))},8428:(e,t,n)=>{var r=n(1226),s=n(3922),a=n(9618),i=n(852),o=n(6435).f;e.exports=function(e){var t=s.Symbol||(s.Symbol=a?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||o(t,e,{value:i.f(e)})}},8436:(e,t,n)=>{var r=n(6861),s=n(9370)("toStringTag"),a="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),s))?n:a?r(t):"Object"==(i=r(t))&&"function"==typeof t.callee?"Arguments":i}},8461:(e,t,n)=>{var r=n(8335);e.exports=function(e,t,n){for(var s in t)r(e,s,t[s],n);return e}},8481:(e,t,n)=>{var r=n(8772),s=n(6656),a=n(432),i=n(296),o=n(2263),u=a.keys,l=a.key,c=function(e,t){var n=u(e,t),a=o(e);if(null===a)return n;var i=c(a,t);return i.length?n.length?s(new r(n.concat(i))):i:n};a.exp({getMetadataKeys:function(e){return c(i(e),arguments.length<2?void 0:l(arguments[1]))}})},8497:(e,t,n)=>{"use strict";var r=n(8980),s=n(8558),a=n(7238),i=n(4473);e.exports=n(8507)(Array,"Array",(function(e,t){this._t=i(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,s(1)):s(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),a.Arguments=a.Array,r("keys"),r("values"),r("entries")},8507:(e,t,n)=>{"use strict";var r=n(9618),s=n(2203),a=n(8335),i=n(1073),o=n(7238),u=n(9164),l=n(256),c=n(2263),h=n(9370)("iterator"),d=!([].keys&&"next"in[].keys()),p="keys",f="values",g=function(){return this};e.exports=function(e,t,n,m,b,x,y){u(n,t,m);var v,w,k,I=function(e){if(!d&&e in $)return $[e];switch(e){case p:case f:return function(){return new n(this,e)}}return function(){return new n(this,e)}},S=t+" Iterator",C=b==f,N=!1,$=e.prototype,T=$[h]||$["@@iterator"]||b&&$[b],E=T||I(b),R=b?C?I("entries"):E:void 0,A="Array"==t&&$.entries||T;if(A&&(k=c(A.call(new e)))!==Object.prototype&&k.next&&(l(k,S,!0),r||"function"==typeof k[h]||i(k,h,g)),C&&T&&T.name!==f&&(N=!0,E=function(){return T.call(this)}),r&&!y||!d&&!N&&$[h]||i($,h,E),o[t]=E,o[S]=g,b)if(v={values:C?E:I(f),keys:x?E:I(p),entries:R},y)for(w in v)w in $||a($,w,v[w]);else s(s.P+s.F*(d||N),t,v);return v}},8512:(e,t,n)=>{var r=n(432),s=n(296),a=n(2263),i=r.has,o=r.get,u=r.key,l=function(e,t,n){if(i(e,t,n))return o(e,t,n);var r=a(t);return null!==r?l(e,r,n):void 0};r.exp({getMetadata:function(e,t){return l(e,s(t),arguments.length<3?void 0:u(arguments[2]))}})},8558:e=>{e.exports=function(e,t){return{value:t,done:!!e}}},8645:(e,t,n)=>{var r=n(373);n(1231)("isExtensible",(function(e){return function(t){return!!r(t)&&(!e||e(t))}}))},8668:e=>{e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},8677:(e,t,n)=>{"use strict";var r=n(2203),s=n(5129),a=n(762),i="startsWith",o=""[i];r(r.P+r.F*n(7735)(i),"String",{startsWith:function(e){var t=a(this,e,i),n=s(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return o?o.call(t,r,n):t.slice(n,n+r.length)===r}})},8693:(e,t,n)=>{"use strict";if(n(1711)){var r=n(9618),s=n(1226),a=n(1508),i=n(2203),o=n(7361),u=n(9748),l=n(9680),c=n(2836),h=n(2360),d=n(1073),p=n(8461),f=n(7299),g=n(5129),m=n(2161),b=n(777),x=n(7988),y=n(6073),v=n(8436),w=n(373),k=n(5482),I=n(4384),S=n(3747),C=n(2263),N=n(6971).f,$=n(1894),T=n(7131),E=n(9370),R=n(1119),A=n(3052),F=n(5690),_=n(8497),D=n(7238),O=n(127),M=n(4422),L=n(4912),z=n(3586),P=n(6435),B=n(8805),W=P.f,U=B.f,V=s.RangeError,G=s.TypeError,H=s.Uint8Array,j="ArrayBuffer",K="Shared"+j,q="BYTES_PER_ELEMENT",X="prototype",Y=Array[X],J=u.ArrayBuffer,Z=u.DataView,Q=R(0),ee=R(2),te=R(3),ne=R(4),re=R(5),se=R(6),ae=A(!0),ie=A(!1),oe=_.values,ue=_.keys,le=_.entries,ce=Y.lastIndexOf,he=Y.reduce,de=Y.reduceRight,pe=Y.join,fe=Y.sort,ge=Y.slice,me=Y.toString,be=Y.toLocaleString,xe=E("iterator"),ye=E("toStringTag"),ve=T("typed_constructor"),we=T("def_constructor"),ke=o.CONSTR,Ie=o.TYPED,Se=o.VIEW,Ce="Wrong length!",Ne=R(1,(function(e,t){return Ae(F(e,e[we]),t)})),$e=a((function(){return 1===new H(new Uint16Array([1]).buffer)[0]})),Te=!!H&&!!H[X].set&&a((function(){new H(1).set({})})),Ee=function(e,t){var n=f(e);if(n<0||n%t)throw V("Wrong offset!");return n},Re=function(e){if(w(e)&&Ie in e)return e;throw G(e+" is not a typed array!")},Ae=function(e,t){if(!w(e)||!(ve in e))throw G("It is not a typed array constructor!");return new e(t)},Fe=function(e,t){return _e(F(e,e[we]),t)},_e=function(e,t){for(var n=0,r=t.length,s=Ae(e,r);r>n;)s[n]=t[n++];return s},De=function(e,t,n){W(e,t,{get:function(){return this._d[n]}})},Oe=function(e){var t,n,r,s,a,i,o=k(e),u=arguments.length,c=u>1?arguments[1]:void 0,h=void 0!==c,d=$(o);if(null!=d&&!I(d)){for(i=d.call(o),r=[],t=0;!(a=i.next()).done;t++)r.push(a.value);o=r}for(h&&u>2&&(c=l(c,arguments[2],2)),t=0,n=g(o.length),s=Ae(this,n);n>t;t++)s[t]=h?c(o[t],t):o[t];return s},Me=function(){for(var e=0,t=arguments.length,n=Ae(this,t);t>e;)n[e]=arguments[e++];return n},Le=!!H&&a((function(){be.call(new H(1))})),ze=function(){return be.apply(Le?ge.call(Re(this)):Re(this),arguments)},Pe={copyWithin:function(e,t){return z.call(Re(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return ne(Re(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return L.apply(Re(this),arguments)},filter:function(e){return Fe(this,ee(Re(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return re(Re(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return se(Re(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){Q(Re(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return ie(Re(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return ae(Re(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return pe.apply(Re(this),arguments)},lastIndexOf:function(e){return ce.apply(Re(this),arguments)},map:function(e){return Ne(Re(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return he.apply(Re(this),arguments)},reduceRight:function(e){return de.apply(Re(this),arguments)},reverse:function(){for(var e,t=this,n=Re(t).length,r=Math.floor(n/2),s=0;s<r;)e=t[s],t[s++]=t[--n],t[n]=e;return t},some:function(e){return te(Re(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return fe.call(Re(this),e)},subarray:function(e,t){var n=Re(this),r=n.length,s=b(e,r);return new(F(n,n[we]))(n.buffer,n.byteOffset+s*n.BYTES_PER_ELEMENT,g((void 0===t?r:b(t,r))-s))}},Be=function(e,t){return Fe(this,ge.call(Re(this),e,t))},We=function(e){Re(this);var t=Ee(arguments[1],1),n=this.length,r=k(e),s=g(r.length),a=0;if(s+t>n)throw V(Ce);for(;a<s;)this[t+a]=r[a++]},Ue={entries:function(){return le.call(Re(this))},keys:function(){return ue.call(Re(this))},values:function(){return oe.call(Re(this))}},Ve=function(e,t){return w(e)&&e[Ie]&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},Ge=function(e,t){return Ve(e,t=x(t,!0))?h(2,e[t]):U(e,t)},He=function(e,t,n){return!(Ve(e,t=x(t,!0))&&w(n)&&y(n,"value"))||y(n,"get")||y(n,"set")||n.configurable||y(n,"writable")&&!n.writable||y(n,"enumerable")&&!n.enumerable?W(e,t,n):(e[t]=n.value,e)};ke||(B.f=Ge,P.f=He),i(i.S+i.F*!ke,"Object",{getOwnPropertyDescriptor:Ge,defineProperty:He}),a((function(){me.call({})}))&&(me=be=function(){return pe.call(this)});var je=p({},Pe);p(je,Ue),d(je,xe,Ue.values),p(je,{slice:Be,set:We,constructor:function(){},toString:me,toLocaleString:ze}),De(je,"buffer","b"),De(je,"byteOffset","o"),De(je,"byteLength","l"),De(je,"length","e"),W(je,ye,{get:function(){return this[Ie]}}),e.exports=function(e,t,n,u){var l=e+((u=!!u)?"Clamped":"")+"Array",h="get"+e,p="set"+e,f=s[l],b=f||{},x=f&&C(f),y=!f||!o.ABV,k={},I=f&&f[X],$=function(e,n){W(e,n,{get:function(){return function(e,n){var r=e._d;return r.v[h](n*t+r.o,$e)}(this,n)},set:function(e){return function(e,n,r){var s=e._d;u&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),s.v[p](n*t+s.o,r,$e)}(this,n,e)},enumerable:!0})};y?(f=n((function(e,n,r,s){c(e,f,l,"_d");var a,i,o,u,h=0,p=0;if(w(n)){if(!(n instanceof J||(u=v(n))==j||u==K))return Ie in n?_e(f,n):Oe.call(f,n);a=n,p=Ee(r,t);var b=n.byteLength;if(void 0===s){if(b%t)throw V(Ce);if((i=b-p)<0)throw V(Ce)}else if((i=g(s)*t)+p>b)throw V(Ce);o=i/t}else o=m(n),a=new J(i=o*t);for(d(e,"_d",{b:a,o:p,l:i,e:o,v:new Z(a)});h<o;)$(e,h++)})),I=f[X]=S(je),d(I,"constructor",f)):a((function(){f(1)}))&&a((function(){new f(-1)}))&&O((function(e){new f,new f(null),new f(1.5),new f(e)}),!0)||(f=n((function(e,n,r,s){var a;return c(e,f,l),w(n)?n instanceof J||(a=v(n))==j||a==K?void 0!==s?new b(n,Ee(r,t),s):void 0!==r?new b(n,Ee(r,t)):new b(n):Ie in n?_e(f,n):Oe.call(f,n):new b(m(n))})),Q(x!==Function.prototype?N(b).concat(N(x)):N(b),(function(e){e in f||d(f,e,b[e])})),f[X]=I,r||(I.constructor=f));var T=I[xe],E=!!T&&("values"==T.name||null==T.name),R=Ue.values;d(f,ve,!0),d(I,Ie,l),d(I,Se,!0),d(I,we,f),(u?new f(1)[ye]==l:ye in I)||W(I,ye,{get:function(){return l}}),k[l]=f,i(i.G+i.W+i.F*(f!=b),k),i(i.S,l,{BYTES_PER_ELEMENT:t}),i(i.S+i.F*a((function(){b.of.call(f,1)})),l,{from:Oe,of:Me}),q in I||d(I,q,t),i(i.P,l,Pe),M(l),i(i.P+i.F*Te,l,{set:We}),i(i.P+i.F*!E,l,Ue),r||I.toString==me||(I.toString=me),i(i.P+i.F*a((function(){new f(1).slice()})),l,{slice:Be}),i(i.P+i.F*(a((function(){return[1,2].toLocaleString()!=new f([1,2]).toLocaleString()}))||!a((function(){I.toLocaleString.call([1,2])}))),l,{toLocaleString:ze}),D[l]=E?T:R,r||E||d(I,xe,R)}}else e.exports=function(){}},8696:(e,t,n)=>{e.exports=!n(1711)&&!n(1508)((function(){return 7!=Object.defineProperty(n(4622)("div"),"a",{get:function(){return 7}}).a}))},8702:(e,t,n)=>{var r=n(1226).parseInt,s=n(5073).trim,a=n(2119),i=/^[-+]?0[xX]/;e.exports=8!==r(a+"08")||22!==r(a+"0x16")?function(e,t){var n=s(String(e),3);return r(n,t>>>0||(i.test(n)?16:10))}:r},8704:(e,t,n)=>{var r=n(2203),s=n(1038);s&&r(r.S,"Reflect",{setPrototypeOf:function(e,t){s.check(e,t);try{return s.set(e,t),!0}catch(e){return!1}}})},8772:(e,t,n)=>{"use strict";var r=n(9841),s=n(9407);e.exports=n(4689)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(s(this,"Set"),e=0===e?0:e,e)}},r)},8773:(e,t,n)=>{"use strict";var r=n(2203),s=n(3052)(!1),a=[].indexOf,i=!!a&&1/[1].indexOf(1,-0)<0;r(r.P+r.F*(i||!n(6688)(a)),"Array",{indexOf:function(e){return i?a.apply(this,arguments)||0:s(this,e,arguments[1])}})},8805:(e,t,n)=>{var r=n(9661),s=n(2360),a=n(4473),i=n(7988),o=n(6073),u=n(8696),l=Object.getOwnPropertyDescriptor;t.f=n(1711)?l:function(e,t){if(e=a(e),t=i(t,!0),u)try{return l(e,t)}catch(e){}if(o(e,t))return s(!r.f.call(e,t),e[t])}},8861:(e,t,n)=>{var r=n(6435).f,s=Function.prototype,a=/^\s*function ([^ (]*)/,i="name";i in s||n(1711)&&r(s,i,{configurable:!0,get:function(){try{return(""+this).match(a)[1]}catch(e){return""}}})},8901:(e,t,n)=>{var r=n(2203);r(r.S,"System",{global:n(1226)})},8962:(e,t,n)=>{"use strict";var r=n(373),s=n(2263),a=n(9370)("hasInstance"),i=Function.prototype;a in i||n(6435).f(i,a,{value:function(e){if("function"!=typeof this||!r(e))return!1;if(!r(this.prototype))return e instanceof this;for(;e=s(e);)if(this.prototype===e)return!0;return!1}})},8977:(e,t,n)=>{"use strict";var r=n(2203),s=n(1044),a=n(5806),i=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(a);r(r.P+r.F*i,"String",{padEnd:function(e){return s(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},8980:(e,t,n)=>{var r=n(9370)("unscopables"),s=Array.prototype;null==s[r]&&n(1073)(s,r,{}),e.exports=function(e){s[r][e]=!0}},8986:(e,t,n)=>{var r=n(2203);r(r.S+r.F,"Object",{assign:n(1786)})},9070:(e,t,n)=>{"use strict";var r=n(2203),s=n(1226),a=n(3922),i=n(1580)(),o=n(9370)("observable"),u=n(8279),l=n(296),c=n(2836),h=n(8461),d=n(1073),p=n(1250),f=p.RETURN,g=function(e){return null==e?void 0:u(e)},m=function(e){var t=e._c;t&&(e._c=void 0,t())},b=function(e){return void 0===e._o},x=function(e){b(e)||(e._o=void 0,m(e))},y=function(e,t){l(e),this._c=void 0,this._o=e,e=new v(this);try{var n=t(e),r=n;null!=n&&("function"==typeof n.unsubscribe?n=function(){r.unsubscribe()}:u(n),this._c=n)}catch(t){return void e.error(t)}b(this)&&m(this)};y.prototype=h({},{unsubscribe:function(){x(this)}});var v=function(e){this._s=e};v.prototype=h({},{next:function(e){var t=this._s;if(!b(t)){var n=t._o;try{var r=g(n.next);if(r)return r.call(n,e)}catch(e){try{x(t)}finally{throw e}}}},error:function(e){var t=this._s;if(b(t))throw e;var n=t._o;t._o=void 0;try{var r=g(n.error);if(!r)throw e;e=r.call(n,e)}catch(e){try{m(t)}finally{throw e}}return m(t),e},complete:function(e){var t=this._s;if(!b(t)){var n=t._o;t._o=void 0;try{var r=g(n.complete);e=r?r.call(n,e):void 0}catch(e){try{m(t)}finally{throw e}}return m(t),e}}});var w=function(e){c(this,w,"Observable","_f")._f=u(e)};h(w.prototype,{subscribe:function(e){return new y(e,this._f)},forEach:function(e){var t=this;return new(a.Promise||s.Promise)((function(n,r){u(e);var s=t.subscribe({next:function(t){try{return e(t)}catch(e){r(e),s.unsubscribe()}},error:r,complete:n})}))}}),h(w,{from:function(e){var t="function"==typeof this?this:w,n=g(l(e)[o]);if(n){var r=l(n.call(e));return r.constructor===t?r:new t((function(e){return r.subscribe(e)}))}return new t((function(t){var n=!1;return i((function(){if(!n){try{if(p(e,!1,(function(e){if(t.next(e),n)return f}))===f)return}catch(e){if(n)throw e;return void t.error(e)}t.complete()}})),function(){n=!0}}))},of:function(){for(var e=0,t=arguments.length,n=new Array(t);e<t;)n[e]=arguments[e++];return new("function"==typeof this?this:w)((function(e){var t=!1;return i((function(){if(!t){for(var r=0;r<n.length;++r)if(e.next(n[r]),t)return;e.complete()}})),function(){t=!0}}))}}),d(w.prototype,o,(function(){return this})),r(r.G,{Observable:w}),n(4422)("Observable")},9088:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},9103:(e,t,n)=>{var r=n(432),s=n(296),a=r.has,i=r.key;r.exp({hasOwnMetadata:function(e,t){return a(e,s(t),arguments.length<3?void 0:i(arguments[2]))}})},9106:(e,t,n)=>{var r=n(1711),s=n(5507),a=n(4473),i=n(9661).f;e.exports=function(e){return function(t){for(var n,o=a(t),u=s(o),l=u.length,c=0,h=[];l>c;)n=u[c++],r&&!i.call(o,n)||h.push(e?[n,o[n]]:o[n]);return h}}},9110:(e,t,n)=>{n(8693)("Float64",8,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},9164:(e,t,n)=>{"use strict";var r=n(3747),s=n(2360),a=n(256),i={};n(1073)(i,n(9370)("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=r(i,{next:s(1,n)}),a(e,t+" Iterator")}},9172:(e,t,n)=>{var r=n(2203),s=Math.abs;r(r.S,"Math",{hypot:function(e,t){for(var n,r,a=0,i=0,o=arguments.length,u=0;i<o;)u<(n=s(arguments[i++]))?(a=a*(r=u/n)*r+1,u=n):a+=n>0?(r=n/u)*r:n;return u===1/0?1/0:u*Math.sqrt(a)}})},9249:(e,t,n)=>{e.exports=n(3056)("native-function-to-string",Function.toString)},9280:(e,t,n)=>{var r=n(2203);r(r.S,"Math",{clamp:function(e,t,n){return Math.min(n,Math.max(t,e))}})},9282:(e,t,n)=>{var r=n(373),s=n(9672).onFreeze;n(1231)("seal",(function(e){return function(t){return e&&r(t)?e(s(t)):t}}))},9295:(e,t,n)=>{n(8693)("Int8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},9370:(e,t,n)=>{var r=n(3056)("wks"),s=n(7131),a=n(1226).Symbol,i="function"==typeof a;(e.exports=function(e){return r[e]||(r[e]=i&&a[e]||(i?a:s)("Symbol."+e))}).store=r},9383:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},9396:(e,t,n)=>{var r=n(2203);r(r.S+r.F*!n(1711),"Object",{defineProperty:n(6435).f})},9402:(e,t,n)=>{"use strict";var r=n(7299),s=n(3116);e.exports=function(e){var t=String(s(this)),n="",a=r(e);if(a<0||a==1/0)throw RangeError("Count can't be negative");for(;a>0;(a>>>=1)&&(t+=t))1&a&&(n+=t);return n}},9405:(e,t,n)=>{n(1565),e.exports=n(3922).RegExp.escape},9407:(e,t,n)=>{var r=n(373);e.exports=function(e,t){if(!r(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},9413:(e,t,n)=>{n(3882)("WeakMap")},9435:(e,t,n)=>{var r=n(2203),s=n(4152),a=n(1046);r(r.S,"Math",{fscale:function(e,t,n,r,i){return a(s(e,t,n,r,i))}})},9499:(e,t,n)=>{n(8693)("Uint16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},9519:(e,t,n)=>{var r=n(432),s=n(296),a=r.key,i=r.map,o=r.store;r.exp({deleteMetadata:function(e,t){var n=arguments.length<3?void 0:a(arguments[2]),r=i(s(t),n,!1);if(void 0===r||!r.delete(e))return!1;if(r.size)return!0;var u=o.get(t);return u.delete(n),!!u.size||o.delete(t)}})},9582:(e,t,n)=>{var r=n(2203);r(r.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},9618:e=>{e.exports=!1},9661:(e,t)=>{t.f={}.propertyIsEnumerable},9672:(e,t,n)=>{var r=n(7131)("meta"),s=n(373),a=n(6073),i=n(6435).f,o=0,u=Object.isExtensible||function(){return!0},l=!n(1508)((function(){return u(Object.preventExtensions({}))})),c=function(e){i(e,r,{value:{i:"O"+ ++o,w:{}}})},h=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!s(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!a(e,r)){if(!u(e))return"F";if(!t)return"E";c(e)}return e[r].i},getWeak:function(e,t){if(!a(e,r)){if(!u(e))return!0;if(!t)return!1;c(e)}return e[r].w},onFreeze:function(e){return l&&h.NEED&&u(e)&&!a(e,r)&&c(e),e}}},9680:(e,t,n)=>{var r=n(8279);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,s){return e.call(t,n,r,s)}}return function(){return e.apply(t,arguments)}}},9721:(e,t,n)=>{var r=n(6861);e.exports=Array.isArray||function(e){return"Array"==r(e)}},9748:(e,t,n)=>{"use strict";var r=n(1226),s=n(1711),a=n(9618),i=n(7361),o=n(1073),u=n(8461),l=n(1508),c=n(2836),h=n(7299),d=n(5129),p=n(2161),f=n(6971).f,g=n(6435).f,m=n(4912),b=n(256),x="ArrayBuffer",y="DataView",v="prototype",w="Wrong index!",k=r[x],I=r[y],S=r.Math,C=r.RangeError,N=r.Infinity,$=k,T=S.abs,E=S.pow,R=S.floor,A=S.log,F=S.LN2,_="buffer",D="byteLength",O="byteOffset",M=s?"_b":_,L=s?"_l":D,z=s?"_o":O;function P(e,t,n){var r,s,a,i=new Array(n),o=8*n-t-1,u=(1<<o)-1,l=u>>1,c=23===t?E(2,-24)-E(2,-77):0,h=0,d=e<0||0===e&&1/e<0?1:0;for((e=T(e))!=e||e===N?(s=e!=e?1:0,r=u):(r=R(A(e)/F),e*(a=E(2,-r))<1&&(r--,a*=2),(e+=r+l>=1?c/a:c*E(2,1-l))*a>=2&&(r++,a/=2),r+l>=u?(s=0,r=u):r+l>=1?(s=(e*a-1)*E(2,t),r+=l):(s=e*E(2,l-1)*E(2,t),r=0));t>=8;i[h++]=255&s,s/=256,t-=8);for(r=r<<t|s,o+=t;o>0;i[h++]=255&r,r/=256,o-=8);return i[--h]|=128*d,i}function B(e,t,n){var r,s=8*n-t-1,a=(1<<s)-1,i=a>>1,o=s-7,u=n-1,l=e[u--],c=127&l;for(l>>=7;o>0;c=256*c+e[u],u--,o-=8);for(r=c&(1<<-o)-1,c>>=-o,o+=t;o>0;r=256*r+e[u],u--,o-=8);if(0===c)c=1-i;else{if(c===a)return r?NaN:l?-N:N;r+=E(2,t),c-=i}return(l?-1:1)*r*E(2,c-t)}function W(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function U(e){return[255&e]}function V(e){return[255&e,e>>8&255]}function G(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function H(e){return P(e,52,8)}function j(e){return P(e,23,4)}function K(e,t,n){g(e[v],t,{get:function(){return this[n]}})}function q(e,t,n,r){var s=p(+n);if(s+t>e[L])throw C(w);var a=e[M]._b,i=s+e[z],o=a.slice(i,i+t);return r?o:o.reverse()}function X(e,t,n,r,s,a){var i=p(+n);if(i+t>e[L])throw C(w);for(var o=e[M]._b,u=i+e[z],l=r(+s),c=0;c<t;c++)o[u+c]=l[a?c:t-c-1]}if(i.ABV){if(!l((function(){k(1)}))||!l((function(){new k(-1)}))||l((function(){return new k,new k(1.5),new k(NaN),k.name!=x}))){for(var Y,J=(k=function(e){return c(this,k),new $(p(e))})[v]=$[v],Z=f($),Q=0;Z.length>Q;)(Y=Z[Q++])in k||o(k,Y,$[Y]);a||(J.constructor=k)}var ee=new I(new k(2)),te=I[v].setInt8;ee.setInt8(0,2147483648),ee.setInt8(1,2147483649),!ee.getInt8(0)&&ee.getInt8(1)||u(I[v],{setInt8:function(e,t){te.call(this,e,t<<24>>24)},setUint8:function(e,t){te.call(this,e,t<<24>>24)}},!0)}else k=function(e){c(this,k,x);var t=p(e);this._b=m.call(new Array(t),0),this[L]=t},I=function(e,t,n){c(this,I,y),c(e,k,y);var r=e[L],s=h(t);if(s<0||s>r)throw C("Wrong offset!");if(s+(n=void 0===n?r-s:d(n))>r)throw C("Wrong length!");this[M]=e,this[z]=s,this[L]=n},s&&(K(k,D,"_l"),K(I,_,"_b"),K(I,D,"_l"),K(I,O,"_o")),u(I[v],{getInt8:function(e){return q(this,1,e)[0]<<24>>24},getUint8:function(e){return q(this,1,e)[0]},getInt16:function(e){var t=q(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=q(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return W(q(this,4,e,arguments[1]))},getUint32:function(e){return W(q(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return B(q(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return B(q(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){X(this,1,e,U,t)},setUint8:function(e,t){X(this,1,e,U,t)},setInt16:function(e,t){X(this,2,e,V,t,arguments[2])},setUint16:function(e,t){X(this,2,e,V,t,arguments[2])},setInt32:function(e,t){X(this,4,e,G,t,arguments[2])},setUint32:function(e,t){X(this,4,e,G,t,arguments[2])},setFloat32:function(e,t){X(this,4,e,j,t,arguments[2])},setFloat64:function(e,t){X(this,8,e,H,t,arguments[2])}});b(k,x),b(I,y),o(I[v],i.VIEW,!0),t[x]=k,t[y]=I},9811:(e,t,n)=>{"use strict";var r=n(768)(!0);n(8507)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})}))},9841:(e,t,n)=>{"use strict";var r=n(6435).f,s=n(3747),a=n(8461),i=n(9680),o=n(2836),u=n(1250),l=n(8507),c=n(8558),h=n(4422),d=n(1711),p=n(9672).fastKey,f=n(9407),g=d?"_s":"size",m=function(e,t){var n,r=p(t);if("F"!==r)return e._i[r];for(n=e._f;n;n=n.n)if(n.k==t)return n};e.exports={getConstructor:function(e,t,n,l){var c=e((function(e,r){o(e,c,t,"_i"),e._t=t,e._i=s(null),e._f=void 0,e._l=void 0,e[g]=0,null!=r&&u(r,n,e[l],e)}));return a(c.prototype,{clear:function(){for(var e=f(this,t),n=e._i,r=e._f;r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete n[r.i];e._f=e._l=void 0,e[g]=0},delete:function(e){var n=f(this,t),r=m(n,e);if(r){var s=r.n,a=r.p;delete n._i[r.i],r.r=!0,a&&(a.n=s),s&&(s.p=a),n._f==r&&(n._f=s),n._l==r&&(n._l=a),n[g]--}return!!r},forEach:function(e){f(this,t);for(var n,r=i(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(r(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!m(f(this,t),e)}}),d&&r(c.prototype,"size",{get:function(){return f(this,t)[g]}}),c},def:function(e,t,n){var r,s,a=m(e,t);return a?a.v=n:(e._l=a={i:s=p(t,!0),k:t,v:n,p:r=e._l,n:void 0,r:!1},e._f||(e._f=a),r&&(r.n=a),e[g]++,"F"!==s&&(e._i[s]=a)),e},getEntry:m,setStrong:function(e,t,n){l(e,t,(function(e,n){this._t=f(e,t),this._k=n,this._l=void 0}),(function(){for(var e=this,t=e._k,n=e._l;n&&n.r;)n=n.p;return e._t&&(e._l=n=n?n.n:e._t._f)?c(0,"keys"==t?n.k:"values"==t?n.v:[n.k,n.v]):(e._t=void 0,c(1))}),n?"entries":"values",!n,!0),h(t)}}},9873:(e,t,n)=>{"use strict";n(6984)("fontsize",(function(e){return function(t){return e(this,"font","size",t)}}))},9893:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var s=void 0!==n.layer;s&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,s&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},9929:(e,t,n)=>{"use strict";var r=n(2203),s=n(680),a=n(6861),i=n(777),o=n(5129),u=[].slice;r(r.P+r.F*n(1508)((function(){s&&u.call(s)})),"Array",{slice:function(e,t){var n=o(this.length),r=a(this);if(t=void 0===t?n:t,"Array"==r)return u.call(this,e,t);for(var s=i(e,n),l=i(t,n),c=o(l-s),h=new Array(c),d=0;d<c;d++)h[d]="String"==r?this.charAt(s+d):this[s+d];return h}})},9960:(e,t,n)=>{"use strict";n(6984)("italics",(function(e){return function(){return e(this,"i","","")}}))}}]);